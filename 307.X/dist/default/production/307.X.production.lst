

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Thu Jun 17 13:41:37 2021

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    41                           	dabs	1,0x7E,2
    42  0000                     
    43                           ; Version 2.20
    44                           ; Generated 12/02/2020 GMT
    45                           ; 
    46                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F877A Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     	;# 
    78  0001                     	;# 
    79  0002                     	;# 
    80  0003                     	;# 
    81  0004                     	;# 
    82  0005                     	;# 
    83  0006                     	;# 
    84  0007                     	;# 
    85  0008                     	;# 
    86  0009                     	;# 
    87  000A                     	;# 
    88  000B                     	;# 
    89  000C                     	;# 
    90  000D                     	;# 
    91  000E                     	;# 
    92  000E                     	;# 
    93  000F                     	;# 
    94  0010                     	;# 
    95  0011                     	;# 
    96  0012                     	;# 
    97  0013                     	;# 
    98  0014                     	;# 
    99  0015                     	;# 
   100  0015                     	;# 
   101  0016                     	;# 
   102  0017                     	;# 
   103  0018                     	;# 
   104  0019                     	;# 
   105  001A                     	;# 
   106  001B                     	;# 
   107  001B                     	;# 
   108  001C                     	;# 
   109  001D                     	;# 
   110  001E                     	;# 
   111  001F                     	;# 
   112  0081                     	;# 
   113  0085                     	;# 
   114  0086                     	;# 
   115  0087                     	;# 
   116  0088                     	;# 
   117  0089                     	;# 
   118  008C                     	;# 
   119  008D                     	;# 
   120  008E                     	;# 
   121  0091                     	;# 
   122  0092                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0098                     	;# 
   126  0099                     	;# 
   127  009C                     	;# 
   128  009D                     	;# 
   129  009E                     	;# 
   130  009F                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010F                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0008                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001D                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  0088                     	;# 
   177  0089                     	;# 
   178  008C                     	;# 
   179  008D                     	;# 
   180  008E                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  010C                     	;# 
   192  010D                     	;# 
   193  010E                     	;# 
   194  010F                     	;# 
   195  018C                     	;# 
   196  018D                     	;# 
   197  0011                     _TMR2	set	17
   198  0012                     _T2CON	set	18
   199  001F                     _ADCON0	set	31
   200  0009                     _PORTE	set	9
   201  0008                     _PORTD	set	8
   202  0007                     _PORTC	set	7
   203  0005                     _PORTA	set	5
   204  0012                     _T2CONbits	set	18
   205  0017                     _CCP1CONbits	set	23
   206  0015                     _CCPR1L	set	21
   207  001E                     _ADRESH	set	30
   208  001F                     _ADCON0bits	set	31
   209  0008                     _PORTDbits	set	8
   210  0006                     _PORTB	set	6
   211  0041                     _RD1	set	65
   212  0040                     _RD0	set	64
   213  009F                     _ADCON1	set	159
   214  0089                     _TRISE	set	137
   215  0087                     _TRISC	set	135
   216  0085                     _TRISA	set	133
   217  0081                     _OPTION_REGbits	set	129
   218  0087                     _TRISCbits	set	135
   219  0092                     _PR2	set	146
   220  009E                     _ADRESL	set	158
   221  0088                     _TRISD	set	136
   222  0086                     _TRISB	set	134
   223                           
   224                           	psect	strings
   225  0800                     __pstrings:
   226  0800                     stringtab:
   227  0800                     __stringtab:
   228                           
   229                           ;	String table - string pointers are 1 byte each
   230  0800  1BFF               	btfsc	btemp+1,7
   231  0801  280A               	ljmp	stringcode
   232  0802  1383               	bcf	3,7
   233  0803  187F               	btfsc	btemp+1,0
   234  0804  1783               	bsf	3,7
   235  0805  0800               	movf	0,w
   236  0806  0A84               	incf	4,f
   237  0807  1903               	skipnz
   238  0808  0AFF               	incf	btemp+1,f
   239  0809  0008               	return
   240  080A                     stringcode:
   241  080A                     stringdir:
   242  080A  3008               	movlw	high stringdir
   243  080B  008A               	movwf	10
   244  080C  0804               	movf	4,w
   245  080D  0A84               	incf	4,f
   246  080E  0782               	addwf	2,f
   247  080F                     __stringbase:
   248  080F  3400               	retlw	0
   249  0810                     __end_of__stringtab:
   250  0810                     STR_3:
   251  0810  3454               	retlw	84	;'T'
   252  0811  3465               	retlw	101	;'e'
   253  0812  346D               	retlw	109	;'m'
   254  0813  3470               	retlw	112	;'p'
   255  0814  3465               	retlw	101	;'e'
   256  0815  3472               	retlw	114	;'r'
   257  0816  3461               	retlw	97	;'a'
   258  0817  3474               	retlw	116	;'t'
   259  0818  3475               	retlw	117	;'u'
   260  0819  3472               	retlw	114	;'r'
   261  081A  3465               	retlw	101	;'e'
   262  081B  3420               	retlw	32	;' '
   263  081C  3469               	retlw	105	;'i'
   264  081D  3473               	retlw	115	;'s'
   265  081E  343A               	retlw	58	;':'
   266  081F  3420               	retlw	32	;' '
   267  0820  3400               	retlw	0
   268  0821                     STR_2:
   269  0821  3425               	retlw	37	;'%'
   270  0822  342E               	retlw	46	;'.'
   271  0823  3431               	retlw	49	;'1'
   272  0824  3436               	retlw	54	;'6'
   273  0825  3473               	retlw	115	;'s'
   274  0826  3400               	retlw	0
   275  0827                     STR_1:
   276  0827  3425               	retlw	37	;'%'
   277  0828  342E               	retlw	46	;'.'
   278  0829  342A               	retlw	42	;'*'
   279  082A  3466               	retlw	102	;'f'
   280  082B  3400               	retlw	0
   281  082C                     STR_4:
   282  082C  34B0               	retlw	-80
   283  082D  3443               	retlw	67	;'C'
   284  082E  3420               	retlw	32	;' '
   285  082F  3400               	retlw	0
   286                           
   287                           	psect	cinit
   288  07F0                     start_initialization:	
   289                           ; #config settings
   290                           
   291  07F0                     __initialization:
   292                           
   293                           ; Clear objects allocated to BITBANK0
   294  07F0  1283               	bcf	3,5	;RP0=0, select bank0
   295  07F1  1303               	bcf	3,6	;RP1=0, select bank0
   296  07F2  01E3               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   297                           
   298                           ; Clear objects allocated to BANK0
   299  07F3  1383               	bcf	3,7	;select IRP bank0
   300  07F4  304D               	movlw	low __pbssBANK0
   301  07F5  0084               	movwf	4
   302  07F6  3063               	movlw	low (__pbssBANK0+22)
   303  07F7  120A  158A  2266  120A  118A  	fcall	clear_ram0
   304  07FC                     end_of_initialization:	
   305                           ;End of C runtime variable initialization code
   306                           
   307  07FC                     __end_of__initialization:
   308  07FC  0183               	clrf	3
   309  07FD  120A  118A  2C9E   	ljmp	_main	;jump to C main() function
   310                           
   311                           	psect	bitbssBANK0
   312  0318                     __pbitbssBANK0:
   313  0318                     _lcd_cursor_row:
   314  0318                     	ds	1
   315  0319                     _entry_mode_s:
   316  0319                     	ds	1
   317  031A                     _entry_mode_i_d:
   318  031A                     	ds	1
   319  031B                     _lcd_lines:
   320  031B                     	ds	1
   321  031C                     _lcd_RAM:
   322  031C                     	ds	1
   323                           
   324                           	psect	bssBANK0
   325  004D                     __pbssBANK0:
   326  004D                     lcd_write_int@F995:
   327  004D                     	ds	12
   328  0059                     _last_temp:
   329  0059                     	ds	2
   330  005B                     _temperature1:
   331  005B                     	ds	2
   332  005D                     _temperature:
   333  005D                     	ds	2
   334  005F                     _right_edge:
   335  005F                     	ds	1
   336  0060                     _left_edge:
   337  0060                     	ds	1
   338  0061                     _lcd_shift_pos:
   339  0061                     	ds	1
   340  0062                     _lcd_cursor_col:
   341  0062                     	ds	1
   342                           
   343                           	psect	clrtext
   344  0A66                     clear_ram0:	
   345                           ;	Called with FSR containing the base address, and
   346                           ;	W with the last address+1
   347                           
   348  0A66  0064               	clrwdt	;clear the watchdog before getting into this loop
   349  0A67                     clrloop0:
   350  0A67  0180               	clrf	0	;clear RAM location pointed to by FSR
   351  0A68  0A84               	incf	4,f	;increment pointer
   352  0A69  0604               	xorwf	4,w	;XOR with final address
   353  0A6A  1903               	btfsc	3,2	;have we reached the end yet?
   354  0A6B  3400               	retlw	0	;all done for this memory range, return
   355  0A6C  0604               	xorwf	4,w	;XOR again to restore value
   356  0A6D  2A67               	goto	clrloop0	;do the next byte
   357                           
   358                           	psect	cstackCOMMON
   359  0070                     __pcstackCOMMON:
   360  0070                     ?_lcd_set_ddram_adr:
   361  0070                     ?_lcd_wait:	
   362                           ; 1 bit 
   363                           
   364  0070                     ?_lcd_shift_left:	
   365                           ; 1 bytes @ 0x0
   366                           
   367  0070                     ?_lcd_shift_right:	
   368                           ; 1 bytes @ 0x0
   369                           
   370  0070                     ?_lcd_read:	
   371                           ; 1 bytes @ 0x0
   372                           
   373  0070                     ??_lcd_read:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  0070                     ?_lcd_clr_disp:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  0070                     ?_lcd_write_char:	
   380                           ; 1 bytes @ 0x0
   381                           
   382  0070                     ?_lcd_cursor_left:	
   383                           ; 1 bytes @ 0x0
   384                           
   385  0070                     ?_lcd_cursor_right:	
   386                           ; 1 bytes @ 0x0
   387                           
   388  0070                     ?_lcd_backspace:	
   389                           ; 1 bytes @ 0x0
   390                           
   391  0070                     ?_update_temp:	
   392                           ; 1 bytes @ 0x0
   393                           
   394  0070                     ?_pwm_init:	
   395                           ; 1 bytes @ 0x0
   396                           
   397  0070                     ??_pwm_init:	
   398                           ; 1 bytes @ 0x0
   399                           
   400  0070                     ?_main:	
   401                           ; 1 bytes @ 0x0
   402                           
   403  0070                     ?___wmul:	
   404                           ; 1 bytes @ 0x0
   405                           
   406  0070                     ?___lldiv:	
   407                           ; 2 bytes @ 0x0
   408                           
   409  0070                     ?___llmod:	
   410                           ; 4 bytes @ 0x0
   411                           
   412  0070                     ?___xxtofl:	
   413                           ; 4 bytes @ 0x0
   414                           
   415  0070                     ___wmul@multiplier:	
   416                           ; 4 bytes @ 0x0
   417                           
   418  0070                     ___lldiv@divisor:	
   419                           ; 2 bytes @ 0x0
   420                           
   421  0070                     ___llmod@divisor:	
   422                           ; 4 bytes @ 0x0
   423                           
   424  0070                     ___xxtofl@val:	
   425                           ; 4 bytes @ 0x0
   426                           
   427                           
   428                           ; 4 bytes @ 0x0
   429  0070                     	ds	2
   430  0072                     lcd_read@reg:
   431  0072                     ___wmul@multiplicand:	
   432                           ; 1 bytes @ 0x2
   433                           
   434                           
   435                           ; 2 bytes @ 0x2
   436  0072                     	ds	1
   437  0073                     lcd_read@data:
   438                           
   439                           ; 1 bytes @ 0x3
   440  0073                     	ds	1
   441  0074                     ??_lcd_wait:
   442  0074                     ?_lcd_send:	
   443                           ; 1 bytes @ 0x4
   444                           
   445  0074                     ??___wmul:	
   446                           ; 1 bytes @ 0x4
   447                           
   448  0074                     ??___xxtofl:	
   449                           ; 1 bytes @ 0x4
   450                           
   451  0074                     lcd_send@data:	
   452                           ; 1 bytes @ 0x4
   453                           
   454  0074                     ___wmul@product:	
   455                           ; 1 bytes @ 0x4
   456                           
   457  0074                     ___lldiv@dividend:	
   458                           ; 2 bytes @ 0x4
   459                           
   460  0074                     ___llmod@dividend:	
   461                           ; 4 bytes @ 0x4
   462                           
   463                           
   464                           ; 4 bytes @ 0x4
   465  0074                     	ds	1
   466  0075                     ??_lcd_send:
   467                           
   468                           ; 1 bytes @ 0x5
   469  0075                     	ds	1
   470  0076                     ?___awdiv:
   471  0076                     ___awdiv@divisor:	
   472                           ; 2 bytes @ 0x6
   473                           
   474                           
   475                           ; 2 bytes @ 0x6
   476  0076                     	ds	1
   477  0077                     lcd_send@reg:
   478                           
   479                           ; 1 bytes @ 0x7
   480  0077                     	ds	1
   481  0078                     ?_lcd_entry_mode:
   482  0078                     ?_lcd_display_set:	
   483                           ; 1 bytes @ 0x8
   484                           
   485  0078                     ?_lcd_cur_disp_shift:	
   486                           ; 1 bytes @ 0x8
   487                           
   488  0078                     ?_lcd_function_set:	
   489                           ; 1 bytes @ 0x8
   490                           
   491  0078                     ??_lcd_set_ddram_adr:	
   492                           ; 1 bytes @ 0x8
   493                           
   494  0078                     ??___lldiv:	
   495                           ; 1 bytes @ 0x8
   496                           
   497  0078                     ??___llmod:	
   498                           ; 1 bytes @ 0x8
   499                           
   500  0078                     lcd_entry_mode@s:	
   501                           ; 1 bytes @ 0x8
   502                           
   503  0078                     lcd_display_set@c:	
   504                           ; 1 bytes @ 0x8
   505                           
   506  0078                     lcd_cur_disp_shift@r_l:	
   507                           ; 1 bytes @ 0x8
   508                           
   509  0078                     lcd_function_set@n:	
   510                           ; 1 bytes @ 0x8
   511                           
   512  0078                     ___xxtofl@sign:	
   513                           ; 1 bytes @ 0x8
   514                           
   515  0078                     ___awdiv@dividend:	
   516                           ; 1 bytes @ 0x8
   517                           
   518                           
   519                           ; 2 bytes @ 0x8
   520  0078                     	ds	1
   521  0079                     ??_lcd_entry_mode:
   522  0079                     ??_lcd_cur_disp_shift:	
   523                           ; 1 bytes @ 0x9
   524                           
   525  0079                     lcd_display_set@b:	
   526                           ; 1 bytes @ 0x9
   527                           
   528  0079                     lcd_function_set@f:	
   529                           ; 1 bytes @ 0x9
   530                           
   531  0079                     ___llmod@counter:	
   532                           ; 1 bytes @ 0x9
   533                           
   534  0079                     ___xxtofl@exp:	
   535                           ; 1 bytes @ 0x9
   536                           
   537  0079                     ___lldiv@quotient:	
   538                           ; 1 bytes @ 0x9
   539                           
   540                           
   541                           ; 4 bytes @ 0x9
   542  0079                     	ds	1
   543  007A                     ??_lcd_display_set:
   544  007A                     ??_lcd_function_set:	
   545                           ; 1 bytes @ 0xA
   546                           
   547  007A                     ??___awdiv:	
   548                           ; 1 bytes @ 0xA
   549                           
   550  007A                     ___xxtofl@arg:	
   551                           ; 1 bytes @ 0xA
   552                           
   553                           
   554                           ; 4 bytes @ 0xA
   555  007A                     	ds	1
   556  007B                     _lcd_set_ddram_adr$286:
   557                           
   558                           ; 2 bytes @ 0xB
   559  007B                     	ds	1
   560  007C                     lcd_entry_mode@i_d:
   561  007C                     lcd_cur_disp_shift@s_c:	
   562                           ; 1 bytes @ 0xC
   563                           
   564                           
   565                           ; 1 bytes @ 0xC
   566  007C                     	ds	1
   567  007D                     ??_lcd_shift_left:
   568  007D                     ??_lcd_shift_right:	
   569                           ; 1 bytes @ 0xD
   570                           
   571  007D                     ??_lcd_clr_disp:	
   572                           ; 1 bytes @ 0xD
   573                           
   574  007D                     lcd_set_ddram_adr@address:	
   575                           ; 1 bytes @ 0xD
   576                           
   577  007D                     ___lldiv@counter:	
   578                           ; 1 bytes @ 0xD
   579                           
   580                           
   581                           ; 1 bytes @ 0xD
   582  007D                     	ds	1
   583  007E                     ??_lcd_write_str:
   584                           
   585                           	psect	cstackBANK0
   586  0020                     __pcstackBANK0:	
   587                           ; 1 bytes @ 0xE
   588                           
   589  0020                     ?___fldiv:
   590  0020                     lcd_display_set@d:	
   591                           ; 4 bytes @ 0x0
   592                           
   593  0020                     lcd_function_set@dl:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0020                     lcd_shift_left@n:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0020                     lcd_shift_right@n:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0020                     ___awdiv@counter:	
   603                           ; 1 bytes @ 0x0
   604                           
   605  0020                     ___fldiv@a:	
   606                           ; 1 bytes @ 0x0
   607                           
   608                           
   609                           ; 4 bytes @ 0x0
   610  0020                     	ds	1
   611  0021                     ?_lcd_init:
   612  0021                     ??_lcd_cursor_left:	
   613                           ; 1 bytes @ 0x1
   614                           
   615  0021                     lcd_init@f:	
   616                           ; 1 bytes @ 0x1
   617                           
   618  0021                     lcd_shift_left@edge:	
   619                           ; 1 bytes @ 0x1
   620                           
   621  0021                     ___awdiv@sign:	
   622                           ; 1 bytes @ 0x1
   623                           
   624                           
   625                           ; 1 bytes @ 0x1
   626  0021                     	ds	1
   627  0022                     ??_lcd_write_char:
   628  0022                     ??_lcd_init:	
   629                           ; 1 bytes @ 0x2
   630                           
   631  0022                     ?_lcd_set_cursor:	
   632                           ; 1 bytes @ 0x2
   633                           
   634  0022                     ??_lcd_cursor_right:	
   635                           ; 1 bytes @ 0x2
   636                           
   637  0022                     lcd_set_cursor@col:	
   638                           ; 1 bytes @ 0x2
   639                           
   640  0022                     lcd_cursor_left@n:	
   641                           ; 1 bytes @ 0x2
   642                           
   643  0022                     ___awdiv@quotient:	
   644                           ; 1 bytes @ 0x2
   645                           
   646                           
   647                           ; 2 bytes @ 0x2
   648  0022                     	ds	1
   649  0023                     ??_lcd_set_cursor:
   650                           
   651                           ; 1 bytes @ 0x3
   652  0023                     	ds	1
   653  0024                     ___fldiv@b:
   654                           
   655                           ; 4 bytes @ 0x4
   656  0024                     	ds	1
   657  0025                     _lcd_init$303:
   658                           
   659                           ; 2 bytes @ 0x5
   660  0025                     	ds	1
   661  0026                     lcd_write_char@data:
   662  0026                     lcd_cursor_right@n:	
   663                           ; 1 bytes @ 0x6
   664                           
   665                           
   666                           ; 1 bytes @ 0x6
   667  0026                     	ds	1
   668  0027                     lcd_init@n:
   669  0027                     _lcd_write_char$291:	
   670                           ; 1 bytes @ 0x7
   671                           
   672                           
   673                           ; 2 bytes @ 0x7
   674  0027                     	ds	1
   675  0028                     ??___fldiv:
   676                           
   677                           ; 1 bytes @ 0x8
   678  0028                     	ds	1
   679  0029                     _lcd_write_char$292:
   680                           
   681                           ; 2 bytes @ 0x9
   682  0029                     	ds	1
   683  002A                     _lcd_set_cursor$308:
   684                           
   685                           ; 2 bytes @ 0xA
   686  002A                     	ds	1
   687  002B                     _lcd_write_char$293:
   688                           
   689                           ; 2 bytes @ 0xB
   690  002B                     	ds	1
   691  002C                     _lcd_set_cursor$309:
   692                           
   693                           ; 2 bytes @ 0xC
   694  002C                     	ds	1
   695  002D                     ??_lcd_backspace:
   696  002D                     ?_lcd_write_str:	
   697                           ; 1 bytes @ 0xD
   698                           
   699  002D                     lcd_write_str@s:	
   700                           ; 1 bytes @ 0xD
   701                           
   702  002D                     ___fldiv@rem:	
   703                           ; 2 bytes @ 0xD
   704                           
   705                           
   706                           ; 4 bytes @ 0xD
   707  002D                     	ds	1
   708  002E                     _lcd_set_cursor$310:
   709                           
   710                           ; 2 bytes @ 0xE
   711  002E                     	ds	1
   712  002F                     lcd_backspace@n:
   713  002F                     lcd_write_str@p:	
   714                           ; 1 bytes @ 0xF
   715                           
   716                           
   717                           ; 2 bytes @ 0xF
   718  002F                     	ds	1
   719  0030                     _lcd_set_cursor$311:
   720  0030                     _lcd_backspace$340:	
   721                           ; 2 bytes @ 0x10
   722                           
   723                           
   724                           ; 2 bytes @ 0x10
   725  0030                     	ds	1
   726  0031                     ?_lcd_write_int:
   727  0031                     ___fldiv@sign:	
   728                           ; 1 bytes @ 0x11
   729                           
   730  0031                     lcd_write_int@n:	
   731                           ; 1 bytes @ 0x11
   732                           
   733                           
   734                           ; 4 bytes @ 0x11
   735  0031                     	ds	1
   736  0032                     lcd_backspace@edge:
   737  0032                     _lcd_set_cursor$312:	
   738                           ; 1 bytes @ 0x12
   739                           
   740  0032                     ___fldiv@new_exp:	
   741                           ; 2 bytes @ 0x12
   742                           
   743                           
   744                           ; 2 bytes @ 0x12
   745  0032                     	ds	2
   746  0034                     _lcd_set_cursor$313:
   747  0034                     ___fldiv@grs:	
   748                           ; 2 bytes @ 0x14
   749                           
   750                           
   751                           ; 4 bytes @ 0x14
   752  0034                     	ds	1
   753  0035                     ??_lcd_write_int:
   754                           
   755                           ; 1 bytes @ 0x15
   756  0035                     	ds	1
   757  0036                     lcd_set_cursor@row:
   758  0036                     lcd_write_int@s:	
   759                           ; 1 bytes @ 0x16
   760                           
   761                           
   762                           ; 12 bytes @ 0x16
   763  0036                     	ds	2
   764  0038                     ___fldiv@bexp:
   765                           
   766                           ; 1 bytes @ 0x18
   767  0038                     	ds	1
   768  0039                     ___fldiv@aexp:
   769                           
   770                           ; 1 bytes @ 0x19
   771  0039                     	ds	1
   772  003A                     ?___fltol:
   773  003A                     ___fltol@f1:	
   774                           ; 4 bytes @ 0x1A
   775                           
   776                           
   777                           ; 4 bytes @ 0x1A
   778  003A                     	ds	4
   779  003E                     ??___fltol:
   780                           
   781                           ; 1 bytes @ 0x1E
   782  003E                     	ds	4
   783  0042                     lcd_write_int@p:
   784                           
   785                           ; 1 bytes @ 0x22
   786  0042                     	ds	1
   787  0043                     ___fltol@sign1:
   788                           
   789                           ; 1 bytes @ 0x23
   790  0043                     	ds	1
   791  0044                     ___fltol@exp1:
   792                           
   793                           ; 1 bytes @ 0x24
   794  0044                     	ds	1
   795  0045                     ??_update_temp:
   796                           
   797                           ; 1 bytes @ 0x25
   798  0045                     	ds	3
   799  0048                     ??_main:
   800                           
   801                           ; 1 bytes @ 0x28
   802  0048                     	ds	1
   803  0049                     main@i:
   804                           
   805                           ; 2 bytes @ 0x29
   806  0049                     	ds	2
   807  004B                     main@i_417:
   808                           
   809                           ; 2 bytes @ 0x2B
   810  004B                     	ds	2
   811                           
   812                           	psect	maintext
   813  049E                     __pmaintext:	
   814 ;;
   815 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   816 ;;
   817 ;; *************** function _main *****************
   818 ;; Defined at:
   819 ;;		line 48 in file "307.c"
   820 ;; Parameters:    Size  Location     Type
   821 ;;		None
   822 ;; Auto vars:     Size  Location     Type
   823 ;;  i               2   43[BANK0 ] int 
   824 ;;  i               2   41[BANK0 ] int 
   825 ;; Return value:  Size  Location     Type
   826 ;;                  1    wreg      void 
   827 ;; Registers used:
   828 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   829 ;; Tracked objects:
   830 ;;		On entry : B00/0
   831 ;;		On exit  : 0/0
   832 ;;		Unchanged: 0/0
   833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   834 ;;      Params:         0       0       0       0       0
   835 ;;      Locals:         0       4       0       0       0
   836 ;;      Temps:          0       1       0       0       0
   837 ;;      Totals:         0       5       0       0       0
   838 ;;Total ram usage:        5 bytes
   839 ;; Hardware stack levels required when called:    9
   840 ;; This function calls:
   841 ;;		___awdiv
   842 ;;		___wmul
   843 ;;		_lcd_init
   844 ;;		_lcd_set_cursor
   845 ;;		_lcd_write_str
   846 ;;		_pwm_init
   847 ;;		_update_temp
   848 ;; This function is called by:
   849 ;;		Startup code after reset
   850 ;; This function uses a non-reentrant model
   851 ;;
   852                           
   853                           
   854                           ;psect for function _main
   855  049E                     _main:
   856  049E                     l2710:	
   857                           ;incstack = 0
   858 ;; hardware stack exceeded
   859                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   860                           
   861  049E  1683               	bsf	3,5	;RP0=1, select bank1
   862  049F  1303               	bcf	3,6	;RP1=0, select bank1
   863  04A0  1781               	bsf	1,7	;volatile
   864  04A1                     l2712:
   865  04A1  3001               	movlw	1
   866  04A2  0085               	movwf	5	;volatile
   867  04A3                     l2714:
   868  04A3  0189               	clrf	9	;volatile
   869  04A4  0188               	clrf	8	;volatile
   870  04A5  0187               	clrf	7	;volatile
   871  04A6  0186               	clrf	6	;volatile
   872  04A7                     l2716:
   873  04A7  1283               	bcf	3,5	;RP0=0, select bank0
   874  04A8  1303               	bcf	3,6	;RP1=0, select bank0
   875  04A9  0189               	clrf	9	;volatile
   876  04AA  0188               	clrf	8	;volatile
   877  04AB  0187               	clrf	7	;volatile
   878  04AC  0186               	clrf	6	;volatile
   879  04AD  0185               	clrf	5	;volatile
   880  04AE  30C1               	movlw	193
   881  04AF  009F               	movwf	31	;volatile
   882  04B0  308E               	movlw	142
   883  04B1  1683               	bsf	3,5	;RP0=1, select bank1
   884  04B2  1303               	bcf	3,6	;RP1=0, select bank1
   885  04B3  009F               	movwf	31	;volatile
   886  04B4                     l2718:
   887  04B4  1283               	bcf	3,5	;RP0=0, select bank0
   888  04B5  1303               	bcf	3,6	;RP1=0, select bank0
   889  04B6  0192               	clrf	18	;volatile
   890  04B7                     l2720:
   891  04B7  120A  158A  226E  120A  118A  	fcall	_pwm_init
   892  04BC                     l2722:
   893  04BC  1283               	bcf	3,5	;RP0=0, select bank0
   894  04BD  1303               	bcf	3,6	;RP1=0, select bank0
   895  04BE  0191               	clrf	17	;volatile
   896  04BF                     l2724:
   897  04BF  1512               	bsf	18,2	;volatile
   898  04C0                     l2726:
   899  04C0  01A1               	clrf	lcd_init@f
   900  04C1  3001               	movlw	1
   901  04C2  120A  118A  2277  120A  118A  	fcall	_lcd_init
   902  04C7                     l2728:
   903  04C7  1283               	bcf	3,5	;RP0=0, select bank0
   904  04C8  1303               	bcf	3,6	;RP1=0, select bank0
   905  04C9  01A2               	clrf	lcd_set_cursor@col
   906  04CA  3000               	movlw	0
   907  04CB  120A  118A  233C  120A  118A  	fcall	_lcd_set_cursor
   908  04D0                     l2730:
   909  04D0  3001               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   910  04D1  1283               	bcf	3,5	;RP0=0, select bank0
   911  04D2  1303               	bcf	3,6	;RP1=0, select bank0
   912  04D3  00AD               	movwf	lcd_write_str@s
   913  04D4  3080               	movlw	128
   914  04D5  00AE               	movwf	lcd_write_str@s+1
   915  04D6  120A  158A  2321  120A  118A  	fcall	_lcd_write_str
   916  04DB                     l2732:
   917  04DB  3004               	movlw	4
   918  04DC  1283               	bcf	3,5	;RP0=0, select bank0
   919  04DD  1303               	bcf	3,6	;RP1=0, select bank0
   920  04DE  00C8               	movwf	??_main
   921  04DF  0848               	movf	??_main,w
   922  04E0  00A2               	movwf	lcd_set_cursor@col
   923  04E1  3001               	movlw	1
   924  04E2  120A  118A  233C  120A  118A  	fcall	_lcd_set_cursor
   925  04E7                     l2734:
   926  04E7  301D               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   927  04E8  1283               	bcf	3,5	;RP0=0, select bank0
   928  04E9  1303               	bcf	3,6	;RP1=0, select bank0
   929  04EA  00AD               	movwf	lcd_write_str@s
   930  04EB  3080               	movlw	128
   931  04EC  00AE               	movwf	lcd_write_str@s+1
   932  04ED  120A  158A  2321  120A  118A  	fcall	_lcd_write_str
   933  04F2                     l2736:
   934  04F2  1283               	bcf	3,5	;RP0=0, select bank0
   935  04F3  1303               	bcf	3,6	;RP1=0, select bank0
   936  04F4  01A2               	clrf	lcd_set_cursor@col
   937  04F5  3001               	movlw	1
   938  04F6  120A  118A  233C  120A  118A  	fcall	_lcd_set_cursor
   939  04FB                     l2738:
   940  04FB  1283               	bcf	3,5	;RP0=0, select bank0
   941  04FC  1303               	bcf	3,6	;RP1=0, select bank0
   942  04FD  1588               	bsf	8,3	;volatile
   943  04FE                     l2740:
   944  04FE  120A  118A  2095  120A  118A  	fcall	_update_temp
   945  0503                     l2742:
   946  0503  1283               	bcf	3,5	;RP0=0, select bank0
   947  0504  1303               	bcf	3,6	;RP1=0, select bank0
   948  0505  085C               	movf	_temperature1+1,w
   949  0506  3A80               	xorlw	128
   950  0507  00FF               	movwf	btemp+1
   951  0508  3080               	movlw	128
   952  0509  027F               	subwf	btemp+1,w
   953  050A  1D03               	skipz
   954  050B  2D0E               	goto	u4175
   955  050C  3033               	movlw	51
   956  050D  025B               	subwf	_temperature1,w
   957  050E                     u4175:
   958  050E  1C03               	skipc
   959  050F  2D11               	goto	u4171
   960  0510  2D12               	goto	u4170
   961  0511                     u4171:
   962  0511  2D39               	goto	l2748
   963  0512                     u4170:
   964  0512                     l2744:
   965  0512  1283               	bcf	3,5	;RP0=0, select bank0
   966  0513  1303               	bcf	3,6	;RP1=0, select bank0
   967  0514  1408               	bsf	8,0	;volatile
   968  0515                     l2746:
   969  0515  3064               	movlw	100
   970  0516  00F6               	movwf	___awdiv@divisor
   971  0517  3000               	movlw	0
   972  0518  00F7               	movwf	___awdiv@divisor+1
   973  0519  1683               	bsf	3,5	;RP0=1, select bank1
   974  051A  1303               	bcf	3,6	;RP1=0, select bank1
   975  051B  0812               	movf	18,w	;volatile
   976  051C  3E01               	addlw	1
   977  051D  00F0               	movwf	___wmul@multiplier
   978  051E  3000               	movlw	0
   979  051F  1803               	skipnc
   980  0520  3001               	movlw	1
   981  0521  00F1               	movwf	___wmul@multiplier+1
   982  0522  3063               	movlw	99
   983  0523  00F2               	movwf	___wmul@multiplicand
   984  0524  3000               	movlw	0
   985  0525  00F3               	movwf	___wmul@multiplicand+1
   986  0526  120A  158A  22A7  120A  118A  	fcall	___wmul
   987  052B  0871               	movf	?___wmul+1,w
   988  052C  00F9               	movwf	___awdiv@dividend+1
   989  052D  0870               	movf	?___wmul,w
   990  052E  00F8               	movwf	___awdiv@dividend
   991  052F  120A  158A  2632  120A  118A  	fcall	___awdiv
   992  0534  0876               	movf	?___awdiv,w
   993  0535  1283               	bcf	3,5	;RP0=0, select bank0
   994  0536  1303               	bcf	3,6	;RP1=0, select bank0
   995  0537  0095               	movwf	21	;volatile
   996  0538  2DCA               	goto	l2762
   997  0539                     l2748:
   998  0539  1283               	bcf	3,5	;RP0=0, select bank0
   999  053A  1303               	bcf	3,6	;RP1=0, select bank0
  1000  053B  085C               	movf	_temperature1+1,w
  1001  053C  3A80               	xorlw	128
  1002  053D  00FF               	movwf	btemp+1
  1003  053E  3080               	movlw	128
  1004  053F  027F               	subwf	btemp+1,w
  1005  0540  1D03               	skipz
  1006  0541  2D44               	goto	u4185
  1007  0542  3028               	movlw	40
  1008  0543  025B               	subwf	_temperature1,w
  1009  0544                     u4185:
  1010  0544  1C03               	skipc
  1011  0545  2D47               	goto	u4181
  1012  0546  2D48               	goto	u4180
  1013  0547                     u4181:
  1014  0547  2D6F               	goto	l2754
  1015  0548                     u4180:
  1016  0548                     l2750:
  1017  0548  1283               	bcf	3,5	;RP0=0, select bank0
  1018  0549  1303               	bcf	3,6	;RP1=0, select bank0
  1019  054A  1408               	bsf	8,0	;volatile
  1020  054B                     l2752:
  1021  054B  3064               	movlw	100
  1022  054C  00F6               	movwf	___awdiv@divisor
  1023  054D  3000               	movlw	0
  1024  054E  00F7               	movwf	___awdiv@divisor+1
  1025  054F  1683               	bsf	3,5	;RP0=1, select bank1
  1026  0550  1303               	bcf	3,6	;RP1=0, select bank1
  1027  0551  0812               	movf	18,w	;volatile
  1028  0552  3E01               	addlw	1
  1029  0553  00F0               	movwf	___wmul@multiplier
  1030  0554  3000               	movlw	0
  1031  0555  1803               	skipnc
  1032  0556  3001               	movlw	1
  1033  0557  00F1               	movwf	___wmul@multiplier+1
  1034  0558  3042               	movlw	66
  1035  0559  00F2               	movwf	___wmul@multiplicand
  1036  055A  3000               	movlw	0
  1037  055B  00F3               	movwf	___wmul@multiplicand+1
  1038  055C  120A  158A  22A7  120A  118A  	fcall	___wmul
  1039  0561  0871               	movf	?___wmul+1,w
  1040  0562  00F9               	movwf	___awdiv@dividend+1
  1041  0563  0870               	movf	?___wmul,w
  1042  0564  00F8               	movwf	___awdiv@dividend
  1043  0565  120A  158A  2632  120A  118A  	fcall	___awdiv
  1044  056A  0876               	movf	?___awdiv,w
  1045  056B  1283               	bcf	3,5	;RP0=0, select bank0
  1046  056C  1303               	bcf	3,6	;RP1=0, select bank0
  1047  056D  0095               	movwf	21	;volatile
  1048  056E  2DCA               	goto	l2762
  1049  056F                     l2754:
  1050  056F  1283               	bcf	3,5	;RP0=0, select bank0
  1051  0570  1303               	bcf	3,6	;RP1=0, select bank0
  1052  0571  085C               	movf	_temperature1+1,w
  1053  0572  3A80               	xorlw	128
  1054  0573  00FF               	movwf	btemp+1
  1055  0574  3080               	movlw	128
  1056  0575  027F               	subwf	btemp+1,w
  1057  0576  1D03               	skipz
  1058  0577  2D7A               	goto	u4195
  1059  0578  301E               	movlw	30
  1060  0579  025B               	subwf	_temperature1,w
  1061  057A                     u4195:
  1062  057A  1C03               	skipc
  1063  057B  2D7D               	goto	u4191
  1064  057C  2D7E               	goto	u4190
  1065  057D                     u4191:
  1066  057D  2DA5               	goto	l360
  1067  057E                     u4190:
  1068  057E                     l2756:
  1069  057E  1283               	bcf	3,5	;RP0=0, select bank0
  1070  057F  1303               	bcf	3,6	;RP1=0, select bank0
  1071  0580  1408               	bsf	8,0	;volatile
  1072  0581                     l2758:
  1073  0581  3064               	movlw	100
  1074  0582  00F6               	movwf	___awdiv@divisor
  1075  0583  3000               	movlw	0
  1076  0584  00F7               	movwf	___awdiv@divisor+1
  1077  0585  1683               	bsf	3,5	;RP0=1, select bank1
  1078  0586  1303               	bcf	3,6	;RP1=0, select bank1
  1079  0587  0812               	movf	18,w	;volatile
  1080  0588  3E01               	addlw	1
  1081  0589  00F0               	movwf	___wmul@multiplier
  1082  058A  3000               	movlw	0
  1083  058B  1803               	skipnc
  1084  058C  3001               	movlw	1
  1085  058D  00F1               	movwf	___wmul@multiplier+1
  1086  058E  3021               	movlw	33
  1087  058F  00F2               	movwf	___wmul@multiplicand
  1088  0590  3000               	movlw	0
  1089  0591  00F3               	movwf	___wmul@multiplicand+1
  1090  0592  120A  158A  22A7  120A  118A  	fcall	___wmul
  1091  0597  0871               	movf	?___wmul+1,w
  1092  0598  00F9               	movwf	___awdiv@dividend+1
  1093  0599  0870               	movf	?___wmul,w
  1094  059A  00F8               	movwf	___awdiv@dividend
  1095  059B  120A  158A  2632  120A  118A  	fcall	___awdiv
  1096  05A0  0876               	movf	?___awdiv,w
  1097  05A1  1283               	bcf	3,5	;RP0=0, select bank0
  1098  05A2  1303               	bcf	3,6	;RP1=0, select bank0
  1099  05A3  0095               	movwf	21	;volatile
  1100  05A4  2DCA               	goto	l2762
  1101  05A5                     l360:
  1102  05A5  1283               	bcf	3,5	;RP0=0, select bank0
  1103  05A6  1303               	bcf	3,6	;RP1=0, select bank0
  1104  05A7  1008               	bcf	8,0	;volatile
  1105  05A8                     l2760:
  1106  05A8  3064               	movlw	100
  1107  05A9  00F6               	movwf	___awdiv@divisor
  1108  05AA  3000               	movlw	0
  1109  05AB  00F7               	movwf	___awdiv@divisor+1
  1110  05AC  1683               	bsf	3,5	;RP0=1, select bank1
  1111  05AD  1303               	bcf	3,6	;RP1=0, select bank1
  1112  05AE  0812               	movf	18,w	;volatile
  1113  05AF  3E01               	addlw	1
  1114  05B0  00F0               	movwf	___wmul@multiplier
  1115  05B1  3000               	movlw	0
  1116  05B2  1803               	skipnc
  1117  05B3  3001               	movlw	1
  1118  05B4  00F1               	movwf	___wmul@multiplier+1
  1119  05B5  3000               	movlw	0
  1120  05B6  00F2               	movwf	___wmul@multiplicand
  1121  05B7  00F3               	movwf	___wmul@multiplicand+1
  1122  05B8  120A  158A  22A7  120A  118A  	fcall	___wmul
  1123  05BD  0871               	movf	?___wmul+1,w
  1124  05BE  00F9               	movwf	___awdiv@dividend+1
  1125  05BF  0870               	movf	?___wmul,w
  1126  05C0  00F8               	movwf	___awdiv@dividend
  1127  05C1  120A  158A  2632  120A  118A  	fcall	___awdiv
  1128  05C6  0876               	movf	?___awdiv,w
  1129  05C7  1283               	bcf	3,5	;RP0=0, select bank0
  1130  05C8  1303               	bcf	3,6	;RP1=0, select bank0
  1131  05C9  0095               	movwf	21	;volatile
  1132  05CA                     l2762:
  1133  05CA  085C               	movf	_temperature1+1,w
  1134  05CB  3A80               	xorlw	128
  1135  05CC  00FF               	movwf	btemp+1
  1136  05CD  3080               	movlw	128
  1137  05CE  027F               	subwf	btemp+1,w
  1138  05CF  1D03               	skipz
  1139  05D0  2DD3               	goto	u4205
  1140  05D1  3037               	movlw	55
  1141  05D2  025B               	subwf	_temperature1,w
  1142  05D3                     u4205:
  1143  05D3  1C03               	skipc
  1144  05D4  2DD6               	goto	u4201
  1145  05D5  2DD7               	goto	u4200
  1146  05D6                     u4201:
  1147  05D6  2CFE               	goto	l2740
  1148  05D7                     u4200:
  1149  05D7                     l2764:
  1150  05D7  1283               	bcf	3,5	;RP0=0, select bank0
  1151  05D8  1303               	bcf	3,6	;RP1=0, select bank0
  1152  05D9  1488               	bsf	8,1	;volatile
  1153  05DA                     l2766:
  1154  05DA  300A               	movlw	10
  1155  05DB  00C9               	movwf	main@i
  1156  05DC  3000               	movlw	0
  1157  05DD  00CA               	movwf	main@i+1
  1158  05DE  2DE4               	goto	l2770
  1159  05DF                     l2768:
  1160  05DF  120A  118A  2095  120A  118A  	fcall	_update_temp
  1161  05E4                     l2770:
  1162  05E4  30FF               	movlw	255
  1163  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  1164  05E6  1303               	bcf	3,6	;RP1=0, select bank0
  1165  05E7  07C9               	addwf	main@i,f
  1166  05E8  1803               	skipnc
  1167  05E9  0ACA               	incf	main@i+1,f
  1168  05EA  30FF               	movlw	255
  1169  05EB  07CA               	addwf	main@i+1,f
  1170  05EC  0A49               	incf	main@i,w
  1171  05ED  1D03               	skipz
  1172  05EE  2DF3               	goto	u4211
  1173  05EF  0A4A               	incf	main@i+1,w
  1174  05F0  1D03               	btfss	3,2
  1175  05F1  2DF3               	goto	u4211
  1176  05F2  2DF4               	goto	u4210
  1177  05F3                     u4211:
  1178  05F3  2DDF               	goto	l2768
  1179  05F4                     u4210:
  1180  05F4                     l365:
  1181  05F4  1088               	bcf	8,1	;volatile
  1182  05F5                     l2772:
  1183  05F5  300A               	movlw	10
  1184  05F6  00CB               	movwf	main@i_417
  1185  05F7  3000               	movlw	0
  1186  05F8  00CC               	movwf	main@i_417+1
  1187  05F9  2DFF               	goto	l2776
  1188  05FA                     l2774:
  1189  05FA  120A  118A  2095  120A  118A  	fcall	_update_temp
  1190  05FF                     l2776:
  1191  05FF  30FF               	movlw	255
  1192  0600  1283               	bcf	3,5	;RP0=0, select bank0
  1193  0601  1303               	bcf	3,6	;RP1=0, select bank0
  1194  0602  07CB               	addwf	main@i_417,f
  1195  0603  1803               	skipnc
  1196  0604  0ACC               	incf	main@i_417+1,f
  1197  0605  30FF               	movlw	255
  1198  0606  07CC               	addwf	main@i_417+1,f
  1199  0607  0A4B               	incf	main@i_417,w
  1200  0608  1D03               	skipz
  1201  0609  2E0E               	goto	u4221
  1202  060A  0A4C               	incf	main@i_417+1,w
  1203  060B  1D03               	btfss	3,2
  1204  060C  2E0E               	goto	u4221
  1205  060D  2E0F               	goto	u4220
  1206  060E                     u4221:
  1207  060E  2DFA               	goto	l2774
  1208  060F                     u4220:
  1209  060F  2CFE               	goto	l2740
  1210  0610  120A  118A  2800   	ljmp	start
  1211  0613                     __end_of_main:
  1212                           
  1213                           	psect	text1
  1214  0095                     __ptext1:	
  1215 ;; *************** function _update_temp *****************
  1216 ;; Defined at:
  1217 ;;		line 18 in file "307.c"
  1218 ;; Parameters:    Size  Location     Type
  1219 ;;		None
  1220 ;; Auto vars:     Size  Location     Type
  1221 ;;		None
  1222 ;; Return value:  Size  Location     Type
  1223 ;;                  1    wreg      void 
  1224 ;; Registers used:
  1225 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1226 ;; Tracked objects:
  1227 ;;		On entry : 0/0
  1228 ;;		On exit  : 0/0
  1229 ;;		Unchanged: 0/0
  1230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1231 ;;      Params:         0       0       0       0       0
  1232 ;;      Locals:         0       0       0       0       0
  1233 ;;      Temps:          0       3       0       0       0
  1234 ;;      Totals:         0       3       0       0       0
  1235 ;;Total ram usage:        3 bytes
  1236 ;; Hardware stack levels used:    1
  1237 ;; Hardware stack levels required when called:    8
  1238 ;; This function calls:
  1239 ;;		___fldiv
  1240 ;;		___fltol
  1241 ;;		___xxtofl
  1242 ;;		_lcd_backspace
  1243 ;;		_lcd_write_int
  1244 ;; This function is called by:
  1245 ;;		_main
  1246 ;; This function uses a non-reentrant model
  1247 ;;
  1248                           
  1249                           
  1250                           ;psect for function _update_temp
  1251  0095                     _update_temp:
  1252  0095                     l2518:	
  1253                           ;incstack = 0
  1254 ;; hardware stack exceeded
  1255                           ; Regs used in _update_temp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1256                           
  1257  0095  30C7               	movlw	-57
  1258  0096  1283               	bcf	3,5	;RP0=0, select bank0
  1259  0097  1303               	bcf	3,6	;RP1=0, select bank0
  1260  0098  059F               	andwf	31,f	;volatile
  1261  0099                     l2520:
  1262  0099  300D               	movlw	13
  1263  009A  1283               	bcf	3,5	;RP0=0, select bank0
  1264  009B  1303               	bcf	3,6	;RP1=0, select bank0
  1265  009C  00C6               	movwf	??_update_temp+1
  1266  009D  30FB               	movlw	251
  1267  009E  00C5               	movwf	??_update_temp
  1268  009F                     u4237:
  1269  009F  0BC5               	decfsz	??_update_temp,f
  1270  00A0  289F               	goto	u4237
  1271  00A1  0BC6               	decfsz	??_update_temp+1,f
  1272  00A2  289F               	goto	u4237
  1273  00A3                     l2522:
  1274  00A3  1283               	bcf	3,5	;RP0=0, select bank0
  1275  00A4  1303               	bcf	3,6	;RP1=0, select bank0
  1276  00A5  151F               	bsf	31,2	;volatile
  1277  00A6  28AF               	goto	l2526
  1278  00A7                     l2524:
  1279  00A7  081E               	movf	30,w	;volatile
  1280  00A8  00DE               	movwf	_temperature+1
  1281  00A9  1683               	bsf	3,5	;RP0=1, select bank1
  1282  00AA  1303               	bcf	3,6	;RP1=0, select bank1
  1283  00AB  081E               	movf	30,w	;volatile
  1284  00AC  1283               	bcf	3,5	;RP0=0, select bank0
  1285  00AD  1303               	bcf	3,6	;RP1=0, select bank0
  1286  00AE  00DD               	movwf	_temperature
  1287  00AF                     l2526:
  1288  00AF  191F               	btfsc	31,2	;volatile
  1289  00B0  28B2               	goto	u3811
  1290  00B1  28B3               	goto	u3810
  1291  00B2                     u3811:
  1292  00B2  28A7               	goto	l2524
  1293  00B3                     u3810:
  1294  00B3                     l2528:
  1295  00B3  085D               	movf	_temperature,w
  1296  00B4  00F0               	movwf	___xxtofl@val
  1297  00B5  085E               	movf	_temperature+1,w
  1298  00B6  00F1               	movwf	___xxtofl@val+1
  1299  00B7  3000               	movlw	0
  1300  00B8  1BF1               	btfsc	___xxtofl@val+1,7
  1301  00B9  30FF               	movlw	255
  1302  00BA  00F2               	movwf	___xxtofl@val+2
  1303  00BB  00F3               	movwf	___xxtofl@val+3
  1304  00BC  3001               	movlw	1
  1305  00BD  120A  118A  21BD  120A  118A  	fcall	___xxtofl
  1306  00C2  0873               	movf	?___xxtofl+3,w
  1307  00C3  1283               	bcf	3,5	;RP0=0, select bank0
  1308  00C4  1303               	bcf	3,6	;RP1=0, select bank0
  1309  00C5  00A7               	movwf	___fldiv@b+3
  1310  00C6  0872               	movf	?___xxtofl+2,w
  1311  00C7  00A6               	movwf	___fldiv@b+2
  1312  00C8  0871               	movf	?___xxtofl+1,w
  1313  00C9  00A5               	movwf	___fldiv@b+1
  1314  00CA  0870               	movf	?___xxtofl,w
  1315  00CB  00A4               	movwf	___fldiv@b
  1316  00CC  3040               	movlw	64
  1317  00CD  00A3               	movwf	___fldiv@a+3
  1318  00CE  3002               	movlw	2
  1319  00CF  00A2               	movwf	___fldiv@a+2
  1320  00D0  30F1               	movlw	241
  1321  00D1  00A1               	movwf	___fldiv@a+1
  1322  00D2  30AA               	movlw	170
  1323  00D3  00A0               	movwf	___fldiv@a
  1324  00D4  120A  118A  2613  120A  118A  	fcall	___fldiv
  1325  00D9  1283               	bcf	3,5	;RP0=0, select bank0
  1326  00DA  1303               	bcf	3,6	;RP1=0, select bank0
  1327  00DB  0823               	movf	?___fldiv+3,w
  1328  00DC  00BD               	movwf	___fltol@f1+3
  1329  00DD  0822               	movf	?___fldiv+2,w
  1330  00DE  00BC               	movwf	___fltol@f1+2
  1331  00DF  0821               	movf	?___fldiv+1,w
  1332  00E0  00BB               	movwf	___fltol@f1+1
  1333  00E1  0820               	movf	?___fldiv,w
  1334  00E2  00BA               	movwf	___fltol@f1
  1335  00E3  120A  158A  2784  120A  118A  	fcall	___fltol
  1336  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  1337  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  1338  00EA  083B               	movf	?___fltol+1,w
  1339  00EB  00DC               	movwf	_temperature1+1
  1340  00EC  083A               	movf	?___fltol,w
  1341  00ED  00DB               	movwf	_temperature1
  1342  00EE                     l2530:
  1343  00EE  085C               	movf	_temperature1+1,w
  1344  00EF  065A               	xorwf	_last_temp+1,w
  1345  00F0  1D03               	skipz
  1346  00F1  28F4               	goto	u3825
  1347  00F2  085B               	movf	_temperature1,w
  1348  00F3  0659               	xorwf	_last_temp,w
  1349  00F4                     u3825:
  1350  00F4  1903               	skipnz
  1351  00F5  28F7               	goto	u3821
  1352  00F6  28F8               	goto	u3820
  1353  00F7                     u3821:
  1354  00F7  2914               	goto	l2538
  1355  00F8                     u3820:
  1356  00F8                     l2532:
  1357  00F8  3005               	movlw	5
  1358  00F9  120A  158A  2709  120A  118A  	fcall	_lcd_backspace
  1359  00FE                     l2534:
  1360  00FE  1283               	bcf	3,5	;RP0=0, select bank0
  1361  00FF  1303               	bcf	3,6	;RP1=0, select bank0
  1362  0100  085B               	movf	_temperature1,w
  1363  0101  00B1               	movwf	lcd_write_int@n
  1364  0102  085C               	movf	_temperature1+1,w
  1365  0103  00B2               	movwf	lcd_write_int@n+1
  1366  0104  3000               	movlw	0
  1367  0105  1BB2               	btfsc	lcd_write_int@n+1,7
  1368  0106  30FF               	movlw	255
  1369  0107  00B3               	movwf	lcd_write_int@n+2
  1370  0108  00B4               	movwf	lcd_write_int@n+3
  1371  0109  120A  118A  2013  120A  118A  	fcall	_lcd_write_int
  1372  010E                     l2536:
  1373  010E  1283               	bcf	3,5	;RP0=0, select bank0
  1374  010F  1303               	bcf	3,6	;RP1=0, select bank0
  1375  0110  085C               	movf	_temperature1+1,w
  1376  0111  00DA               	movwf	_last_temp+1
  1377  0112  085B               	movf	_temperature1,w
  1378  0113  00D9               	movwf	_last_temp
  1379  0114                     l2538:
  1380  0114  3002               	movlw	2
  1381  0115  1283               	bcf	3,5	;RP0=0, select bank0
  1382  0116  1303               	bcf	3,6	;RP1=0, select bank0
  1383  0117  00C7               	movwf	??_update_temp+2
  1384  0118  3045               	movlw	69
  1385  0119  00C6               	movwf	??_update_temp+1
  1386  011A  30A9               	movlw	169
  1387  011B  00C5               	movwf	??_update_temp
  1388  011C                     u4247:
  1389  011C  0BC5               	decfsz	??_update_temp,f
  1390  011D  291C               	goto	u4247
  1391  011E  0BC6               	decfsz	??_update_temp+1,f
  1392  011F  291C               	goto	u4247
  1393  0120  0BC7               	decfsz	??_update_temp+2,f
  1394  0121  291C               	goto	u4247
  1395  0122                     l347:
  1396  0122  0008               	return
  1397  0123                     __end_of_update_temp:
  1398                           
  1399                           	psect	text2
  1400  0013                     __ptext2:	
  1401 ;; *************** function _lcd_write_int *****************
  1402 ;; Defined at:
  1403 ;;		line 489 in file "./lcd.h"
  1404 ;; Parameters:    Size  Location     Type
  1405 ;;  n               4   17[BANK0 ] unsigned long 
  1406 ;; Auto vars:     Size  Location     Type
  1407 ;;  s              12   22[BANK0 ] unsigned char [12]
  1408 ;;  p               1   34[BANK0 ] PTR unsigned char 
  1409 ;;		 -> lcd_write_int@s(12), 
  1410 ;; Return value:  Size  Location     Type
  1411 ;;                  1    wreg      unsigned char 
  1412 ;; Registers used:
  1413 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1414 ;; Tracked objects:
  1415 ;;		On entry : 0/0
  1416 ;;		On exit  : 0/0
  1417 ;;		Unchanged: 0/0
  1418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1419 ;;      Params:         0       4       0       0       0
  1420 ;;      Locals:         0      13       0       0       0
  1421 ;;      Temps:          0       1       0       0       0
  1422 ;;      Totals:         0      18       0       0       0
  1423 ;;Total ram usage:       18 bytes
  1424 ;; Hardware stack levels used:    1
  1425 ;; Hardware stack levels required when called:    7
  1426 ;; This function calls:
  1427 ;;		___lldiv
  1428 ;;		___llmod
  1429 ;;		_lcd_write_char
  1430 ;;		_lcd_write_str
  1431 ;; This function is called by:
  1432 ;;		_update_temp
  1433 ;; This function uses a non-reentrant model
  1434 ;;
  1435                           
  1436                           
  1437                           ;psect for function _lcd_write_int
  1438  0013                     _lcd_write_int:
  1439  0013                     l2152:	
  1440                           ;incstack = 0
  1441 ;; hardware stack exceeded
  1442                           ; Regs used in _lcd_write_int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1443                           
  1444                           
  1445                           ;./lcd.h: 489: unsigned char lcd_write_int(unsigned long n);./lcd.h: 490: {;./lcd.h: 491
      +                          :     char s[12] = {0}, *p = s + sizeof(s) - 1;
  1446  0013  3036               	movlw	lcd_write_int@s& (0+255)
  1447  0014  0084               	movwf	4
  1448  0015  300C               	movlw	12
  1449  0016  00FF               	movwf	btemp+1
  1450  0017                     u2990:
  1451  0017  1383               	bcf	3,7	;select IRP bank0
  1452  0018  0180               	clrf	0
  1453  0019  0A84               	incf	4,f
  1454  001A  0BFF               	decfsz	btemp+1,f
  1455  001B  2817               	goto	u2990
  1456  001C                     l2154:
  1457  001C  3041               	movlw	(low ((lcd_write_int@s| 0+11)))& (0+255)
  1458  001D  1283               	bcf	3,5	;RP0=0, select bank0
  1459  001E  1303               	bcf	3,6	;RP1=0, select bank0
  1460  001F  00B5               	movwf	??_lcd_write_int
  1461  0020  0835               	movf	??_lcd_write_int,w
  1462  0021  00C2               	movwf	lcd_write_int@p
  1463  0022                     l2156:
  1464                           
  1465                           ;./lcd.h: 493:     if ((long)n < 0) {
  1466  0022  1FB4               	btfss	lcd_write_int@n+3,7
  1467  0023  2825               	goto	u3001
  1468  0024  2826               	goto	u3000
  1469  0025                     u3001:
  1470  0025  283B               	goto	l2164
  1471  0026                     u3000:
  1472  0026                     l2158:
  1473                           
  1474                           ;./lcd.h: 494:         lcd_write_char('-');
  1475  0026  302D               	movlw	45
  1476  0027  120A  118A  2123  120A  118A  	fcall	_lcd_write_char
  1477  002C                     l2160:
  1478                           
  1479                           ;./lcd.h: 495:         p--;
  1480  002C  3001               	movlw	1
  1481  002D  1283               	bcf	3,5	;RP0=0, select bank0
  1482  002E  1303               	bcf	3,6	;RP1=0, select bank0
  1483  002F  02C2               	subwf	lcd_write_int@p,f
  1484  0030                     l2162:
  1485                           
  1486                           ;./lcd.h: 496:         n = -(long)n;
  1487  0030  09B1               	comf	lcd_write_int@n,f
  1488  0031  09B2               	comf	lcd_write_int@n+1,f
  1489  0032  09B3               	comf	lcd_write_int@n+2,f
  1490  0033  09B4               	comf	lcd_write_int@n+3,f
  1491  0034  0AB1               	incf	lcd_write_int@n,f
  1492  0035  1903               	skipnz
  1493  0036  0AB2               	incf	lcd_write_int@n+1,f
  1494  0037  1903               	skipnz
  1495  0038  0AB3               	incf	lcd_write_int@n+2,f
  1496  0039  1903               	skipnz
  1497  003A  0AB4               	incf	lcd_write_int@n+3,f
  1498  003B                     l2164:
  1499  003B  3000               	movlw	0
  1500  003C  00F3               	movwf	___llmod@divisor+3
  1501  003D  3000               	movlw	0
  1502  003E  00F2               	movwf	___llmod@divisor+2
  1503  003F  3000               	movlw	0
  1504  0040  00F1               	movwf	___llmod@divisor+1
  1505  0041  300A               	movlw	10
  1506  0042  00F0               	movwf	___llmod@divisor
  1507  0043  0834               	movf	lcd_write_int@n+3,w
  1508  0044  00F7               	movwf	___llmod@dividend+3
  1509  0045  0833               	movf	lcd_write_int@n+2,w
  1510  0046  00F6               	movwf	___llmod@dividend+2
  1511  0047  0832               	movf	lcd_write_int@n+1,w
  1512  0048  00F5               	movwf	___llmod@dividend+1
  1513  0049  0831               	movf	lcd_write_int@n,w
  1514  004A  00F4               	movwf	___llmod@dividend
  1515  004B  120A  158A  246E  120A  118A  	fcall	___llmod
  1516  0050  0870               	movf	?___llmod,w
  1517  0051  3E30               	addlw	48
  1518  0052  1283               	bcf	3,5	;RP0=0, select bank0
  1519  0053  1303               	bcf	3,6	;RP1=0, select bank0
  1520  0054  00B5               	movwf	??_lcd_write_int
  1521  0055  3001               	movlw	1
  1522  0056  02C2               	subwf	lcd_write_int@p,f
  1523  0057  0842               	movf	lcd_write_int@p,w
  1524  0058  0084               	movwf	4
  1525  0059  0835               	movf	??_lcd_write_int,w
  1526  005A  1383               	bcf	3,7	;select IRP bank0
  1527  005B  0080               	movwf	0
  1528  005C                     l2166:
  1529  005C  3036               	movlw	(low (lcd_write_int@s| 0))& (0+255)
  1530  005D  00B5               	movwf	??_lcd_write_int
  1531  005E  0842               	movf	lcd_write_int@p,w
  1532  005F  0235               	subwf	??_lcd_write_int,w
  1533  0060  1803               	skipnc
  1534  0061  2863               	goto	u3011
  1535  0062  2864               	goto	u3010
  1536  0063                     u3011:
  1537  0063  288B               	goto	l2170
  1538  0064                     u3010:
  1539  0064                     l2168:
  1540  0064  3000               	movlw	0
  1541  0065  00F3               	movwf	___lldiv@divisor+3
  1542  0066  3000               	movlw	0
  1543  0067  00F2               	movwf	___lldiv@divisor+2
  1544  0068  3000               	movlw	0
  1545  0069  00F1               	movwf	___lldiv@divisor+1
  1546  006A  300A               	movlw	10
  1547  006B  00F0               	movwf	___lldiv@divisor
  1548  006C  0834               	movf	lcd_write_int@n+3,w
  1549  006D  00F7               	movwf	___lldiv@dividend+3
  1550  006E  0833               	movf	lcd_write_int@n+2,w
  1551  006F  00F6               	movwf	___lldiv@dividend+2
  1552  0070  0832               	movf	lcd_write_int@n+1,w
  1553  0071  00F5               	movwf	___lldiv@dividend+1
  1554  0072  0831               	movf	lcd_write_int@n,w
  1555  0073  00F4               	movwf	___lldiv@dividend
  1556  0074  120A  158A  25CC  120A  118A  	fcall	___lldiv
  1557  0079  0873               	movf	?___lldiv+3,w
  1558  007A  1283               	bcf	3,5	;RP0=0, select bank0
  1559  007B  1303               	bcf	3,6	;RP1=0, select bank0
  1560  007C  00B4               	movwf	lcd_write_int@n+3
  1561  007D  0872               	movf	?___lldiv+2,w
  1562  007E  00B3               	movwf	lcd_write_int@n+2
  1563  007F  0871               	movf	?___lldiv+1,w
  1564  0080  00B2               	movwf	lcd_write_int@n+1
  1565  0081  0870               	movf	?___lldiv,w
  1566  0082  00B1               	movwf	lcd_write_int@n
  1567  0083  0834               	movf	lcd_write_int@n+3,w
  1568  0084  0433               	iorwf	lcd_write_int@n+2,w
  1569  0085  0432               	iorwf	lcd_write_int@n+1,w
  1570  0086  0431               	iorwf	lcd_write_int@n,w
  1571  0087  1D03               	skipz
  1572  0088  288A               	goto	u3021
  1573  0089  288B               	goto	u3020
  1574  008A                     u3021:
  1575  008A  283B               	goto	l2164
  1576  008B                     u3020:
  1577  008B                     l2170:
  1578                           
  1579                           ;./lcd.h: 501:     lcd_write_str(p);
  1580  008B  0842               	movf	lcd_write_int@p,w
  1581  008C  00AD               	movwf	lcd_write_str@s
  1582  008D  3000               	movlw	0
  1583  008E  00AE               	movwf	lcd_write_str@s+1
  1584  008F  120A  158A  2321  120A  118A  	fcall	_lcd_write_str
  1585  0094                     l300:
  1586  0094  0008               	return
  1587  0095                     __end_of_lcd_write_int:
  1588                           
  1589                           	psect	text3
  1590  0B21                     __ptext3:	
  1591 ;; *************** function _lcd_write_str *****************
  1592 ;; Defined at:
  1593 ;;		line 477 in file "./lcd.h"
  1594 ;; Parameters:    Size  Location     Type
  1595 ;;  s               2   13[BANK0 ] const PTR const unsigned
  1596 ;;		 -> STR_4(4), STR_3(17), lcd_write_float@s(17), lcd_write_int@s(12), 
  1597 ;; Auto vars:     Size  Location     Type
  1598 ;;  p               2   15[BANK0 ] PTR const unsigned char 
  1599 ;;		 -> STR_4(4), STR_3(17), lcd_write_float@s(17), lcd_write_int@s(12), 
  1600 ;; Return value:  Size  Location     Type
  1601 ;;                  1    wreg      unsigned char 
  1602 ;; Registers used:
  1603 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1604 ;; Tracked objects:
  1605 ;;		On entry : 0/0
  1606 ;;		On exit  : 0/0
  1607 ;;		Unchanged: 0/0
  1608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1609 ;;      Params:         0       2       0       0       0
  1610 ;;      Locals:         0       2       0       0       0
  1611 ;;      Temps:          0       0       0       0       0
  1612 ;;      Totals:         0       4       0       0       0
  1613 ;;Total ram usage:        4 bytes
  1614 ;; Hardware stack levels used:    1
  1615 ;; Hardware stack levels required when called:    6
  1616 ;; This function calls:
  1617 ;;		_lcd_write_char
  1618 ;; This function is called by:
  1619 ;;		_lcd_write_int
  1620 ;;		_main
  1621 ;;		_lcd_write_float
  1622 ;; This function uses a non-reentrant model
  1623 ;;
  1624                           
  1625                           
  1626                           ;psect for function _lcd_write_str
  1627  0B21                     _lcd_write_str:
  1628  0B21                     l2046:	
  1629                           ;incstack = 0
  1630 ;; hardware stack exceeded
  1631                           ; Regs used in _lcd_write_str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1632                           
  1633                           
  1634                           ;./lcd.h: 477: unsigned char lcd_write_str(const char * const restrict s);./lcd.h: 478: 
      +                          {;./lcd.h: 479:     const char * restrict p = s;
  1635  0B21  1283               	bcf	3,5	;RP0=0, select bank0
  1636  0B22  1303               	bcf	3,6	;RP1=0, select bank0
  1637  0B23  082D               	movf	lcd_write_str@s,w
  1638  0B24  00AF               	movwf	lcd_write_str@p
  1639  0B25  082E               	movf	lcd_write_str@s+1,w
  1640  0B26  00B0               	movwf	lcd_write_str@p+1
  1641                           
  1642                           ;./lcd.h: 481:     while(*p) lcd_write_char(*p++);
  1643  0B27  2B3E               	goto	l2052
  1644  0B28                     l2048:
  1645  0B28  0830               	movf	lcd_write_str@p+1,w
  1646  0B29  00FF               	movwf	btemp+1
  1647  0B2A  082F               	movf	lcd_write_str@p,w
  1648  0B2B  0084               	movwf	4
  1649  0B2C  120A  158A  2000  120A  158A  	fcall	stringtab
  1650  0B31  120A  118A  2123  120A  158A  	fcall	_lcd_write_char
  1651  0B36                     l2050:
  1652  0B36  3001               	movlw	1
  1653  0B37  1283               	bcf	3,5	;RP0=0, select bank0
  1654  0B38  1303               	bcf	3,6	;RP1=0, select bank0
  1655  0B39  07AF               	addwf	lcd_write_str@p,f
  1656  0B3A  1803               	skipnc
  1657  0B3B  0AB0               	incf	lcd_write_str@p+1,f
  1658  0B3C  3000               	movlw	0
  1659  0B3D  07B0               	addwf	lcd_write_str@p+1,f
  1660  0B3E                     l2052:
  1661  0B3E  0830               	movf	lcd_write_str@p+1,w
  1662  0B3F  00FF               	movwf	btemp+1
  1663  0B40  082F               	movf	lcd_write_str@p,w
  1664  0B41  0084               	movwf	4
  1665  0B42  120A  158A  2000  120A  158A  	fcall	stringtab
  1666  0B47  3A00               	xorlw	0
  1667  0B48  1D03               	skipz
  1668  0B49  2B4B               	goto	u2571
  1669  0B4A  2B4C               	goto	u2570
  1670  0B4B                     u2571:
  1671  0B4B  2B28               	goto	l2048
  1672  0B4C                     u2570:
  1673  0B4C                     l2054:
  1674                           
  1675                           ;./lcd.h: 483:     return p - s;
  1676  0B4C  082D               	movf	lcd_write_str@s,w
  1677  0B4D  022F               	subwf	lcd_write_str@p,w
  1678  0B4E                     l290:
  1679  0B4E  0008               	return
  1680  0B4F                     __end_of_lcd_write_str:
  1681                           
  1682                           	psect	text4
  1683  0C6E                     __ptext4:	
  1684 ;; *************** function ___llmod *****************
  1685 ;; Defined at:
  1686 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\llmod.c"
  1687 ;; Parameters:    Size  Location     Type
  1688 ;;  divisor         4    0[COMMON] unsigned long 
  1689 ;;  dividend        4    4[COMMON] unsigned long 
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;  counter         1    9[COMMON] unsigned char 
  1692 ;; Return value:  Size  Location     Type
  1693 ;;                  4    0[COMMON] unsigned long 
  1694 ;; Registers used:
  1695 ;;		wreg, status,2, status,0
  1696 ;; Tracked objects:
  1697 ;;		On entry : 0/0
  1698 ;;		On exit  : 0/0
  1699 ;;		Unchanged: 0/0
  1700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1701 ;;      Params:         8       0       0       0       0
  1702 ;;      Locals:         1       0       0       0       0
  1703 ;;      Temps:          1       0       0       0       0
  1704 ;;      Totals:        10       0       0       0       0
  1705 ;;Total ram usage:       10 bytes
  1706 ;; Hardware stack levels used:    1
  1707 ;; This function calls:
  1708 ;;		Nothing
  1709 ;; This function is called by:
  1710 ;;		_lcd_write_int
  1711 ;; This function uses a non-reentrant model
  1712 ;;
  1713                           
  1714                           
  1715                           ;psect for function ___llmod
  1716  0C6E                     ___llmod:
  1717  0C6E                     l2082:	
  1718                           ;incstack = 0
  1719                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  1720                           
  1721  0C6E  0873               	movf	___llmod@divisor+3,w
  1722  0C6F  0472               	iorwf	___llmod@divisor+2,w
  1723  0C70  0471               	iorwf	___llmod@divisor+1,w
  1724  0C71  0470               	iorwf	___llmod@divisor,w
  1725  0C72  1903               	skipnz
  1726  0C73  2C75               	goto	u2651
  1727  0C74  2C76               	goto	u2650
  1728  0C75                     u2651:
  1729  0C75  2CB9               	goto	l2098
  1730  0C76                     u2650:
  1731  0C76                     l2084:
  1732  0C76  01F9               	clrf	___llmod@counter
  1733  0C77  0AF9               	incf	___llmod@counter,f
  1734  0C78  2C86               	goto	l2088
  1735  0C79                     l2086:
  1736  0C79  3001               	movlw	1
  1737  0C7A  00F8               	movwf	??___llmod
  1738  0C7B                     u2665:
  1739  0C7B  1003               	clrc
  1740  0C7C  0DF0               	rlf	___llmod@divisor,f
  1741  0C7D  0DF1               	rlf	___llmod@divisor+1,f
  1742  0C7E  0DF2               	rlf	___llmod@divisor+2,f
  1743  0C7F  0DF3               	rlf	___llmod@divisor+3,f
  1744  0C80  0BF8               	decfsz	??___llmod,f
  1745  0C81  2C7B               	goto	u2665
  1746  0C82  3001               	movlw	1
  1747  0C83  00F8               	movwf	??___llmod
  1748  0C84  0878               	movf	??___llmod,w
  1749  0C85  07F9               	addwf	___llmod@counter,f
  1750  0C86                     l2088:
  1751  0C86  1FF3               	btfss	___llmod@divisor+3,7
  1752  0C87  2C89               	goto	u2671
  1753  0C88  2C8A               	goto	u2670
  1754  0C89                     u2671:
  1755  0C89  2C79               	goto	l2086
  1756  0C8A                     u2670:
  1757  0C8A                     l2090:
  1758  0C8A  0873               	movf	___llmod@divisor+3,w
  1759  0C8B  0277               	subwf	___llmod@dividend+3,w
  1760  0C8C  1D03               	skipz
  1761  0C8D  2C98               	goto	u2685
  1762  0C8E  0872               	movf	___llmod@divisor+2,w
  1763  0C8F  0276               	subwf	___llmod@dividend+2,w
  1764  0C90  1D03               	skipz
  1765  0C91  2C98               	goto	u2685
  1766  0C92  0871               	movf	___llmod@divisor+1,w
  1767  0C93  0275               	subwf	___llmod@dividend+1,w
  1768  0C94  1D03               	skipz
  1769  0C95  2C98               	goto	u2685
  1770  0C96  0870               	movf	___llmod@divisor,w
  1771  0C97  0274               	subwf	___llmod@dividend,w
  1772  0C98                     u2685:
  1773  0C98  1C03               	skipc
  1774  0C99  2C9B               	goto	u2681
  1775  0C9A  2C9C               	goto	u2680
  1776  0C9B                     u2681:
  1777  0C9B  2CAA               	goto	l2094
  1778  0C9C                     u2680:
  1779  0C9C                     l2092:
  1780  0C9C  0870               	movf	___llmod@divisor,w
  1781  0C9D  02F4               	subwf	___llmod@dividend,f
  1782  0C9E  0871               	movf	___llmod@divisor+1,w
  1783  0C9F  1C03               	skipc
  1784  0CA0  0F71               	incfsz	___llmod@divisor+1,w
  1785  0CA1  02F5               	subwf	___llmod@dividend+1,f
  1786  0CA2  0872               	movf	___llmod@divisor+2,w
  1787  0CA3  1C03               	skipc
  1788  0CA4  0F72               	incfsz	___llmod@divisor+2,w
  1789  0CA5  02F6               	subwf	___llmod@dividend+2,f
  1790  0CA6  0873               	movf	___llmod@divisor+3,w
  1791  0CA7  1C03               	skipc
  1792  0CA8  0F73               	incfsz	___llmod@divisor+3,w
  1793  0CA9  02F7               	subwf	___llmod@dividend+3,f
  1794  0CAA                     l2094:
  1795  0CAA  3001               	movlw	1
  1796  0CAB                     u2695:
  1797  0CAB  1003               	clrc
  1798  0CAC  0CF3               	rrf	___llmod@divisor+3,f
  1799  0CAD  0CF2               	rrf	___llmod@divisor+2,f
  1800  0CAE  0CF1               	rrf	___llmod@divisor+1,f
  1801  0CAF  0CF0               	rrf	___llmod@divisor,f
  1802  0CB0  3EFF               	addlw	-1
  1803  0CB1  1D03               	skipz
  1804  0CB2  2CAB               	goto	u2695
  1805  0CB3                     l2096:
  1806  0CB3  3001               	movlw	1
  1807  0CB4  02F9               	subwf	___llmod@counter,f
  1808  0CB5  1D03               	btfss	3,2
  1809  0CB6  2CB8               	goto	u2701
  1810  0CB7  2CB9               	goto	u2700
  1811  0CB8                     u2701:
  1812  0CB8  2C8A               	goto	l2090
  1813  0CB9                     u2700:
  1814  0CB9                     l2098:
  1815  0CB9  0877               	movf	___llmod@dividend+3,w
  1816  0CBA  00F3               	movwf	?___llmod+3
  1817  0CBB  0876               	movf	___llmod@dividend+2,w
  1818  0CBC  00F2               	movwf	?___llmod+2
  1819  0CBD  0875               	movf	___llmod@dividend+1,w
  1820  0CBE  00F1               	movwf	?___llmod+1
  1821  0CBF  0874               	movf	___llmod@dividend,w
  1822  0CC0  00F0               	movwf	?___llmod
  1823  0CC1                     l679:
  1824  0CC1  0008               	return
  1825  0CC2                     __end_of___llmod:
  1826                           
  1827                           	psect	text5
  1828  0DCC                     __ptext5:	
  1829 ;; *************** function ___lldiv *****************
  1830 ;; Defined at:
  1831 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\__lldiv.c"
  1832 ;; Parameters:    Size  Location     Type
  1833 ;;  divisor         4    0[COMMON] unsigned long 
  1834 ;;  dividend        4    4[COMMON] unsigned long 
  1835 ;; Auto vars:     Size  Location     Type
  1836 ;;  quotient        4    9[COMMON] unsigned long 
  1837 ;;  counter         1   13[COMMON] unsigned char 
  1838 ;; Return value:  Size  Location     Type
  1839 ;;                  4    0[COMMON] unsigned long 
  1840 ;; Registers used:
  1841 ;;		wreg, status,2, status,0
  1842 ;; Tracked objects:
  1843 ;;		On entry : 0/0
  1844 ;;		On exit  : 0/0
  1845 ;;		Unchanged: 0/0
  1846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1847 ;;      Params:         8       0       0       0       0
  1848 ;;      Locals:         5       0       0       0       0
  1849 ;;      Temps:          1       0       0       0       0
  1850 ;;      Totals:        14       0       0       0       0
  1851 ;;Total ram usage:       14 bytes
  1852 ;; Hardware stack levels used:    1
  1853 ;; This function calls:
  1854 ;;		Nothing
  1855 ;; This function is called by:
  1856 ;;		_lcd_write_int
  1857 ;; This function uses a non-reentrant model
  1858 ;;
  1859                           
  1860                           
  1861                           ;psect for function ___lldiv
  1862  0DCC                     ___lldiv:
  1863  0DCC                     l2058:	
  1864                           ;incstack = 0
  1865                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1866                           
  1867  0DCC  3000               	movlw	0
  1868  0DCD  00FC               	movwf	___lldiv@quotient+3
  1869  0DCE  3000               	movlw	0
  1870  0DCF  00FB               	movwf	___lldiv@quotient+2
  1871  0DD0  3000               	movlw	0
  1872  0DD1  00FA               	movwf	___lldiv@quotient+1
  1873  0DD2  3000               	movlw	0
  1874  0DD3  00F9               	movwf	___lldiv@quotient
  1875  0DD4  0873               	movf	___lldiv@divisor+3,w
  1876  0DD5  0472               	iorwf	___lldiv@divisor+2,w
  1877  0DD6  0471               	iorwf	___lldiv@divisor+1,w
  1878  0DD7  0470               	iorwf	___lldiv@divisor,w
  1879  0DD8  1903               	skipnz
  1880  0DD9  2DDB               	goto	u2581
  1881  0DDA  2DDC               	goto	u2580
  1882  0DDB                     u2581:
  1883  0DDB  2E29               	goto	l2078
  1884  0DDC                     u2580:
  1885  0DDC                     l2060:
  1886  0DDC  01FD               	clrf	___lldiv@counter
  1887  0DDD  0AFD               	incf	___lldiv@counter,f
  1888  0DDE  2DEC               	goto	l2064
  1889  0DDF                     l2062:
  1890  0DDF  3001               	movlw	1
  1891  0DE0  00F8               	movwf	??___lldiv
  1892  0DE1                     u2595:
  1893  0DE1  1003               	clrc
  1894  0DE2  0DF0               	rlf	___lldiv@divisor,f
  1895  0DE3  0DF1               	rlf	___lldiv@divisor+1,f
  1896  0DE4  0DF2               	rlf	___lldiv@divisor+2,f
  1897  0DE5  0DF3               	rlf	___lldiv@divisor+3,f
  1898  0DE6  0BF8               	decfsz	??___lldiv,f
  1899  0DE7  2DE1               	goto	u2595
  1900  0DE8  3001               	movlw	1
  1901  0DE9  00F8               	movwf	??___lldiv
  1902  0DEA  0878               	movf	??___lldiv,w
  1903  0DEB  07FD               	addwf	___lldiv@counter,f
  1904  0DEC                     l2064:
  1905  0DEC  1FF3               	btfss	___lldiv@divisor+3,7
  1906  0DED  2DEF               	goto	u2601
  1907  0DEE  2DF0               	goto	u2600
  1908  0DEF                     u2601:
  1909  0DEF  2DDF               	goto	l2062
  1910  0DF0                     u2600:
  1911  0DF0                     l2066:
  1912  0DF0  3001               	movlw	1
  1913  0DF1  00F8               	movwf	??___lldiv
  1914  0DF2                     u2615:
  1915  0DF2  1003               	clrc
  1916  0DF3  0DF9               	rlf	___lldiv@quotient,f
  1917  0DF4  0DFA               	rlf	___lldiv@quotient+1,f
  1918  0DF5  0DFB               	rlf	___lldiv@quotient+2,f
  1919  0DF6  0DFC               	rlf	___lldiv@quotient+3,f
  1920  0DF7  0BF8               	decfsz	??___lldiv,f
  1921  0DF8  2DF2               	goto	u2615
  1922  0DF9                     l2068:
  1923  0DF9  0873               	movf	___lldiv@divisor+3,w
  1924  0DFA  0277               	subwf	___lldiv@dividend+3,w
  1925  0DFB  1D03               	skipz
  1926  0DFC  2E07               	goto	u2625
  1927  0DFD  0872               	movf	___lldiv@divisor+2,w
  1928  0DFE  0276               	subwf	___lldiv@dividend+2,w
  1929  0DFF  1D03               	skipz
  1930  0E00  2E07               	goto	u2625
  1931  0E01  0871               	movf	___lldiv@divisor+1,w
  1932  0E02  0275               	subwf	___lldiv@dividend+1,w
  1933  0E03  1D03               	skipz
  1934  0E04  2E07               	goto	u2625
  1935  0E05  0870               	movf	___lldiv@divisor,w
  1936  0E06  0274               	subwf	___lldiv@dividend,w
  1937  0E07                     u2625:
  1938  0E07  1C03               	skipc
  1939  0E08  2E0A               	goto	u2621
  1940  0E09  2E0B               	goto	u2620
  1941  0E0A                     u2621:
  1942  0E0A  2E1A               	goto	l2074
  1943  0E0B                     u2620:
  1944  0E0B                     l2070:
  1945  0E0B  0870               	movf	___lldiv@divisor,w
  1946  0E0C  02F4               	subwf	___lldiv@dividend,f
  1947  0E0D  0871               	movf	___lldiv@divisor+1,w
  1948  0E0E  1C03               	skipc
  1949  0E0F  0F71               	incfsz	___lldiv@divisor+1,w
  1950  0E10  02F5               	subwf	___lldiv@dividend+1,f
  1951  0E11  0872               	movf	___lldiv@divisor+2,w
  1952  0E12  1C03               	skipc
  1953  0E13  0F72               	incfsz	___lldiv@divisor+2,w
  1954  0E14  02F6               	subwf	___lldiv@dividend+2,f
  1955  0E15  0873               	movf	___lldiv@divisor+3,w
  1956  0E16  1C03               	skipc
  1957  0E17  0F73               	incfsz	___lldiv@divisor+3,w
  1958  0E18  02F7               	subwf	___lldiv@dividend+3,f
  1959  0E19                     l2072:
  1960  0E19  1479               	bsf	___lldiv@quotient,0
  1961  0E1A                     l2074:
  1962  0E1A  3001               	movlw	1
  1963  0E1B                     u2635:
  1964  0E1B  1003               	clrc
  1965  0E1C  0CF3               	rrf	___lldiv@divisor+3,f
  1966  0E1D  0CF2               	rrf	___lldiv@divisor+2,f
  1967  0E1E  0CF1               	rrf	___lldiv@divisor+1,f
  1968  0E1F  0CF0               	rrf	___lldiv@divisor,f
  1969  0E20  3EFF               	addlw	-1
  1970  0E21  1D03               	skipz
  1971  0E22  2E1B               	goto	u2635
  1972  0E23                     l2076:
  1973  0E23  3001               	movlw	1
  1974  0E24  02FD               	subwf	___lldiv@counter,f
  1975  0E25  1D03               	btfss	3,2
  1976  0E26  2E28               	goto	u2641
  1977  0E27  2E29               	goto	u2640
  1978  0E28                     u2641:
  1979  0E28  2DF0               	goto	l2066
  1980  0E29                     u2640:
  1981  0E29                     l2078:
  1982  0E29  087C               	movf	___lldiv@quotient+3,w
  1983  0E2A  00F3               	movwf	?___lldiv+3
  1984  0E2B  087B               	movf	___lldiv@quotient+2,w
  1985  0E2C  00F2               	movwf	?___lldiv+2
  1986  0E2D  087A               	movf	___lldiv@quotient+1,w
  1987  0E2E  00F1               	movwf	?___lldiv+1
  1988  0E2F  0879               	movf	___lldiv@quotient,w
  1989  0E30  00F0               	movwf	?___lldiv
  1990  0E31                     l493:
  1991  0E31  0008               	return
  1992  0E32                     __end_of___lldiv:
  1993                           
  1994                           	psect	text6
  1995  0F09                     __ptext6:	
  1996 ;; *************** function _lcd_backspace *****************
  1997 ;; Defined at:
  1998 ;;		line 457 in file "./lcd.h"
  1999 ;; Parameters:    Size  Location     Type
  2000 ;;  n               1    wreg     char 
  2001 ;; Auto vars:     Size  Location     Type
  2002 ;;  n               1   15[BANK0 ] char 
  2003 ;;  edge            1   18[BANK0 ] char 
  2004 ;; Return value:  Size  Location     Type
  2005 ;;                  1    wreg      void 
  2006 ;; Registers used:
  2007 ;;		wreg, status,2, status,0, pclath, cstack
  2008 ;; Tracked objects:
  2009 ;;		On entry : 0/0
  2010 ;;		On exit  : 0/0
  2011 ;;		Unchanged: 0/0
  2012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2013 ;;      Params:         0       0       0       0       0
  2014 ;;      Locals:         0       4       0       0       0
  2015 ;;      Temps:          0       2       0       0       0
  2016 ;;      Totals:         0       6       0       0       0
  2017 ;;Total ram usage:        6 bytes
  2018 ;; Hardware stack levels used:    1
  2019 ;; Hardware stack levels required when called:    6
  2020 ;; This function calls:
  2021 ;;		_lcd_cursor_left
  2022 ;;		_lcd_cursor_right
  2023 ;;		_lcd_entry_mode
  2024 ;;		_lcd_write_char
  2025 ;; This function is called by:
  2026 ;;		_update_temp
  2027 ;; This function uses a non-reentrant model
  2028 ;;
  2029                           
  2030                           
  2031                           ;psect for function _lcd_backspace
  2032  0F09                     _lcd_backspace:
  2033                           
  2034                           ;incstack = 0
  2035                           ; Regs used in _lcd_backspace: [wreg+status,2+status,0+pclath+cstack]
  2036                           ;lcd_backspace@n stored from wreg
  2037  0F09  1283               	bcf	3,5	;RP0=0, select bank0
  2038  0F0A  1303               	bcf	3,6	;RP1=0, select bank0
  2039  0F0B  00AF               	movwf	lcd_backspace@n
  2040  0F0C                     l2124:
  2041                           
  2042                           ;./lcd.h: 457: void lcd_backspace(signed char n);./lcd.h: 458: {;./lcd.h: 459:     signe
      +                          d char edge = entry_mode_i_d ? left_edge-1 : right_edge+1;
  2043  0F0C  1963               	btfsc	_entry_mode_i_d/(0+8),_entry_mode_i_d& (0+7)
  2044  0F0D  2F0F               	goto	u2931
  2045  0F0E  2F10               	goto	u2930
  2046  0F0F                     u2931:
  2047  0F0F  2F1A               	goto	l2128
  2048  0F10                     u2930:
  2049  0F10                     l2126:
  2050  0F10  3001               	movlw	1
  2051  0F11  075F               	addwf	_right_edge,w
  2052  0F12  00B0               	movwf	_lcd_backspace$340
  2053  0F13  01B1               	clrf	_lcd_backspace$340+1
  2054  0F14  1803               	skipnc
  2055  0F15  0AB1               	incf	_lcd_backspace$340+1,f
  2056  0F16  1FDF               	btfss	_right_edge,7
  2057  0F17  2F19               	goto	u2944
  2058  0F18  03B1               	decf	_lcd_backspace$340+1,f
  2059  0F19                     u2944:
  2060  0F19  2F27               	goto	l2130
  2061  0F1A                     l2128:
  2062  0F1A  0860               	movf	_left_edge,w
  2063  0F1B  00AD               	movwf	??_lcd_backspace
  2064  0F1C  01AE               	clrf	??_lcd_backspace+1
  2065  0F1D  1BAD               	btfsc	??_lcd_backspace,7
  2066  0F1E  03AE               	decf	??_lcd_backspace+1,f
  2067  0F1F  082D               	movf	??_lcd_backspace,w
  2068  0F20  3EFF               	addlw	255
  2069  0F21  00B0               	movwf	_lcd_backspace$340
  2070  0F22  082E               	movf	??_lcd_backspace+1,w
  2071  0F23  1803               	skipnc
  2072  0F24  3E01               	addlw	1
  2073  0F25  3EFF               	addlw	255
  2074  0F26  00B1               	movwf	_lcd_backspace$340+1
  2075  0F27                     l2130:
  2076  0F27  1283               	bcf	3,5	;RP0=0, select bank0
  2077  0F28  1303               	bcf	3,6	;RP1=0, select bank0
  2078  0F29  0830               	movf	_lcd_backspace$340,w
  2079  0F2A  00AD               	movwf	??_lcd_backspace
  2080  0F2B  082D               	movf	??_lcd_backspace,w
  2081  0F2C  00B2               	movwf	lcd_backspace@edge
  2082  0F2D                     l2132:
  2083                           
  2084                           ;./lcd.h: 462:     if (entry_mode_i_d) lcd_cursor_left(1);
  2085  0F2D  1D63               	btfss	_entry_mode_i_d/(0+8),_entry_mode_i_d& (0+7)
  2086  0F2E  2F30               	goto	u2951
  2087  0F2F  2F31               	goto	u2950
  2088  0F30                     u2951:
  2089  0F30  2F38               	goto	l2136
  2090  0F31                     u2950:
  2091  0F31                     l2134:
  2092  0F31  3001               	movlw	1
  2093  0F32  120A  158A  24C2  120A  158A  	fcall	_lcd_cursor_left
  2094  0F37  2F3E               	goto	l276
  2095  0F38                     l2136:
  2096  0F38  3001               	movlw	1
  2097  0F39  120A  158A  269B  120A  158A  	fcall	_lcd_cursor_right
  2098  0F3E                     l276:
  2099                           
  2100                           ;./lcd.h: 465:     lcd_entry_mode(!entry_mode_i_d, LOW);
  2101  0F3E  01F8               	clrf	lcd_entry_mode@s
  2102  0F3F  1003               	clrc
  2103  0F40  1283               	bcf	3,5	;RP0=0, select bank0
  2104  0F41  1303               	bcf	3,6	;RP1=0, select bank0
  2105  0F42  1D63               	btfss	_entry_mode_i_d/(0+8),_entry_mode_i_d& (0+7)
  2106  0F43  1403               	setc
  2107  0F44  3000               	movlw	0
  2108  0F45  1803               	skipnc
  2109  0F46  3001               	movlw	1
  2110  0F47  120A  158A  22CC  120A  158A  	fcall	_lcd_entry_mode
  2111                           
  2112                           ;./lcd.h: 467:     while(n-- && lcd_cursor_col != edge) lcd_write_char(' ');
  2113  0F4C  2F53               	goto	l2140
  2114  0F4D                     l2138:
  2115  0F4D  3020               	movlw	32
  2116  0F4E  120A  118A  2123  120A  158A  	fcall	_lcd_write_char
  2117  0F53                     l2140:
  2118  0F53  30FF               	movlw	255
  2119  0F54  1283               	bcf	3,5	;RP0=0, select bank0
  2120  0F55  1303               	bcf	3,6	;RP1=0, select bank0
  2121  0F56  00AD               	movwf	??_lcd_backspace
  2122  0F57  082D               	movf	??_lcd_backspace,w
  2123  0F58  07AF               	addwf	lcd_backspace@n,f
  2124  0F59  0A2F               	incf	lcd_backspace@n,w
  2125  0F5A  1903               	btfsc	3,2
  2126  0F5B  2F5D               	goto	u2961
  2127  0F5C  2F5E               	goto	u2960
  2128  0F5D                     u2961:
  2129  0F5D  2F64               	goto	l2144
  2130  0F5E                     u2960:
  2131  0F5E                     l2142:
  2132  0F5E  0862               	movf	_lcd_cursor_col,w
  2133  0F5F  0632               	xorwf	lcd_backspace@edge,w
  2134  0F60  1D03               	skipz
  2135  0F61  2F63               	goto	u2971
  2136  0F62  2F64               	goto	u2970
  2137  0F63                     u2971:
  2138  0F63  2F4D               	goto	l2138
  2139  0F64                     u2970:
  2140  0F64                     l2144:
  2141                           
  2142                           ;./lcd.h: 469:     lcd_entry_mode(!entry_mode_i_d, LOW);
  2143  0F64  01F8               	clrf	lcd_entry_mode@s
  2144  0F65  1003               	clrc
  2145  0F66  1D63               	btfss	_entry_mode_i_d/(0+8),_entry_mode_i_d& (0+7)
  2146  0F67  1403               	setc
  2147  0F68  3000               	movlw	0
  2148  0F69  1803               	skipnc
  2149  0F6A  3001               	movlw	1
  2150  0F6B  120A  158A  22CC  120A  158A  	fcall	_lcd_entry_mode
  2151  0F70                     l2146:
  2152                           
  2153                           ;./lcd.h: 472:     if (entry_mode_i_d) lcd_cursor_right(1);
  2154  0F70  1283               	bcf	3,5	;RP0=0, select bank0
  2155  0F71  1303               	bcf	3,6	;RP1=0, select bank0
  2156  0F72  1D63               	btfss	_entry_mode_i_d/(0+8),_entry_mode_i_d& (0+7)
  2157  0F73  2F75               	goto	u2981
  2158  0F74  2F76               	goto	u2980
  2159  0F75                     u2981:
  2160  0F75  2F7D               	goto	l2150
  2161  0F76                     u2980:
  2162  0F76                     l2148:
  2163  0F76  3001               	movlw	1
  2164  0F77  120A  158A  269B  120A  158A  	fcall	_lcd_cursor_right
  2165  0F7C  2F83               	goto	l284
  2166  0F7D                     l2150:
  2167  0F7D  3001               	movlw	1
  2168  0F7E  120A  158A  24C2  120A  158A  	fcall	_lcd_cursor_left
  2169  0F83                     l284:
  2170  0F83  0008               	return
  2171  0F84                     __end_of_lcd_backspace:
  2172                           
  2173                           	psect	text7
  2174  0123                     __ptext7:	
  2175 ;; *************** function _lcd_write_char *****************
  2176 ;; Defined at:
  2177 ;;		line 267 in file "./lcd.h"
  2178 ;; Parameters:    Size  Location     Type
  2179 ;;  data            1    wreg     unsigned char 
  2180 ;; Auto vars:     Size  Location     Type
  2181 ;;  data            1    6[BANK0 ] unsigned char 
  2182 ;; Return value:  Size  Location     Type
  2183 ;;                  1    wreg      void 
  2184 ;; Registers used:
  2185 ;;		wreg, status,2, status,0, pclath, cstack
  2186 ;; Tracked objects:
  2187 ;;		On entry : 0/0
  2188 ;;		On exit  : 0/0
  2189 ;;		Unchanged: 0/0
  2190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2191 ;;      Params:         0       0       0       0       0
  2192 ;;      Locals:         0       7       0       0       0
  2193 ;;      Temps:          0       4       0       0       0
  2194 ;;      Totals:         0      11       0       0       0
  2195 ;;Total ram usage:       11 bytes
  2196 ;; Hardware stack levels used:    1
  2197 ;; Hardware stack levels required when called:    5
  2198 ;; This function calls:
  2199 ;;		_lcd_send
  2200 ;;		_lcd_shift_left
  2201 ;;		_lcd_shift_right
  2202 ;; This function is called by:
  2203 ;;		_lcd_backspace
  2204 ;;		_lcd_write_str
  2205 ;;		_lcd_write_int
  2206 ;; This function uses a non-reentrant model
  2207 ;;
  2208                           
  2209                           
  2210                           ;psect for function _lcd_write_char
  2211  0123                     _lcd_write_char:
  2212                           
  2213                           ;incstack = 0
  2214 ;; hardware stack exceeded
  2215                           ; Regs used in _lcd_write_char: [wreg+status,2+status,0+pclath+cstack]
  2216                           ;lcd_write_char@data stored from wreg
  2217  0123  1283               	bcf	3,5	;RP0=0, select bank0
  2218  0124  1303               	bcf	3,6	;RP1=0, select bank0
  2219  0125  00A6               	movwf	lcd_write_char@data
  2220  0126                     l1964:
  2221                           
  2222                           ;./lcd.h: 267: void lcd_write_char(char data);./lcd.h: 268: {;./lcd.h: 269:     if (lcd_
      +                          cursor_col == (entry_mode_i_d ? right_edge+1 : left_edge-1))
  2223  0126  1963               	btfsc	_entry_mode_i_d/(0+8),_entry_mode_i_d& (0+7)
  2224  0127  2929               	goto	u2311
  2225  0128  292A               	goto	u2310
  2226  0129                     u2311:
  2227  0129  2938               	goto	l1968
  2228  012A                     u2310:
  2229  012A                     l1966:
  2230  012A  0860               	movf	_left_edge,w
  2231  012B  00A2               	movwf	??_lcd_write_char
  2232  012C  01A3               	clrf	??_lcd_write_char+1
  2233  012D  1BA2               	btfsc	??_lcd_write_char,7
  2234  012E  03A3               	decf	??_lcd_write_char+1,f
  2235  012F  0822               	movf	??_lcd_write_char,w
  2236  0130  3EFF               	addlw	255
  2237  0131  00A7               	movwf	_lcd_write_char$291
  2238  0132  0823               	movf	??_lcd_write_char+1,w
  2239  0133  1803               	skipnc
  2240  0134  3E01               	addlw	1
  2241  0135  3EFF               	addlw	255
  2242  0136  00A8               	movwf	_lcd_write_char$291+1
  2243  0137  2941               	goto	l134
  2244  0138                     l1968:
  2245  0138  3001               	movlw	1
  2246  0139  075F               	addwf	_right_edge,w
  2247  013A  00A7               	movwf	_lcd_write_char$291
  2248  013B  01A8               	clrf	_lcd_write_char$291+1
  2249  013C  1803               	skipnc
  2250  013D  0AA8               	incf	_lcd_write_char$291+1,f
  2251  013E  1FDF               	btfss	_right_edge,7
  2252  013F  2941               	goto	u2324
  2253  0140  03A8               	decf	_lcd_write_char$291+1,f
  2254  0141                     u2324:
  2255  0141                     l134:
  2256  0141  1283               	bcf	3,5	;RP0=0, select bank0
  2257  0142  1303               	bcf	3,6	;RP1=0, select bank0
  2258  0143  0862               	movf	_lcd_cursor_col,w
  2259  0144  00A2               	movwf	??_lcd_write_char
  2260  0145  01A3               	clrf	??_lcd_write_char+1
  2261  0146  1BA2               	btfsc	??_lcd_write_char,7
  2262  0147  03A3               	decf	??_lcd_write_char+1,f
  2263  0148  0828               	movf	_lcd_write_char$291+1,w
  2264  0149  0623               	xorwf	??_lcd_write_char+1,w
  2265  014A  1D03               	skipz
  2266  014B  294E               	goto	u2335
  2267  014C  0827               	movf	_lcd_write_char$291,w
  2268  014D  0622               	xorwf	??_lcd_write_char,w
  2269  014E                     u2335:
  2270  014E  1D03               	skipz
  2271  014F  2951               	goto	u2331
  2272  0150  2952               	goto	u2330
  2273  0151                     u2331:
  2274  0151  2953               	goto	l1972
  2275  0152                     u2330:
  2276  0152  29BC               	goto	l135
  2277  0153                     l1972:
  2278                           
  2279                           ;./lcd.h: 272:     lcd_send(HIGH, data);
  2280  0153  0826               	movf	lcd_write_char@data,w
  2281  0154  00A2               	movwf	??_lcd_write_char
  2282  0155  0822               	movf	??_lcd_write_char,w
  2283  0156  00F4               	movwf	lcd_send@data
  2284  0157  3001               	movlw	1
  2285  0158  120A  158A  2573  120A  118A  	fcall	_lcd_send
  2286  015D                     l1974:
  2287                           
  2288                           ;./lcd.h: 274:     if (entry_mode_i_d && lcd_cursor_col == lcd_shift_pos + 15)
  2289  015D  1283               	bcf	3,5	;RP0=0, select bank0
  2290  015E  1303               	bcf	3,6	;RP1=0, select bank0
  2291  015F  1D63               	btfss	_entry_mode_i_d/(0+8),_entry_mode_i_d& (0+7)
  2292  0160  2962               	goto	u2341
  2293  0161  2963               	goto	u2340
  2294  0162                     u2341:
  2295  0162  2984               	goto	l136
  2296  0163                     u2340:
  2297  0163                     l1976:
  2298  0163  0862               	movf	_lcd_cursor_col,w
  2299  0164  00A2               	movwf	??_lcd_write_char
  2300  0165  01A3               	clrf	??_lcd_write_char+1
  2301  0166  1BA2               	btfsc	??_lcd_write_char,7
  2302  0167  03A3               	decf	??_lcd_write_char+1,f
  2303  0168  300F               	movlw	15
  2304  0169  0761               	addwf	_lcd_shift_pos,w
  2305  016A  00A4               	movwf	??_lcd_write_char+2
  2306  016B  01A5               	clrf	??_lcd_write_char+3
  2307  016C  1803               	skipnc
  2308  016D  0AA5               	incf	??_lcd_write_char+3,f
  2309  016E  1FE1               	btfss	_lcd_shift_pos,7
  2310  016F  2971               	goto	u2354
  2311  0170  03A5               	decf	??_lcd_write_char+3,f
  2312  0171                     u2354:
  2313  0171  1283               	bcf	3,5	;RP0=0, select bank0
  2314  0172  1303               	bcf	3,6	;RP1=0, select bank0
  2315  0173  0823               	movf	??_lcd_write_char+1,w
  2316  0174  0625               	xorwf	??_lcd_write_char+3,w
  2317  0175  1D03               	skipz
  2318  0176  2979               	goto	u2365
  2319  0177  0822               	movf	??_lcd_write_char,w
  2320  0178  0624               	xorwf	??_lcd_write_char+2,w
  2321  0179                     u2365:
  2322  0179  1D03               	skipz
  2323  017A  297C               	goto	u2361
  2324  017B  297D               	goto	u2360
  2325  017C                     u2361:
  2326  017C  2984               	goto	l136
  2327  017D                     u2360:
  2328  017D                     l1978:
  2329                           
  2330                           ;./lcd.h: 275:         lcd_shift_left(1);
  2331  017D  3001               	movlw	1
  2332  017E  120A  158A  23B8  120A  118A  	fcall	_lcd_shift_left
  2333  0183  2994               	goto	l1984
  2334  0184                     l136:	
  2335                           ;./lcd.h: 276:     else if (!entry_mode_i_d && lcd_cursor_col == lcd_shift_pos)
  2336                           
  2337  0184  1963               	btfsc	_entry_mode_i_d/(0+8),_entry_mode_i_d& (0+7)
  2338  0185  2987               	goto	u2371
  2339  0186  2988               	goto	u2370
  2340  0187                     u2371:
  2341  0187  2994               	goto	l1984
  2342  0188                     u2370:
  2343  0188                     l1980:
  2344  0188  0862               	movf	_lcd_cursor_col,w
  2345  0189  0661               	xorwf	_lcd_shift_pos,w
  2346  018A  1D03               	skipz
  2347  018B  298D               	goto	u2381
  2348  018C  298E               	goto	u2380
  2349  018D                     u2381:
  2350  018D  2994               	goto	l1984
  2351  018E                     u2380:
  2352  018E                     l1982:
  2353                           
  2354                           ;./lcd.h: 277:         lcd_shift_right(1);
  2355  018E  3001               	movlw	1
  2356  018F  120A  158A  234F  120A  118A  	fcall	_lcd_shift_right
  2357  0194                     l1984:
  2358                           
  2359                           ;./lcd.h: 279:     lcd_cursor_col += entry_mode_i_d ? 1 : -1;
  2360  0194  1283               	bcf	3,5	;RP0=0, select bank0
  2361  0195  1303               	bcf	3,6	;RP1=0, select bank0
  2362  0196  1963               	btfsc	_entry_mode_i_d/(0+8),_entry_mode_i_d& (0+7)
  2363  0197  2999               	goto	u2391
  2364  0198  299A               	goto	u2390
  2365  0199                     u2391:
  2366  0199  299F               	goto	l1988
  2367  019A                     u2390:
  2368  019A                     l1986:
  2369  019A  30FF               	movlw	255
  2370  019B  00A9               	movwf	_lcd_write_char$292
  2371  019C  30FF               	movlw	255
  2372  019D  00AA               	movwf	_lcd_write_char$292+1
  2373  019E  29A3               	goto	l1990
  2374  019F                     l1988:
  2375  019F  3001               	movlw	1
  2376  01A0  00A9               	movwf	_lcd_write_char$292
  2377  01A1  3000               	movlw	0
  2378  01A2  00AA               	movwf	_lcd_write_char$292+1
  2379  01A3                     l1990:
  2380  01A3  0829               	movf	_lcd_write_char$292,w
  2381  01A4  00A2               	movwf	??_lcd_write_char
  2382  01A5  0822               	movf	??_lcd_write_char,w
  2383  01A6  07E2               	addwf	_lcd_cursor_col,f
  2384  01A7                     l1992:
  2385                           
  2386                           ;./lcd.h: 280:     if (entry_mode_s) lcd_shift_pos += entry_mode_i_d ? 1 : -1;
  2387  01A7  1CE3               	btfss	_entry_mode_s/(0+8),_entry_mode_s& (0+7)
  2388  01A8  29AA               	goto	u2401
  2389  01A9  29AB               	goto	u2400
  2390  01AA                     u2401:
  2391  01AA  29BC               	goto	l135
  2392  01AB                     u2400:
  2393  01AB                     l1994:
  2394  01AB  1963               	btfsc	_entry_mode_i_d/(0+8),_entry_mode_i_d& (0+7)
  2395  01AC  29AE               	goto	u2411
  2396  01AD  29AF               	goto	u2410
  2397  01AE                     u2411:
  2398  01AE  29B4               	goto	l1998
  2399  01AF                     u2410:
  2400  01AF                     l1996:
  2401  01AF  30FF               	movlw	255
  2402  01B0  00AB               	movwf	_lcd_write_char$293
  2403  01B1  30FF               	movlw	255
  2404  01B2  00AC               	movwf	_lcd_write_char$293+1
  2405  01B3  29B8               	goto	l2000
  2406  01B4                     l1998:
  2407  01B4  3001               	movlw	1
  2408  01B5  00AB               	movwf	_lcd_write_char$293
  2409  01B6  3000               	movlw	0
  2410  01B7  00AC               	movwf	_lcd_write_char$293+1
  2411  01B8                     l2000:
  2412  01B8  082B               	movf	_lcd_write_char$293,w
  2413  01B9  00A2               	movwf	??_lcd_write_char
  2414  01BA  0822               	movf	??_lcd_write_char,w
  2415  01BB  07E1               	addwf	_lcd_shift_pos,f
  2416  01BC                     l135:
  2417  01BC  0008               	return
  2418  01BD                     __end_of_lcd_write_char:
  2419                           
  2420                           	psect	text8
  2421  0E9B                     __ptext8:	
  2422 ;; *************** function _lcd_cursor_right *****************
  2423 ;; Defined at:
  2424 ;;		line 422 in file "./lcd.h"
  2425 ;; Parameters:    Size  Location     Type
  2426 ;;  n               1    wreg     char 
  2427 ;; Auto vars:     Size  Location     Type
  2428 ;;  n               1    6[BANK0 ] char 
  2429 ;; Return value:  Size  Location     Type
  2430 ;;                  1    wreg      void 
  2431 ;; Registers used:
  2432 ;;		wreg, status,2, status,0, pclath, cstack
  2433 ;; Tracked objects:
  2434 ;;		On entry : 0/0
  2435 ;;		On exit  : 0/0
  2436 ;;		Unchanged: 0/0
  2437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2438 ;;      Params:         0       0       0       0       0
  2439 ;;      Locals:         0       1       0       0       0
  2440 ;;      Temps:          0       4       0       0       0
  2441 ;;      Totals:         0       5       0       0       0
  2442 ;;Total ram usage:        5 bytes
  2443 ;; Hardware stack levels used:    1
  2444 ;; Hardware stack levels required when called:    5
  2445 ;; This function calls:
  2446 ;;		_lcd_cur_disp_shift
  2447 ;;		_lcd_shift_left
  2448 ;; This function is called by:
  2449 ;;		_lcd_backspace
  2450 ;; This function uses a non-reentrant model
  2451 ;;
  2452                           
  2453                           
  2454                           ;psect for function _lcd_cursor_right
  2455  0E9B                     _lcd_cursor_right:
  2456                           
  2457                           ;incstack = 0
  2458                           ; Regs used in _lcd_cursor_right: [wreg+status,2+status,0+pclath+cstack]
  2459                           ;lcd_cursor_right@n stored from wreg
  2460  0E9B  1283               	bcf	3,5	;RP0=0, select bank0
  2461  0E9C  1303               	bcf	3,6	;RP1=0, select bank0
  2462  0E9D  00A6               	movwf	lcd_cursor_right@n
  2463  0E9E                     l2026:
  2464                           
  2465                           ;./lcd.h: 422: void lcd_cursor_right(signed char n);./lcd.h: 423: {;./lcd.h: 424:     wh
      +                          ile(n-- > 0 && lcd_cursor_col++ < right_edge) {
  2466  0E9E  2EE3               	goto	l2038
  2467  0E9F                     l2028:
  2468                           
  2469                           ;./lcd.h: 425:         lcd_cur_disp_shift(0, 1);
  2470  0E9F  01F8               	clrf	lcd_cur_disp_shift@r_l
  2471  0EA0  0AF8               	incf	lcd_cur_disp_shift@r_l,f
  2472  0EA1  3000               	movlw	0
  2473  0EA2  120A  158A  22F6  120A  158A  	fcall	_lcd_cur_disp_shift
  2474  0EA7                     l2030:
  2475                           
  2476                           ;./lcd.h: 426:         if (lcd_cursor_col == lcd_shift_pos + 15)
  2477  0EA7  1283               	bcf	3,5	;RP0=0, select bank0
  2478  0EA8  1303               	bcf	3,6	;RP1=0, select bank0
  2479  0EA9  0862               	movf	_lcd_cursor_col,w
  2480  0EAA  00A2               	movwf	??_lcd_cursor_right
  2481  0EAB  01A3               	clrf	??_lcd_cursor_right+1
  2482  0EAC  1BA2               	btfsc	??_lcd_cursor_right,7
  2483  0EAD  03A3               	decf	??_lcd_cursor_right+1,f
  2484  0EAE  300F               	movlw	15
  2485  0EAF  0761               	addwf	_lcd_shift_pos,w
  2486  0EB0  00A4               	movwf	??_lcd_cursor_right+2
  2487  0EB1  01A5               	clrf	??_lcd_cursor_right+3
  2488  0EB2  1803               	skipnc
  2489  0EB3  0AA5               	incf	??_lcd_cursor_right+3,f
  2490  0EB4  1FE1               	btfss	_lcd_shift_pos,7
  2491  0EB5  2EB7               	goto	u2514
  2492  0EB6  03A5               	decf	??_lcd_cursor_right+3,f
  2493  0EB7                     u2514:
  2494  0EB7  1283               	bcf	3,5	;RP0=0, select bank0
  2495  0EB8  1303               	bcf	3,6	;RP1=0, select bank0
  2496  0EB9  0823               	movf	??_lcd_cursor_right+1,w
  2497  0EBA  0625               	xorwf	??_lcd_cursor_right+3,w
  2498  0EBB  1D03               	skipz
  2499  0EBC  2EBF               	goto	u2525
  2500  0EBD  0822               	movf	??_lcd_cursor_right,w
  2501  0EBE  0624               	xorwf	??_lcd_cursor_right+2,w
  2502  0EBF                     u2525:
  2503  0EBF  1D03               	skipz
  2504  0EC0  2EC2               	goto	u2521
  2505  0EC1  2EC3               	goto	u2520
  2506  0EC2                     u2521:
  2507  0EC2  2ED8               	goto	l2036
  2508  0EC3                     u2520:
  2509  0EC3                     l2032:
  2510                           
  2511                           ;./lcd.h: 428:             lcd_shift_left(1);
  2512  0EC3  3001               	movlw	1
  2513  0EC4  120A  158A  23B8  120A  158A  	fcall	_lcd_shift_left
  2514  0EC9  2ED8               	goto	l2036
  2515  0ECA                     l2034:
  2516                           
  2517                           ;./lcd.h: 430:                 lcd_cur_disp_shift(0, 1);
  2518  0ECA  01F8               	clrf	lcd_cur_disp_shift@r_l
  2519  0ECB  0AF8               	incf	lcd_cur_disp_shift@r_l,f
  2520  0ECC  3000               	movlw	0
  2521  0ECD  120A  158A  22F6  120A  158A  	fcall	_lcd_cur_disp_shift
  2522                           
  2523                           ;./lcd.h: 431:                 lcd_shift_left(1);
  2524  0ED2  3001               	movlw	1
  2525  0ED3  120A  158A  23B8  120A  158A  	fcall	_lcd_shift_left
  2526  0ED8                     l2036:
  2527                           
  2528                           ;./lcd.h: 429:             while(n--) {
  2529  0ED8  30FF               	movlw	255
  2530  0ED9  1283               	bcf	3,5	;RP0=0, select bank0
  2531  0EDA  1303               	bcf	3,6	;RP1=0, select bank0
  2532  0EDB  00A2               	movwf	??_lcd_cursor_right
  2533  0EDC  0822               	movf	??_lcd_cursor_right,w
  2534  0EDD  07A6               	addwf	lcd_cursor_right@n,f
  2535  0EDE  0A26               	incf	lcd_cursor_right@n,w
  2536  0EDF  1D03               	btfss	3,2
  2537  0EE0  2EE2               	goto	u2531
  2538  0EE1  2EE3               	goto	u2530
  2539  0EE2                     u2531:
  2540  0EE2  2ECA               	goto	l2034
  2541  0EE3                     u2530:
  2542  0EE3                     l2038:
  2543                           
  2544                           ;./lcd.h: 424:     while(n-- > 0 && lcd_cursor_col++ < right_edge) {
  2545  0EE3  30FF               	movlw	-1
  2546  0EE4  07A6               	addwf	lcd_cursor_right@n,f
  2547  0EE5  3001               	movlw	1
  2548  0EE6  0726               	addwf	lcd_cursor_right@n,w
  2549  0EE7  3A80               	xorlw	128
  2550  0EE8  3E7F               	addlw	-129
  2551  0EE9  1C03               	skipc
  2552  0EEA  2EEC               	goto	u2541
  2553  0EEB  2EED               	goto	u2540
  2554  0EEC                     u2541:
  2555  0EEC  2EFA               	goto	l2042
  2556  0EED                     u2540:
  2557  0EED                     l2040:
  2558  0EED  3001               	movlw	1
  2559  0EEE  07E2               	addwf	_lcd_cursor_col,f
  2560  0EEF  30FF               	movlw	-1
  2561  0EF0  0762               	addwf	_lcd_cursor_col,w
  2562  0EF1  3A80               	xorlw	128
  2563  0EF2  00A2               	movwf	??_lcd_cursor_right
  2564  0EF3  085F               	movf	_right_edge,w
  2565  0EF4  3A80               	xorlw	128
  2566  0EF5  02A2               	subwf	??_lcd_cursor_right,f
  2567  0EF6  1C03               	skipc
  2568  0EF7  2EF9               	goto	u2551
  2569  0EF8  2EFA               	goto	u2550
  2570  0EF9                     u2551:
  2571  0EF9  2E9F               	goto	l2028
  2572  0EFA                     u2550:
  2573  0EFA                     l2042:
  2574                           
  2575                           ;./lcd.h: 435:     if (lcd_cursor_col > right_edge) lcd_cursor_col = right_edge;
  2576  0EFA  085F               	movf	_right_edge,w
  2577  0EFB  3A80               	xorlw	128
  2578  0EFC  00A2               	movwf	??_lcd_cursor_right
  2579  0EFD  0862               	movf	_lcd_cursor_col,w
  2580  0EFE  3A80               	xorlw	128
  2581  0EFF  02A2               	subwf	??_lcd_cursor_right,f
  2582  0F00  1803               	skipnc
  2583  0F01  2F03               	goto	u2561
  2584  0F02  2F04               	goto	u2560
  2585  0F03                     u2561:
  2586  0F03  2F08               	goto	l250
  2587  0F04                     u2560:
  2588  0F04                     l2044:
  2589  0F04  085F               	movf	_right_edge,w
  2590  0F05  00A2               	movwf	??_lcd_cursor_right
  2591  0F06  0822               	movf	??_lcd_cursor_right,w
  2592  0F07  00E2               	movwf	_lcd_cursor_col
  2593  0F08                     l250:
  2594  0F08  0008               	return
  2595  0F09                     __end_of_lcd_cursor_right:
  2596                           
  2597                           	psect	text9
  2598  0CC2                     __ptext9:	
  2599 ;; *************** function _lcd_cursor_left *****************
  2600 ;; Defined at:
  2601 ;;		line 405 in file "./lcd.h"
  2602 ;; Parameters:    Size  Location     Type
  2603 ;;  n               1    wreg     char 
  2604 ;; Auto vars:     Size  Location     Type
  2605 ;;  n               1    2[BANK0 ] char 
  2606 ;; Return value:  Size  Location     Type
  2607 ;;                  1    wreg      void 
  2608 ;; Registers used:
  2609 ;;		wreg, status,2, status,0, pclath, cstack
  2610 ;; Tracked objects:
  2611 ;;		On entry : 0/0
  2612 ;;		On exit  : 0/0
  2613 ;;		Unchanged: 0/0
  2614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2615 ;;      Params:         0       0       0       0       0
  2616 ;;      Locals:         0       1       0       0       0
  2617 ;;      Temps:          0       1       0       0       0
  2618 ;;      Totals:         0       2       0       0       0
  2619 ;;Total ram usage:        2 bytes
  2620 ;; Hardware stack levels used:    1
  2621 ;; Hardware stack levels required when called:    5
  2622 ;; This function calls:
  2623 ;;		_lcd_cur_disp_shift
  2624 ;;		_lcd_shift_right
  2625 ;; This function is called by:
  2626 ;;		_lcd_backspace
  2627 ;; This function uses a non-reentrant model
  2628 ;;
  2629                           
  2630                           
  2631                           ;psect for function _lcd_cursor_left
  2632  0CC2                     _lcd_cursor_left:
  2633                           
  2634                           ;incstack = 0
  2635                           ; Regs used in _lcd_cursor_left: [wreg+status,2+status,0+pclath+cstack]
  2636                           ;lcd_cursor_left@n stored from wreg
  2637  0CC2  1283               	bcf	3,5	;RP0=0, select bank0
  2638  0CC3  1303               	bcf	3,6	;RP1=0, select bank0
  2639  0CC4  00A2               	movwf	lcd_cursor_left@n
  2640  0CC5                     l2006:
  2641                           
  2642                           ;./lcd.h: 405: void lcd_cursor_left(signed char n);./lcd.h: 406: {;./lcd.h: 407:     whi
      +                          le(n-- > 0 && lcd_cursor_col-- > left_edge) {
  2643  0CC5  2CF4               	goto	l2018
  2644  0CC6                     l2008:
  2645                           
  2646                           ;./lcd.h: 408:         lcd_cur_disp_shift(0, 0);
  2647  0CC6  01F8               	clrf	lcd_cur_disp_shift@r_l
  2648  0CC7  3000               	movlw	0
  2649  0CC8  120A  158A  22F6  120A  158A  	fcall	_lcd_cur_disp_shift
  2650  0CCD                     l2010:
  2651                           
  2652                           ;./lcd.h: 409:         if (lcd_cursor_col == lcd_shift_pos)
  2653  0CCD  1283               	bcf	3,5	;RP0=0, select bank0
  2654  0CCE  1303               	bcf	3,6	;RP1=0, select bank0
  2655  0CCF  0862               	movf	_lcd_cursor_col,w
  2656  0CD0  0661               	xorwf	_lcd_shift_pos,w
  2657  0CD1  1D03               	skipz
  2658  0CD2  2CD4               	goto	u2461
  2659  0CD3  2CD5               	goto	u2460
  2660  0CD4                     u2461:
  2661  0CD4  2CE9               	goto	l2016
  2662  0CD5                     u2460:
  2663  0CD5                     l2012:
  2664                           
  2665                           ;./lcd.h: 411:             lcd_shift_right(1);
  2666  0CD5  3001               	movlw	1
  2667  0CD6  120A  158A  234F  120A  158A  	fcall	_lcd_shift_right
  2668  0CDB  2CE9               	goto	l2016
  2669  0CDC                     l2014:
  2670                           
  2671                           ;./lcd.h: 413:                 lcd_cur_disp_shift(0, 0);
  2672  0CDC  01F8               	clrf	lcd_cur_disp_shift@r_l
  2673  0CDD  3000               	movlw	0
  2674  0CDE  120A  158A  22F6  120A  158A  	fcall	_lcd_cur_disp_shift
  2675                           
  2676                           ;./lcd.h: 414:                 lcd_shift_right(1);
  2677  0CE3  3001               	movlw	1
  2678  0CE4  120A  158A  234F  120A  158A  	fcall	_lcd_shift_right
  2679  0CE9                     l2016:
  2680                           
  2681                           ;./lcd.h: 412:             while(n--) {
  2682  0CE9  30FF               	movlw	255
  2683  0CEA  1283               	bcf	3,5	;RP0=0, select bank0
  2684  0CEB  1303               	bcf	3,6	;RP1=0, select bank0
  2685  0CEC  00A1               	movwf	??_lcd_cursor_left
  2686  0CED  0821               	movf	??_lcd_cursor_left,w
  2687  0CEE  07A2               	addwf	lcd_cursor_left@n,f
  2688  0CEF  0A22               	incf	lcd_cursor_left@n,w
  2689  0CF0  1D03               	btfss	3,2
  2690  0CF1  2CF3               	goto	u2471
  2691  0CF2  2CF4               	goto	u2470
  2692  0CF3                     u2471:
  2693  0CF3  2CDC               	goto	l2014
  2694  0CF4                     u2470:
  2695  0CF4                     l2018:
  2696                           
  2697                           ;./lcd.h: 407:     while(n-- > 0 && lcd_cursor_col-- > left_edge) {
  2698  0CF4  30FF               	movlw	-1
  2699  0CF5  07A2               	addwf	lcd_cursor_left@n,f
  2700  0CF6  3001               	movlw	1
  2701  0CF7  0722               	addwf	lcd_cursor_left@n,w
  2702  0CF8  3A80               	xorlw	128
  2703  0CF9  3E7F               	addlw	-129
  2704  0CFA  1C03               	skipc
  2705  0CFB  2CFD               	goto	u2481
  2706  0CFC  2CFE               	goto	u2480
  2707  0CFD                     u2481:
  2708  0CFD  2D0B               	goto	l2022
  2709  0CFE                     u2480:
  2710  0CFE                     l2020:
  2711  0CFE  0860               	movf	_left_edge,w
  2712  0CFF  3A80               	xorlw	128
  2713  0D00  00A1               	movwf	??_lcd_cursor_left
  2714  0D01  30FF               	movlw	-1
  2715  0D02  07E2               	addwf	_lcd_cursor_col,f
  2716  0D03  3001               	movlw	1
  2717  0D04  0762               	addwf	_lcd_cursor_col,w
  2718  0D05  3A80               	xorlw	128
  2719  0D06  02A1               	subwf	??_lcd_cursor_left,f
  2720  0D07  1C03               	skipc
  2721  0D08  2D0A               	goto	u2491
  2722  0D09  2D0B               	goto	u2490
  2723  0D0A                     u2491:
  2724  0D0A  2CC6               	goto	l2008
  2725  0D0B                     u2490:
  2726  0D0B                     l2022:
  2727                           
  2728                           ;./lcd.h: 418:     if (lcd_cursor_col < left_edge) lcd_cursor_col = left_edge;
  2729  0D0B  0862               	movf	_lcd_cursor_col,w
  2730  0D0C  3A80               	xorlw	128
  2731  0D0D  00A1               	movwf	??_lcd_cursor_left
  2732  0D0E  0860               	movf	_left_edge,w
  2733  0D0F  3A80               	xorlw	128
  2734  0D10  02A1               	subwf	??_lcd_cursor_left,f
  2735  0D11  1803               	skipnc
  2736  0D12  2D14               	goto	u2501
  2737  0D13  2D15               	goto	u2500
  2738  0D14                     u2501:
  2739  0D14  2D19               	goto	l237
  2740  0D15                     u2500:
  2741  0D15                     l2024:
  2742  0D15  0860               	movf	_left_edge,w
  2743  0D16  00A1               	movwf	??_lcd_cursor_left
  2744  0D17  0821               	movf	??_lcd_cursor_left,w
  2745  0D18  00E2               	movwf	_lcd_cursor_col
  2746  0D19                     l237:
  2747  0D19  0008               	return
  2748  0D1A                     __end_of_lcd_cursor_left:
  2749                           
  2750                           	psect	text10
  2751  01BD                     __ptext10:	
  2752 ;; *************** function ___xxtofl *****************
  2753 ;; Defined at:
  2754 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\xxtofl.c"
  2755 ;; Parameters:    Size  Location     Type
  2756 ;;  sign            1    wreg     unsigned char 
  2757 ;;  val             4    0[COMMON] long 
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;  sign            1    8[COMMON] unsigned char 
  2760 ;;  arg             4   10[COMMON] unsigned long 
  2761 ;;  exp             1    9[COMMON] unsigned char 
  2762 ;; Return value:  Size  Location     Type
  2763 ;;                  4    0[COMMON] unsigned char 
  2764 ;; Registers used:
  2765 ;;		wreg, status,2, status,0
  2766 ;; Tracked objects:
  2767 ;;		On entry : 0/0
  2768 ;;		On exit  : 0/0
  2769 ;;		Unchanged: 0/0
  2770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2771 ;;      Params:         4       0       0       0       0
  2772 ;;      Locals:         6       0       0       0       0
  2773 ;;      Temps:          4       0       0       0       0
  2774 ;;      Totals:        14       0       0       0       0
  2775 ;;Total ram usage:       14 bytes
  2776 ;; Hardware stack levels used:    1
  2777 ;; This function calls:
  2778 ;;		Nothing
  2779 ;; This function is called by:
  2780 ;;		_update_temp
  2781 ;; This function uses a non-reentrant model
  2782 ;;
  2783                           
  2784                           
  2785                           ;psect for function ___xxtofl
  2786  01BD                     ___xxtofl:
  2787                           
  2788                           ;incstack = 0
  2789                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2790                           ;___xxtofl@sign stored from wreg
  2791  01BD  00F8               	movwf	___xxtofl@sign
  2792  01BE                     l2352:
  2793  01BE  0878               	movf	___xxtofl@sign,w
  2794  01BF  1903               	btfsc	3,2
  2795  01C0  29C2               	goto	u3421
  2796  01C1  29C3               	goto	u3420
  2797  01C2                     u3421:
  2798  01C2  29D7               	goto	l2358
  2799  01C3                     u3420:
  2800  01C3                     l2354:
  2801  01C3  1FF3               	btfss	___xxtofl@val+3,7
  2802  01C4  29C6               	goto	u3431
  2803  01C5  29C7               	goto	u3430
  2804  01C6                     u3431:
  2805  01C6  29D7               	goto	l2358
  2806  01C7                     u3430:
  2807  01C7                     l2356:
  2808  01C7  0970               	comf	___xxtofl@val,w
  2809  01C8  00FA               	movwf	___xxtofl@arg
  2810  01C9  0971               	comf	___xxtofl@val+1,w
  2811  01CA  00FB               	movwf	___xxtofl@arg+1
  2812  01CB  0972               	comf	___xxtofl@val+2,w
  2813  01CC  00FC               	movwf	___xxtofl@arg+2
  2814  01CD  0973               	comf	___xxtofl@val+3,w
  2815  01CE  00FD               	movwf	___xxtofl@arg+3
  2816  01CF  0AFA               	incf	___xxtofl@arg,f
  2817  01D0  1903               	skipnz
  2818  01D1  0AFB               	incf	___xxtofl@arg+1,f
  2819  01D2  1903               	skipnz
  2820  01D3  0AFC               	incf	___xxtofl@arg+2,f
  2821  01D4  1903               	skipnz
  2822  01D5  0AFD               	incf	___xxtofl@arg+3,f
  2823  01D6  29DF               	goto	l890
  2824  01D7                     l2358:
  2825  01D7  0873               	movf	___xxtofl@val+3,w
  2826  01D8  00FD               	movwf	___xxtofl@arg+3
  2827  01D9  0872               	movf	___xxtofl@val+2,w
  2828  01DA  00FC               	movwf	___xxtofl@arg+2
  2829  01DB  0871               	movf	___xxtofl@val+1,w
  2830  01DC  00FB               	movwf	___xxtofl@arg+1
  2831  01DD  0870               	movf	___xxtofl@val,w
  2832  01DE  00FA               	movwf	___xxtofl@arg
  2833  01DF                     l890:
  2834  01DF  0873               	movf	___xxtofl@val+3,w
  2835  01E0  0472               	iorwf	___xxtofl@val+2,w
  2836  01E1  0471               	iorwf	___xxtofl@val+1,w
  2837  01E2  0470               	iorwf	___xxtofl@val,w
  2838  01E3  1D03               	skipz
  2839  01E4  29E6               	goto	u3441
  2840  01E5  29E7               	goto	u3440
  2841  01E6                     u3441:
  2842  01E6  29F0               	goto	l2364
  2843  01E7                     u3440:
  2844  01E7                     l2360:
  2845  01E7  3000               	movlw	0
  2846  01E8  00F3               	movwf	?___xxtofl+3
  2847  01E9  3000               	movlw	0
  2848  01EA  00F2               	movwf	?___xxtofl+2
  2849  01EB  3000               	movlw	0
  2850  01EC  00F1               	movwf	?___xxtofl+1
  2851  01ED  3000               	movlw	0
  2852  01EE  00F0               	movwf	?___xxtofl
  2853  01EF  2A76               	goto	l892
  2854  01F0                     l2364:
  2855  01F0  3096               	movlw	150
  2856  01F1  00F4               	movwf	??___xxtofl
  2857  01F2  0874               	movf	??___xxtofl,w
  2858  01F3  00F9               	movwf	___xxtofl@exp
  2859  01F4  2A02               	goto	l2368
  2860  01F5                     l2366:
  2861  01F5  3001               	movlw	1
  2862  01F6  00F4               	movwf	??___xxtofl
  2863  01F7  0874               	movf	??___xxtofl,w
  2864  01F8  07F9               	addwf	___xxtofl@exp,f
  2865  01F9  3001               	movlw	1
  2866  01FA                     u3455:
  2867  01FA  1003               	clrc
  2868  01FB  0CFD               	rrf	___xxtofl@arg+3,f
  2869  01FC  0CFC               	rrf	___xxtofl@arg+2,f
  2870  01FD  0CFB               	rrf	___xxtofl@arg+1,f
  2871  01FE  0CFA               	rrf	___xxtofl@arg,f
  2872  01FF  3EFF               	addlw	-1
  2873  0200  1D03               	skipz
  2874  0201  29FA               	goto	u3455
  2875  0202                     l2368:
  2876  0202  30FE               	movlw	254
  2877  0203  057D               	andwf	___xxtofl@arg+3,w
  2878  0204  1D03               	btfss	3,2
  2879  0205  2A07               	goto	u3461
  2880  0206  2A08               	goto	u3460
  2881  0207                     u3461:
  2882  0207  29F5               	goto	l2366
  2883  0208                     u3460:
  2884  0208  2A24               	goto	l896
  2885  0209                     l2370:
  2886  0209  3001               	movlw	1
  2887  020A  00F4               	movwf	??___xxtofl
  2888  020B  0874               	movf	??___xxtofl,w
  2889  020C  07F9               	addwf	___xxtofl@exp,f
  2890  020D                     l2372:
  2891  020D  3001               	movlw	1
  2892  020E  07FA               	addwf	___xxtofl@arg,f
  2893  020F  3000               	movlw	0
  2894  0210  1803               	skipnc
  2895  0211  3001               	movlw	1
  2896  0212  07FB               	addwf	___xxtofl@arg+1,f
  2897  0213  3000               	movlw	0
  2898  0214  1803               	skipnc
  2899  0215  3001               	movlw	1
  2900  0216  07FC               	addwf	___xxtofl@arg+2,f
  2901  0217  3000               	movlw	0
  2902  0218  1803               	skipnc
  2903  0219  3001               	movlw	1
  2904  021A  07FD               	addwf	___xxtofl@arg+3,f
  2905  021B                     l2374:
  2906  021B  3001               	movlw	1
  2907  021C                     u3475:
  2908  021C  1003               	clrc
  2909  021D  0CFD               	rrf	___xxtofl@arg+3,f
  2910  021E  0CFC               	rrf	___xxtofl@arg+2,f
  2911  021F  0CFB               	rrf	___xxtofl@arg+1,f
  2912  0220  0CFA               	rrf	___xxtofl@arg,f
  2913  0221  3EFF               	addlw	-1
  2914  0222  1D03               	skipz
  2915  0223  2A1C               	goto	u3475
  2916  0224                     l896:
  2917  0224  30FF               	movlw	255
  2918  0225  057D               	andwf	___xxtofl@arg+3,w
  2919  0226  1D03               	btfss	3,2
  2920  0227  2A29               	goto	u3481
  2921  0228  2A2A               	goto	u3480
  2922  0229                     u3481:
  2923  0229  2A09               	goto	l2370
  2924  022A                     u3480:
  2925  022A  2A36               	goto	l2378
  2926  022B                     l2376:
  2927  022B  3001               	movlw	1
  2928  022C  02F9               	subwf	___xxtofl@exp,f
  2929  022D  3001               	movlw	1
  2930  022E  00F4               	movwf	??___xxtofl
  2931  022F                     u3495:
  2932  022F  1003               	clrc
  2933  0230  0DFA               	rlf	___xxtofl@arg,f
  2934  0231  0DFB               	rlf	___xxtofl@arg+1,f
  2935  0232  0DFC               	rlf	___xxtofl@arg+2,f
  2936  0233  0DFD               	rlf	___xxtofl@arg+3,f
  2937  0234  0BF4               	decfsz	??___xxtofl,f
  2938  0235  2A2F               	goto	u3495
  2939  0236                     l2378:
  2940  0236  1BFC               	btfsc	___xxtofl@arg+2,7
  2941  0237  2A39               	goto	u3501
  2942  0238  2A3A               	goto	u3500
  2943  0239                     u3501:
  2944  0239  2A40               	goto	l903
  2945  023A                     u3500:
  2946  023A                     l2380:
  2947  023A  3002               	movlw	2
  2948  023B  0279               	subwf	___xxtofl@exp,w
  2949  023C  1803               	skipnc
  2950  023D  2A3F               	goto	u3511
  2951  023E  2A40               	goto	u3510
  2952  023F                     u3511:
  2953  023F  2A2B               	goto	l2376
  2954  0240                     u3510:
  2955  0240                     l903:
  2956  0240  1879               	btfsc	___xxtofl@exp,0
  2957  0241  2A43               	goto	u3521
  2958  0242  2A44               	goto	u3520
  2959  0243                     u3521:
  2960  0243  2A4C               	goto	l904
  2961  0244                     u3520:
  2962  0244                     l2382:
  2963  0244  30FF               	movlw	255
  2964  0245  05FA               	andwf	___xxtofl@arg,f
  2965  0246  30FF               	movlw	255
  2966  0247  05FB               	andwf	___xxtofl@arg+1,f
  2967  0248  307F               	movlw	127
  2968  0249  05FC               	andwf	___xxtofl@arg+2,f
  2969  024A  30FF               	movlw	255
  2970  024B  05FD               	andwf	___xxtofl@arg+3,f
  2971  024C                     l904:
  2972  024C  1003               	clrc
  2973  024D  0CF9               	rrf	___xxtofl@exp,f
  2974  024E                     l2384:
  2975  024E  0879               	movf	___xxtofl@exp,w
  2976  024F  00F4               	movwf	??___xxtofl
  2977  0250  01F5               	clrf	??___xxtofl+1
  2978  0251  01F6               	clrf	??___xxtofl+2
  2979  0252  01F7               	clrf	??___xxtofl+3
  2980  0253  3018               	movlw	24
  2981  0254                     u3535:
  2982  0254  1003               	clrc
  2983  0255  0DF4               	rlf	??___xxtofl,f
  2984  0256  0DF5               	rlf	??___xxtofl+1,f
  2985  0257  0DF6               	rlf	??___xxtofl+2,f
  2986  0258  0DF7               	rlf	??___xxtofl+3,f
  2987  0259                     u3530:
  2988  0259  3EFF               	addlw	-1
  2989  025A  1D03               	skipz
  2990  025B  2A54               	goto	u3535
  2991  025C  0874               	movf	??___xxtofl,w
  2992  025D  04FA               	iorwf	___xxtofl@arg,f
  2993  025E  0875               	movf	??___xxtofl+1,w
  2994  025F  04FB               	iorwf	___xxtofl@arg+1,f
  2995  0260  0876               	movf	??___xxtofl+2,w
  2996  0261  04FC               	iorwf	___xxtofl@arg+2,f
  2997  0262  0877               	movf	??___xxtofl+3,w
  2998  0263  04FD               	iorwf	___xxtofl@arg+3,f
  2999  0264                     l2386:
  3000  0264  0878               	movf	___xxtofl@sign,w
  3001  0265  1903               	btfsc	3,2
  3002  0266  2A68               	goto	u3541
  3003  0267  2A69               	goto	u3540
  3004  0268                     u3541:
  3005  0268  2A6E               	goto	l2392
  3006  0269                     u3540:
  3007  0269                     l2388:
  3008  0269  1FF3               	btfss	___xxtofl@val+3,7
  3009  026A  2A6C               	goto	u3551
  3010  026B  2A6D               	goto	u3550
  3011  026C                     u3551:
  3012  026C  2A6E               	goto	l2392
  3013  026D                     u3550:
  3014  026D                     l2390:
  3015  026D  17FD               	bsf	___xxtofl@arg+3,7
  3016  026E                     l2392:
  3017  026E  087D               	movf	___xxtofl@arg+3,w
  3018  026F  00F3               	movwf	?___xxtofl+3
  3019  0270  087C               	movf	___xxtofl@arg+2,w
  3020  0271  00F2               	movwf	?___xxtofl+2
  3021  0272  087B               	movf	___xxtofl@arg+1,w
  3022  0273  00F1               	movwf	?___xxtofl+1
  3023  0274  087A               	movf	___xxtofl@arg,w
  3024  0275  00F0               	movwf	?___xxtofl
  3025  0276                     l892:
  3026  0276  0008               	return
  3027  0277                     __end_of___xxtofl:
  3028                           
  3029                           	psect	text11
  3030  0F84                     __ptext11:	
  3031 ;; *************** function ___fltol *****************
  3032 ;; Defined at:
  3033 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\fltol.c"
  3034 ;; Parameters:    Size  Location     Type
  3035 ;;  f1              4   26[BANK0 ] unsigned char 
  3036 ;; Auto vars:     Size  Location     Type
  3037 ;;  exp1            1   36[BANK0 ] unsigned char 
  3038 ;;  sign1           1   35[BANK0 ] unsigned char 
  3039 ;; Return value:  Size  Location     Type
  3040 ;;                  4   26[BANK0 ] long 
  3041 ;; Registers used:
  3042 ;;		wreg, status,2, status,0
  3043 ;; Tracked objects:
  3044 ;;		On entry : 0/0
  3045 ;;		On exit  : 0/0
  3046 ;;		Unchanged: 0/0
  3047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3048 ;;      Params:         0       4       0       0       0
  3049 ;;      Locals:         0       2       0       0       0
  3050 ;;      Temps:          0       5       0       0       0
  3051 ;;      Totals:         0      11       0       0       0
  3052 ;;Total ram usage:       11 bytes
  3053 ;; Hardware stack levels used:    1
  3054 ;; This function calls:
  3055 ;;		Nothing
  3056 ;; This function is called by:
  3057 ;;		_update_temp
  3058 ;; This function uses a non-reentrant model
  3059 ;;
  3060                           
  3061                           
  3062                           ;psect for function ___fltol
  3063  0F84                     ___fltol:
  3064  0F84                     l2174:	
  3065                           ;incstack = 0
  3066                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  3067                           
  3068  0F84  1003               	clrc
  3069  0F85  1283               	bcf	3,5	;RP0=0, select bank0
  3070  0F86  1303               	bcf	3,6	;RP1=0, select bank0
  3071  0F87  0D3C               	rlf	___fltol@f1+2,w
  3072  0F88  0D3D               	rlf	___fltol@f1+3,w
  3073  0F89  00BE               	movwf	??___fltol
  3074  0F8A  083E               	movf	??___fltol,w
  3075  0F8B  00C4               	movwf	___fltol@exp1
  3076  0F8C  0844               	movf	___fltol@exp1,w
  3077  0F8D  1D03               	btfss	3,2
  3078  0F8E  2F90               	goto	u3031
  3079  0F8F  2F91               	goto	u3030
  3080  0F90                     u3031:
  3081  0F90  2F9A               	goto	l2180
  3082  0F91                     u3030:
  3083  0F91                     l2176:
  3084  0F91  3000               	movlw	0
  3085  0F92  00BD               	movwf	?___fltol+3
  3086  0F93  3000               	movlw	0
  3087  0F94  00BC               	movwf	?___fltol+2
  3088  0F95  3000               	movlw	0
  3089  0F96  00BB               	movwf	?___fltol+1
  3090  0F97  3000               	movlw	0
  3091  0F98  00BA               	movwf	?___fltol
  3092  0F99  2FFF               	goto	l643
  3093  0F9A                     l2180:
  3094  0F9A  083A               	movf	___fltol@f1,w
  3095  0F9B  00BE               	movwf	??___fltol
  3096  0F9C  083B               	movf	___fltol@f1+1,w
  3097  0F9D  00BF               	movwf	??___fltol+1
  3098  0F9E  083C               	movf	___fltol@f1+2,w
  3099  0F9F  00C0               	movwf	??___fltol+2
  3100  0FA0  083D               	movf	___fltol@f1+3,w
  3101  0FA1  00C1               	movwf	??___fltol+3
  3102  0FA2  301F               	movlw	31
  3103  0FA3                     u3045:
  3104  0FA3  1003               	clrc
  3105  0FA4  0CC1               	rrf	??___fltol+3,f
  3106  0FA5  0CC0               	rrf	??___fltol+2,f
  3107  0FA6  0CBF               	rrf	??___fltol+1,f
  3108  0FA7  0CBE               	rrf	??___fltol,f
  3109  0FA8                     u3040:
  3110  0FA8  3EFF               	addlw	-1
  3111  0FA9  1D03               	skipz
  3112  0FAA  2FA3               	goto	u3045
  3113  0FAB  083E               	movf	??___fltol,w
  3114  0FAC  00C2               	movwf	??___fltol+4
  3115  0FAD  0842               	movf	??___fltol+4,w
  3116  0FAE  00C3               	movwf	___fltol@sign1
  3117  0FAF                     l2182:
  3118  0FAF  17BC               	bsf	___fltol@f1+2,7
  3119  0FB0                     l2184:
  3120  0FB0  30FF               	movlw	255
  3121  0FB1  05BA               	andwf	___fltol@f1,f
  3122  0FB2  30FF               	movlw	255
  3123  0FB3  05BB               	andwf	___fltol@f1+1,f
  3124  0FB4  30FF               	movlw	255
  3125  0FB5  05BC               	andwf	___fltol@f1+2,f
  3126  0FB6  3000               	movlw	0
  3127  0FB7  05BD               	andwf	___fltol@f1+3,f
  3128  0FB8                     l2186:
  3129  0FB8  3096               	movlw	150
  3130  0FB9  02C4               	subwf	___fltol@exp1,f
  3131  0FBA                     l2188:
  3132  0FBA  1FC4               	btfss	___fltol@exp1,7
  3133  0FBB  2FBD               	goto	u3051
  3134  0FBC  2FBE               	goto	u3050
  3135  0FBD                     u3051:
  3136  0FBD  2FD8               	goto	l2198
  3137  0FBE                     u3050:
  3138  0FBE                     l2190:
  3139  0FBE  0844               	movf	___fltol@exp1,w
  3140  0FBF  3A80               	xorlw	128
  3141  0FC0  3E97               	addlw	151
  3142  0FC1  1803               	skipnc
  3143  0FC2  2FC4               	goto	u3061
  3144  0FC3  2FC5               	goto	u3060
  3145  0FC4                     u3061:
  3146  0FC4  2FC6               	goto	l2196
  3147  0FC5                     u3060:
  3148  0FC5  2F91               	goto	l2176
  3149  0FC6                     l2196:
  3150  0FC6  3001               	movlw	1
  3151  0FC7                     u3075:
  3152  0FC7  1003               	clrc
  3153  0FC8  0CBD               	rrf	___fltol@f1+3,f
  3154  0FC9  0CBC               	rrf	___fltol@f1+2,f
  3155  0FCA  0CBB               	rrf	___fltol@f1+1,f
  3156  0FCB  0CBA               	rrf	___fltol@f1,f
  3157  0FCC  3EFF               	addlw	-1
  3158  0FCD  1D03               	skipz
  3159  0FCE  2FC7               	goto	u3075
  3160  0FCF  3001               	movlw	1
  3161  0FD0  00BE               	movwf	??___fltol
  3162  0FD1  083E               	movf	??___fltol,w
  3163  0FD2  07C4               	addwf	___fltol@exp1,f
  3164  0FD3  1D03               	btfss	3,2
  3165  0FD4  2FD6               	goto	u3081
  3166  0FD5  2FD7               	goto	u3080
  3167  0FD6                     u3081:
  3168  0FD6  2FC6               	goto	l2196
  3169  0FD7                     u3080:
  3170  0FD7  2FEF               	goto	l2206
  3171  0FD8                     l2198:
  3172  0FD8  3020               	movlw	32
  3173  0FD9  0244               	subwf	___fltol@exp1,w
  3174  0FDA  1C03               	skipc
  3175  0FDB  2FDD               	goto	u3091
  3176  0FDC  2FDE               	goto	u3090
  3177  0FDD                     u3091:
  3178  0FDD  2FEA               	goto	l650
  3179  0FDE                     u3090:
  3180  0FDE  2F91               	goto	l2176
  3181  0FDF                     l2204:
  3182  0FDF  3001               	movlw	1
  3183  0FE0  00BE               	movwf	??___fltol
  3184  0FE1                     u3105:
  3185  0FE1  1003               	clrc
  3186  0FE2  0DBA               	rlf	___fltol@f1,f
  3187  0FE3  0DBB               	rlf	___fltol@f1+1,f
  3188  0FE4  0DBC               	rlf	___fltol@f1+2,f
  3189  0FE5  0DBD               	rlf	___fltol@f1+3,f
  3190  0FE6  0BBE               	decfsz	??___fltol,f
  3191  0FE7  2FE1               	goto	u3105
  3192  0FE8  3001               	movlw	1
  3193  0FE9  02C4               	subwf	___fltol@exp1,f
  3194  0FEA                     l650:
  3195  0FEA  0844               	movf	___fltol@exp1,w
  3196  0FEB  1D03               	btfss	3,2
  3197  0FEC  2FEE               	goto	u3111
  3198  0FED  2FEF               	goto	u3110
  3199  0FEE                     u3111:
  3200  0FEE  2FDF               	goto	l2204
  3201  0FEF                     u3110:
  3202  0FEF                     l2206:
  3203  0FEF  0843               	movf	___fltol@sign1,w
  3204  0FF0  1903               	btfsc	3,2
  3205  0FF1  2FF3               	goto	u3121
  3206  0FF2  2FF4               	goto	u3120
  3207  0FF3                     u3121:
  3208  0FF3  2FFF               	goto	l653
  3209  0FF4                     u3120:
  3210  0FF4                     l2208:
  3211  0FF4  09BA               	comf	___fltol@f1,f
  3212  0FF5  09BB               	comf	___fltol@f1+1,f
  3213  0FF6  09BC               	comf	___fltol@f1+2,f
  3214  0FF7  09BD               	comf	___fltol@f1+3,f
  3215  0FF8  0ABA               	incf	___fltol@f1,f
  3216  0FF9  1903               	skipnz
  3217  0FFA  0ABB               	incf	___fltol@f1+1,f
  3218  0FFB  1903               	skipnz
  3219  0FFC  0ABC               	incf	___fltol@f1+2,f
  3220  0FFD  1903               	skipnz
  3221  0FFE  0ABD               	incf	___fltol@f1+3,f
  3222  0FFF                     l653:
  3223  0FFF                     l643:
  3224  0FFF  0008               	return
  3225  1000                     __end_of___fltol:
  3226                           
  3227                           	psect	text12
  3228  0613                     __ptext12:	
  3229 ;; *************** function ___fldiv *****************
  3230 ;; Defined at:
  3231 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\sprcdiv.c"
  3232 ;; Parameters:    Size  Location     Type
  3233 ;;  a               4    0[BANK0 ] long 
  3234 ;;  b               4    4[BANK0 ] long 
  3235 ;; Auto vars:     Size  Location     Type
  3236 ;;  grs             4   20[BANK0 ] unsigned long 
  3237 ;;  rem             4   13[BANK0 ] unsigned long 
  3238 ;;  new_exp         2   18[BANK0 ] int 
  3239 ;;  aexp            1   25[BANK0 ] unsigned char 
  3240 ;;  bexp            1   24[BANK0 ] unsigned char 
  3241 ;;  sign            1   17[BANK0 ] unsigned char 
  3242 ;; Return value:  Size  Location     Type
  3243 ;;                  4    0[BANK0 ] unsigned char 
  3244 ;; Registers used:
  3245 ;;		wreg, status,2, status,0, btemp+1
  3246 ;; Tracked objects:
  3247 ;;		On entry : 0/0
  3248 ;;		On exit  : 0/0
  3249 ;;		Unchanged: 0/0
  3250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3251 ;;      Params:         0       8       0       0       0
  3252 ;;      Locals:         0      13       0       0       0
  3253 ;;      Temps:          0       5       0       0       0
  3254 ;;      Totals:         0      26       0       0       0
  3255 ;;Total ram usage:       26 bytes
  3256 ;; Hardware stack levels used:    1
  3257 ;; This function calls:
  3258 ;;		Nothing
  3259 ;; This function is called by:
  3260 ;;		_update_temp
  3261 ;; This function uses a non-reentrant model
  3262 ;;
  3263                           
  3264                           
  3265                           ;psect for function ___fldiv
  3266  0613                     ___fldiv:
  3267  0613                     l2210:	
  3268                           ;incstack = 0
  3269                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  3270                           
  3271  0613  1283               	bcf	3,5	;RP0=0, select bank0
  3272  0614  1303               	bcf	3,6	;RP1=0, select bank0
  3273  0615  0827               	movf	___fldiv@b+3,w
  3274  0616  3980               	andlw	128
  3275  0617  00A8               	movwf	??___fldiv
  3276  0618  0828               	movf	??___fldiv,w
  3277  0619  00B1               	movwf	___fldiv@sign
  3278  061A                     l2212:
  3279  061A  0827               	movf	___fldiv@b+3,w
  3280  061B  00A8               	movwf	??___fldiv
  3281  061C  0728               	addwf	??___fldiv,w
  3282  061D  00A9               	movwf	??___fldiv+1
  3283  061E  0829               	movf	??___fldiv+1,w
  3284  061F  00B8               	movwf	___fldiv@bexp
  3285  0620                     l2214:
  3286  0620  1FA6               	btfss	___fldiv@b+2,7
  3287  0621  2E23               	goto	u3131
  3288  0622  2E24               	goto	u3130
  3289  0623                     u3131:
  3290  0623  2E25               	goto	l2218
  3291  0624                     u3130:
  3292  0624                     l2216:
  3293  0624  1438               	bsf	___fldiv@bexp,0
  3294  0625                     l2218:
  3295  0625  0838               	movf	___fldiv@bexp,w
  3296  0626  1903               	btfsc	3,2
  3297  0627  2E29               	goto	u3141
  3298  0628  2E2A               	goto	u3140
  3299  0629                     u3141:
  3300  0629  2E3A               	goto	l2228
  3301  062A                     u3140:
  3302  062A                     l2220:
  3303  062A  0A38               	incf	___fldiv@bexp,w
  3304  062B  1D03               	btfss	3,2
  3305  062C  2E2E               	goto	u3151
  3306  062D  2E2F               	goto	u3150
  3307  062E                     u3151:
  3308  062E  2E37               	goto	l2224
  3309  062F                     u3150:
  3310  062F                     l2222:
  3311  062F  3000               	movlw	0
  3312  0630  00A7               	movwf	___fldiv@b+3
  3313  0631  3000               	movlw	0
  3314  0632  00A6               	movwf	___fldiv@b+2
  3315  0633  3000               	movlw	0
  3316  0634  00A5               	movwf	___fldiv@b+1
  3317  0635  3000               	movlw	0
  3318  0636  00A4               	movwf	___fldiv@b
  3319  0637                     l2224:
  3320  0637  17A6               	bsf	___fldiv@b+2,7
  3321  0638                     l2226:
  3322  0638  01A7               	clrf	___fldiv@b+3
  3323  0639  2E42               	goto	l2230
  3324  063A                     l2228:
  3325  063A  3000               	movlw	0
  3326  063B  00A7               	movwf	___fldiv@b+3
  3327  063C  3000               	movlw	0
  3328  063D  00A6               	movwf	___fldiv@b+2
  3329  063E  3000               	movlw	0
  3330  063F  00A5               	movwf	___fldiv@b+1
  3331  0640  3000               	movlw	0
  3332  0641  00A4               	movwf	___fldiv@b
  3333  0642                     l2230:
  3334  0642  0823               	movf	___fldiv@a+3,w
  3335  0643  3980               	andlw	128
  3336  0644  00A8               	movwf	??___fldiv
  3337  0645  0828               	movf	??___fldiv,w
  3338  0646  06B1               	xorwf	___fldiv@sign,f
  3339  0647                     l2232:
  3340  0647  0823               	movf	___fldiv@a+3,w
  3341  0648  00A8               	movwf	??___fldiv
  3342  0649  0728               	addwf	??___fldiv,w
  3343  064A  00A9               	movwf	??___fldiv+1
  3344  064B  0829               	movf	??___fldiv+1,w
  3345  064C  00B9               	movwf	___fldiv@aexp
  3346  064D                     l2234:
  3347  064D  1FA2               	btfss	___fldiv@a+2,7
  3348  064E  2E50               	goto	u3161
  3349  064F  2E51               	goto	u3160
  3350  0650                     u3161:
  3351  0650  2E52               	goto	l2238
  3352  0651                     u3160:
  3353  0651                     l2236:
  3354  0651  1439               	bsf	___fldiv@aexp,0
  3355  0652                     l2238:
  3356  0652  0839               	movf	___fldiv@aexp,w
  3357  0653  1903               	btfsc	3,2
  3358  0654  2E56               	goto	u3171
  3359  0655  2E57               	goto	u3170
  3360  0656                     u3171:
  3361  0656  2E67               	goto	l2248
  3362  0657                     u3170:
  3363  0657                     l2240:
  3364  0657  0A39               	incf	___fldiv@aexp,w
  3365  0658  1D03               	btfss	3,2
  3366  0659  2E5B               	goto	u3181
  3367  065A  2E5C               	goto	u3180
  3368  065B                     u3181:
  3369  065B  2E64               	goto	l2244
  3370  065C                     u3180:
  3371  065C                     l2242:
  3372  065C  3000               	movlw	0
  3373  065D  00A3               	movwf	___fldiv@a+3
  3374  065E  3000               	movlw	0
  3375  065F  00A2               	movwf	___fldiv@a+2
  3376  0660  3000               	movlw	0
  3377  0661  00A1               	movwf	___fldiv@a+1
  3378  0662  3000               	movlw	0
  3379  0663  00A0               	movwf	___fldiv@a
  3380  0664                     l2244:
  3381  0664  17A2               	bsf	___fldiv@a+2,7
  3382  0665                     l2246:
  3383  0665  01A3               	clrf	___fldiv@a+3
  3384  0666  2E6F               	goto	l806
  3385  0667                     l2248:
  3386  0667  3000               	movlw	0
  3387  0668  00A3               	movwf	___fldiv@a+3
  3388  0669  3000               	movlw	0
  3389  066A  00A2               	movwf	___fldiv@a+2
  3390  066B  3000               	movlw	0
  3391  066C  00A1               	movwf	___fldiv@a+1
  3392  066D  3000               	movlw	0
  3393  066E  00A0               	movwf	___fldiv@a
  3394  066F                     l806:
  3395  066F  0823               	movf	___fldiv@a+3,w
  3396  0670  0422               	iorwf	___fldiv@a+2,w
  3397  0671  0421               	iorwf	___fldiv@a+1,w
  3398  0672  0420               	iorwf	___fldiv@a,w
  3399  0673  1D03               	skipz
  3400  0674  2E76               	goto	u3191
  3401  0675  2E77               	goto	u3190
  3402  0676                     u3191:
  3403  0676  2E90               	goto	l2258
  3404  0677                     u3190:
  3405  0677                     l2250:
  3406  0677  3000               	movlw	0
  3407  0678  00A7               	movwf	___fldiv@b+3
  3408  0679  3000               	movlw	0
  3409  067A  00A6               	movwf	___fldiv@b+2
  3410  067B  3000               	movlw	0
  3411  067C  00A5               	movwf	___fldiv@b+1
  3412  067D  3000               	movlw	0
  3413  067E  00A4               	movwf	___fldiv@b
  3414  067F  3080               	movlw	128
  3415  0680  04A6               	iorwf	___fldiv@b+2,f
  3416  0681  307F               	movlw	127
  3417  0682  04A7               	iorwf	___fldiv@b+3,f
  3418  0683                     l2252:
  3419  0683  0831               	movf	___fldiv@sign,w
  3420  0684  00A8               	movwf	??___fldiv
  3421  0685  0828               	movf	??___fldiv,w
  3422  0686  04A7               	iorwf	___fldiv@b+3,f
  3423  0687                     l2254:
  3424  0687  0827               	movf	___fldiv@b+3,w
  3425  0688  00A3               	movwf	?___fldiv+3
  3426  0689  0826               	movf	___fldiv@b+2,w
  3427  068A  00A2               	movwf	?___fldiv+2
  3428  068B  0825               	movf	___fldiv@b+1,w
  3429  068C  00A1               	movwf	?___fldiv+1
  3430  068D  0824               	movf	___fldiv@b,w
  3431  068E  00A0               	movwf	?___fldiv
  3432  068F  2FEF               	goto	l808
  3433  0690                     l2258:
  3434  0690  0838               	movf	___fldiv@bexp,w
  3435  0691  1D03               	btfss	3,2
  3436  0692  2E94               	goto	u3201
  3437  0693  2E95               	goto	u3200
  3438  0694                     u3201:
  3439  0694  2E9E               	goto	l2264
  3440  0695                     u3200:
  3441  0695                     l2260:
  3442  0695  3000               	movlw	0
  3443  0696  00A3               	movwf	?___fldiv+3
  3444  0697  3000               	movlw	0
  3445  0698  00A2               	movwf	?___fldiv+2
  3446  0699  3000               	movlw	0
  3447  069A  00A1               	movwf	?___fldiv+1
  3448  069B  3000               	movlw	0
  3449  069C  00A0               	movwf	?___fldiv
  3450  069D  2FEF               	goto	l808
  3451  069E                     l2264:
  3452  069E  0838               	movf	___fldiv@bexp,w
  3453  069F  00A8               	movwf	??___fldiv
  3454  06A0  01A9               	clrf	??___fldiv+1
  3455  06A1  0829               	movf	??___fldiv+1,w
  3456  06A2  00AB               	movwf	??___fldiv+3
  3457  06A3  0839               	movf	___fldiv@aexp,w
  3458  06A4  0228               	subwf	??___fldiv,w
  3459  06A5  00AA               	movwf	??___fldiv+2
  3460  06A6  1C03               	skipc
  3461  06A7  03AB               	decf	??___fldiv+3,f
  3462  06A8  082A               	movf	??___fldiv+2,w
  3463  06A9  3E7F               	addlw	127
  3464  06AA  00B2               	movwf	___fldiv@new_exp
  3465  06AB  082B               	movf	??___fldiv+3,w
  3466  06AC  1803               	skipnc
  3467  06AD  3E01               	addlw	1
  3468  06AE  3E00               	addlw	0
  3469  06AF  00B3               	movwf	___fldiv@new_exp+1
  3470  06B0                     l2266:
  3471  06B0  0827               	movf	___fldiv@b+3,w
  3472  06B1  00B0               	movwf	___fldiv@rem+3
  3473  06B2  0826               	movf	___fldiv@b+2,w
  3474  06B3  00AF               	movwf	___fldiv@rem+2
  3475  06B4  0825               	movf	___fldiv@b+1,w
  3476  06B5  00AE               	movwf	___fldiv@rem+1
  3477  06B6  0824               	movf	___fldiv@b,w
  3478  06B7  00AD               	movwf	___fldiv@rem
  3479  06B8                     l2268:
  3480  06B8  3000               	movlw	0
  3481  06B9  00A7               	movwf	___fldiv@b+3
  3482  06BA  3000               	movlw	0
  3483  06BB  00A6               	movwf	___fldiv@b+2
  3484  06BC  3000               	movlw	0
  3485  06BD  00A5               	movwf	___fldiv@b+1
  3486  06BE  3000               	movlw	0
  3487  06BF  00A4               	movwf	___fldiv@b
  3488  06C0                     l2270:
  3489  06C0  3000               	movlw	0
  3490  06C1  00B7               	movwf	___fldiv@grs+3
  3491  06C2  3000               	movlw	0
  3492  06C3  00B6               	movwf	___fldiv@grs+2
  3493  06C4  3000               	movlw	0
  3494  06C5  00B5               	movwf	___fldiv@grs+1
  3495  06C6  3000               	movlw	0
  3496  06C7  00B4               	movwf	___fldiv@grs
  3497  06C8                     l2272:
  3498  06C8  01B9               	clrf	___fldiv@aexp
  3499  06C9  2F14               	goto	l2292
  3500  06CA                     l2274:
  3501  06CA  0839               	movf	___fldiv@aexp,w
  3502  06CB  1903               	btfsc	3,2
  3503  06CC  2ECE               	goto	u3211
  3504  06CD  2ECF               	goto	u3210
  3505  06CE                     u3211:
  3506  06CE  2EEF               	goto	l2284
  3507  06CF                     u3210:
  3508  06CF                     l2276:
  3509  06CF  3001               	movlw	1
  3510  06D0  00A8               	movwf	??___fldiv
  3511  06D1                     u3225:
  3512  06D1  1003               	clrc
  3513  06D2  0DAD               	rlf	___fldiv@rem,f
  3514  06D3  0DAE               	rlf	___fldiv@rem+1,f
  3515  06D4  0DAF               	rlf	___fldiv@rem+2,f
  3516  06D5  0DB0               	rlf	___fldiv@rem+3,f
  3517  06D6  0BA8               	decfsz	??___fldiv,f
  3518  06D7  2ED1               	goto	u3225
  3519  06D8  3001               	movlw	1
  3520  06D9  00A8               	movwf	??___fldiv
  3521  06DA                     u3235:
  3522  06DA  1003               	clrc
  3523  06DB  0DA4               	rlf	___fldiv@b,f
  3524  06DC  0DA5               	rlf	___fldiv@b+1,f
  3525  06DD  0DA6               	rlf	___fldiv@b+2,f
  3526  06DE  0DA7               	rlf	___fldiv@b+3,f
  3527  06DF  0BA8               	decfsz	??___fldiv,f
  3528  06E0  2EDA               	goto	u3235
  3529  06E1                     l2278:
  3530  06E1  1FB7               	btfss	___fldiv@grs+3,7
  3531  06E2  2EE4               	goto	u3241
  3532  06E3  2EE5               	goto	u3240
  3533  06E4                     u3241:
  3534  06E4  2EE6               	goto	l2282
  3535  06E5                     u3240:
  3536  06E5                     l2280:
  3537  06E5  1424               	bsf	___fldiv@b,0
  3538  06E6                     l2282:
  3539  06E6  3001               	movlw	1
  3540  06E7  00A8               	movwf	??___fldiv
  3541  06E8                     u3255:
  3542  06E8  1003               	clrc
  3543  06E9  0DB4               	rlf	___fldiv@grs,f
  3544  06EA  0DB5               	rlf	___fldiv@grs+1,f
  3545  06EB  0DB6               	rlf	___fldiv@grs+2,f
  3546  06EC  0DB7               	rlf	___fldiv@grs+3,f
  3547  06ED  0BA8               	decfsz	??___fldiv,f
  3548  06EE  2EE8               	goto	u3255
  3549  06EF                     l2284:
  3550  06EF  0823               	movf	___fldiv@a+3,w
  3551  06F0  0230               	subwf	___fldiv@rem+3,w
  3552  06F1  1D03               	skipz
  3553  06F2  2EFD               	goto	u3265
  3554  06F3  0822               	movf	___fldiv@a+2,w
  3555  06F4  022F               	subwf	___fldiv@rem+2,w
  3556  06F5  1D03               	skipz
  3557  06F6  2EFD               	goto	u3265
  3558  06F7  0821               	movf	___fldiv@a+1,w
  3559  06F8  022E               	subwf	___fldiv@rem+1,w
  3560  06F9  1D03               	skipz
  3561  06FA  2EFD               	goto	u3265
  3562  06FB  0820               	movf	___fldiv@a,w
  3563  06FC  022D               	subwf	___fldiv@rem,w
  3564  06FD                     u3265:
  3565  06FD  1C03               	skipc
  3566  06FE  2F00               	goto	u3261
  3567  06FF  2F01               	goto	u3260
  3568  0700                     u3261:
  3569  0700  2F10               	goto	l2290
  3570  0701                     u3260:
  3571  0701                     l2286:
  3572  0701  1737               	bsf	___fldiv@grs+3,6
  3573  0702                     l2288:
  3574  0702  0820               	movf	___fldiv@a,w
  3575  0703  02AD               	subwf	___fldiv@rem,f
  3576  0704  0821               	movf	___fldiv@a+1,w
  3577  0705  1C03               	skipc
  3578  0706  0F21               	incfsz	___fldiv@a+1,w
  3579  0707  02AE               	subwf	___fldiv@rem+1,f
  3580  0708  0822               	movf	___fldiv@a+2,w
  3581  0709  1C03               	skipc
  3582  070A  0F22               	incfsz	___fldiv@a+2,w
  3583  070B  02AF               	subwf	___fldiv@rem+2,f
  3584  070C  0823               	movf	___fldiv@a+3,w
  3585  070D  1C03               	skipc
  3586  070E  0F23               	incfsz	___fldiv@a+3,w
  3587  070F  02B0               	subwf	___fldiv@rem+3,f
  3588  0710                     l2290:
  3589  0710  3001               	movlw	1
  3590  0711  00A8               	movwf	??___fldiv
  3591  0712  0828               	movf	??___fldiv,w
  3592  0713  07B9               	addwf	___fldiv@aexp,f
  3593  0714                     l2292:
  3594  0714  301A               	movlw	26
  3595  0715  0239               	subwf	___fldiv@aexp,w
  3596  0716  1C03               	skipc
  3597  0717  2F19               	goto	u3271
  3598  0718  2F1A               	goto	u3270
  3599  0719                     u3271:
  3600  0719  2ECA               	goto	l2274
  3601  071A                     u3270:
  3602  071A                     l2294:
  3603  071A  0830               	movf	___fldiv@rem+3,w
  3604  071B  042F               	iorwf	___fldiv@rem+2,w
  3605  071C  042E               	iorwf	___fldiv@rem+1,w
  3606  071D  042D               	iorwf	___fldiv@rem,w
  3607  071E  1903               	skipnz
  3608  071F  2F21               	goto	u3281
  3609  0720  2F22               	goto	u3280
  3610  0721                     u3281:
  3611  0721  2F41               	goto	l2308
  3612  0722                     u3280:
  3613  0722                     l2296:
  3614  0722  1434               	bsf	___fldiv@grs,0
  3615  0723  2F41               	goto	l2308
  3616  0724                     l2298:
  3617  0724  3001               	movlw	1
  3618  0725  00A8               	movwf	??___fldiv
  3619  0726                     u3295:
  3620  0726  1003               	clrc
  3621  0727  0DA4               	rlf	___fldiv@b,f
  3622  0728  0DA5               	rlf	___fldiv@b+1,f
  3623  0729  0DA6               	rlf	___fldiv@b+2,f
  3624  072A  0DA7               	rlf	___fldiv@b+3,f
  3625  072B  0BA8               	decfsz	??___fldiv,f
  3626  072C  2F26               	goto	u3295
  3627  072D                     l2300:
  3628  072D  1FB7               	btfss	___fldiv@grs+3,7
  3629  072E  2F30               	goto	u3301
  3630  072F  2F31               	goto	u3300
  3631  0730                     u3301:
  3632  0730  2F32               	goto	l2304
  3633  0731                     u3300:
  3634  0731                     l2302:
  3635  0731  1424               	bsf	___fldiv@b,0
  3636  0732                     l2304:
  3637  0732  3001               	movlw	1
  3638  0733  00A8               	movwf	??___fldiv
  3639  0734                     u3315:
  3640  0734  1003               	clrc
  3641  0735  0DB4               	rlf	___fldiv@grs,f
  3642  0736  0DB5               	rlf	___fldiv@grs+1,f
  3643  0737  0DB6               	rlf	___fldiv@grs+2,f
  3644  0738  0DB7               	rlf	___fldiv@grs+3,f
  3645  0739  0BA8               	decfsz	??___fldiv,f
  3646  073A  2F34               	goto	u3315
  3647  073B                     l2306:
  3648  073B  30FF               	movlw	255
  3649  073C  07B2               	addwf	___fldiv@new_exp,f
  3650  073D  1803               	skipnc
  3651  073E  0AB3               	incf	___fldiv@new_exp+1,f
  3652  073F  30FF               	movlw	255
  3653  0740  07B3               	addwf	___fldiv@new_exp+1,f
  3654  0741                     l2308:
  3655  0741  1FA6               	btfss	___fldiv@b+2,7
  3656  0742  2F44               	goto	u3321
  3657  0743  2F45               	goto	u3320
  3658  0744                     u3321:
  3659  0744  2F24               	goto	l2298
  3660  0745                     u3320:
  3661  0745                     l2310:
  3662  0745  01B9               	clrf	___fldiv@aexp
  3663  0746                     l2312:
  3664  0746  1FB7               	btfss	___fldiv@grs+3,7
  3665  0747  2F49               	goto	u3331
  3666  0748  2F4A               	goto	u3330
  3667  0749                     u3331:
  3668  0749  2F66               	goto	l2320
  3669  074A                     u3330:
  3670  074A                     l2314:
  3671  074A  30FF               	movlw	255
  3672  074B  0534               	andwf	___fldiv@grs,w
  3673  074C  00A8               	movwf	??___fldiv
  3674  074D  30FF               	movlw	255
  3675  074E  0535               	andwf	___fldiv@grs+1,w
  3676  074F  00A9               	movwf	??___fldiv+1
  3677  0750  30FF               	movlw	255
  3678  0751  0536               	andwf	___fldiv@grs+2,w
  3679  0752  00AA               	movwf	??___fldiv+2
  3680  0753  307F               	movlw	127
  3681  0754  0537               	andwf	___fldiv@grs+3,w
  3682  0755  00AB               	movwf	??___fldiv+3
  3683  0756  082B               	movf	??___fldiv+3,w
  3684  0757  042A               	iorwf	??___fldiv+2,w
  3685  0758  0429               	iorwf	??___fldiv+1,w
  3686  0759  0428               	iorwf	??___fldiv,w
  3687  075A  1903               	skipnz
  3688  075B  2F5D               	goto	u3341
  3689  075C  2F5E               	goto	u3340
  3690  075D                     u3341:
  3691  075D  2F61               	goto	l822
  3692  075E                     u3340:
  3693  075E                     l2316:
  3694  075E  01B9               	clrf	___fldiv@aexp
  3695  075F  0AB9               	incf	___fldiv@aexp,f
  3696  0760  2F66               	goto	l2320
  3697  0761                     l822:
  3698  0761  1C24               	btfss	___fldiv@b,0
  3699  0762  2F64               	goto	u3351
  3700  0763  2F65               	goto	u3350
  3701  0764                     u3351:
  3702  0764  2F66               	goto	l2320
  3703  0765                     u3350:
  3704  0765  2F5E               	goto	l2316
  3705  0766                     l2320:
  3706  0766  0839               	movf	___fldiv@aexp,w
  3707  0767  1903               	btfsc	3,2
  3708  0768  2F6A               	goto	u3361
  3709  0769  2F6B               	goto	u3360
  3710  076A                     u3361:
  3711  076A  2F9C               	goto	l2330
  3712  076B                     u3360:
  3713  076B                     l2322:
  3714  076B  3001               	movlw	1
  3715  076C  07A4               	addwf	___fldiv@b,f
  3716  076D  3000               	movlw	0
  3717  076E  1803               	skipnc
  3718  076F  3001               	movlw	1
  3719  0770  07A5               	addwf	___fldiv@b+1,f
  3720  0771  3000               	movlw	0
  3721  0772  1803               	skipnc
  3722  0773  3001               	movlw	1
  3723  0774  07A6               	addwf	___fldiv@b+2,f
  3724  0775  3000               	movlw	0
  3725  0776  1803               	skipnc
  3726  0777  3001               	movlw	1
  3727  0778  07A7               	addwf	___fldiv@b+3,f
  3728  0779                     l2324:
  3729  0779  1C27               	btfss	___fldiv@b+3,0
  3730  077A  2F7C               	goto	u3371
  3731  077B  2F7D               	goto	u3370
  3732  077C                     u3371:
  3733  077C  2F9C               	goto	l2330
  3734  077D                     u3370:
  3735  077D                     l2326:
  3736  077D  0824               	movf	___fldiv@b,w
  3737  077E  00A8               	movwf	??___fldiv
  3738  077F  0825               	movf	___fldiv@b+1,w
  3739  0780  00A9               	movwf	??___fldiv+1
  3740  0781  0826               	movf	___fldiv@b+2,w
  3741  0782  00AA               	movwf	??___fldiv+2
  3742  0783  0827               	movf	___fldiv@b+3,w
  3743  0784  00AB               	movwf	??___fldiv+3
  3744  0785  3001               	movlw	1
  3745  0786  00AC               	movwf	??___fldiv+4
  3746  0787                     u3385:
  3747  0787  0D2B               	rlf	??___fldiv+3,w
  3748  0788  0CAB               	rrf	??___fldiv+3,f
  3749  0789  0CAA               	rrf	??___fldiv+2,f
  3750  078A  0CA9               	rrf	??___fldiv+1,f
  3751  078B  0CA8               	rrf	??___fldiv,f
  3752  078C                     u3380:
  3753  078C  0BAC               	decfsz	??___fldiv+4,f
  3754  078D  2F87               	goto	u3385
  3755  078E  082B               	movf	??___fldiv+3,w
  3756  078F  00A7               	movwf	___fldiv@b+3
  3757  0790  082A               	movf	??___fldiv+2,w
  3758  0791  00A6               	movwf	___fldiv@b+2
  3759  0792  0829               	movf	??___fldiv+1,w
  3760  0793  00A5               	movwf	___fldiv@b+1
  3761  0794  0828               	movf	??___fldiv,w
  3762  0795  00A4               	movwf	___fldiv@b
  3763  0796                     l2328:
  3764  0796  3001               	movlw	1
  3765  0797  07B2               	addwf	___fldiv@new_exp,f
  3766  0798  1803               	skipnc
  3767  0799  0AB3               	incf	___fldiv@new_exp+1,f
  3768  079A  3000               	movlw	0
  3769  079B  07B3               	addwf	___fldiv@new_exp+1,f
  3770  079C                     l2330:
  3771  079C  0833               	movf	___fldiv@new_exp+1,w
  3772  079D  3A80               	xorlw	128
  3773  079E  00FF               	movwf	btemp+1
  3774  079F  3080               	movlw	128
  3775  07A0  027F               	subwf	btemp+1,w
  3776  07A1  1D03               	skipz
  3777  07A2  2FA5               	goto	u3395
  3778  07A3  30FF               	movlw	255
  3779  07A4  0232               	subwf	___fldiv@new_exp,w
  3780  07A5                     u3395:
  3781  07A5  1C03               	skipc
  3782  07A6  2FA8               	goto	u3391
  3783  07A7  2FA9               	goto	u3390
  3784  07A8                     u3391:
  3785  07A8  2FB7               	goto	l2334
  3786  07A9                     u3390:
  3787  07A9                     l2332:
  3788  07A9  30FF               	movlw	255
  3789  07AA  1283               	bcf	3,5	;RP0=0, select bank0
  3790  07AB  1303               	bcf	3,6	;RP1=0, select bank0
  3791  07AC  00B2               	movwf	___fldiv@new_exp
  3792  07AD  3000               	movlw	0
  3793  07AE  00B3               	movwf	___fldiv@new_exp+1
  3794  07AF  3000               	movlw	0
  3795  07B0  00A7               	movwf	___fldiv@b+3
  3796  07B1  3000               	movlw	0
  3797  07B2  00A6               	movwf	___fldiv@b+2
  3798  07B3  3000               	movlw	0
  3799  07B4  00A5               	movwf	___fldiv@b+1
  3800  07B5  3000               	movlw	0
  3801  07B6  00A4               	movwf	___fldiv@b
  3802  07B7                     l2334:
  3803  07B7  1283               	bcf	3,5	;RP0=0, select bank0
  3804  07B8  1303               	bcf	3,6	;RP1=0, select bank0
  3805  07B9  0833               	movf	___fldiv@new_exp+1,w
  3806  07BA  3A80               	xorlw	128
  3807  07BB  00FF               	movwf	btemp+1
  3808  07BC  3080               	movlw	128
  3809  07BD  027F               	subwf	btemp+1,w
  3810  07BE  1D03               	skipz
  3811  07BF  2FC2               	goto	u3405
  3812  07C0  3001               	movlw	1
  3813  07C1  0232               	subwf	___fldiv@new_exp,w
  3814  07C2                     u3405:
  3815  07C2  1803               	skipnc
  3816  07C3  2FC5               	goto	u3401
  3817  07C4  2FC6               	goto	u3400
  3818  07C5                     u3401:
  3819  07C5  2FD3               	goto	l828
  3820  07C6                     u3400:
  3821  07C6                     l2336:
  3822  07C6  1283               	bcf	3,5	;RP0=0, select bank0
  3823  07C7  1303               	bcf	3,6	;RP1=0, select bank0
  3824  07C8  01B2               	clrf	___fldiv@new_exp
  3825  07C9  01B3               	clrf	___fldiv@new_exp+1
  3826  07CA                     l2338:
  3827  07CA  3000               	movlw	0
  3828  07CB  00A7               	movwf	___fldiv@b+3
  3829  07CC  3000               	movlw	0
  3830  07CD  00A6               	movwf	___fldiv@b+2
  3831  07CE  3000               	movlw	0
  3832  07CF  00A5               	movwf	___fldiv@b+1
  3833  07D0  3000               	movlw	0
  3834  07D1  00A4               	movwf	___fldiv@b
  3835  07D2                     l2340:
  3836  07D2  01B1               	clrf	___fldiv@sign
  3837  07D3                     l828:
  3838  07D3  1283               	bcf	3,5	;RP0=0, select bank0
  3839  07D4  1303               	bcf	3,6	;RP1=0, select bank0
  3840  07D5  0832               	movf	___fldiv@new_exp,w
  3841  07D6  00A8               	movwf	??___fldiv
  3842  07D7  0828               	movf	??___fldiv,w
  3843  07D8  00B8               	movwf	___fldiv@bexp
  3844  07D9                     l2342:
  3845  07D9  1C38               	btfss	___fldiv@bexp,0
  3846  07DA  2FDC               	goto	u3411
  3847  07DB  2FDD               	goto	u3410
  3848  07DC                     u3411:
  3849  07DC  2FDF               	goto	l2346
  3850  07DD                     u3410:
  3851  07DD                     l2344:
  3852  07DD  17A6               	bsf	___fldiv@b+2,7
  3853  07DE  2FE3               	goto	l830
  3854  07DF                     l2346:
  3855  07DF  307F               	movlw	127
  3856  07E0  00A8               	movwf	??___fldiv
  3857  07E1  0828               	movf	??___fldiv,w
  3858  07E2  05A6               	andwf	___fldiv@b+2,f
  3859  07E3                     l830:
  3860  07E3  0838               	movf	___fldiv@bexp,w
  3861  07E4  00A8               	movwf	??___fldiv
  3862  07E5  1003               	clrc
  3863  07E6  0C28               	rrf	??___fldiv,w
  3864  07E7  00A9               	movwf	??___fldiv+1
  3865  07E8  0829               	movf	??___fldiv+1,w
  3866  07E9  00A7               	movwf	___fldiv@b+3
  3867  07EA  0831               	movf	___fldiv@sign,w
  3868  07EB  00A8               	movwf	??___fldiv
  3869  07EC  0828               	movf	??___fldiv,w
  3870  07ED  04A7               	iorwf	___fldiv@b+3,f
  3871  07EE  2E87               	goto	l2254
  3872  07EF                     l808:
  3873  07EF  0008               	return
  3874  07F0                     __end_of___fldiv:
  3875                           
  3876                           	psect	text13
  3877  0A6E                     __ptext13:	
  3878 ;; *************** function _pwm_init *****************
  3879 ;; Defined at:
  3880 ;;		line 35 in file "307.c"
  3881 ;; Parameters:    Size  Location     Type
  3882 ;;		None
  3883 ;; Auto vars:     Size  Location     Type
  3884 ;;		None
  3885 ;; Return value:  Size  Location     Type
  3886 ;;                  1    wreg      void 
  3887 ;; Registers used:
  3888 ;;		wreg, status,2, status,0
  3889 ;; Tracked objects:
  3890 ;;		On entry : 0/0
  3891 ;;		On exit  : 0/0
  3892 ;;		Unchanged: 0/0
  3893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3894 ;;      Params:         0       0       0       0       0
  3895 ;;      Locals:         0       0       0       0       0
  3896 ;;      Temps:          0       0       0       0       0
  3897 ;;      Totals:         0       0       0       0       0
  3898 ;;Total ram usage:        0 bytes
  3899 ;; Hardware stack levels used:    1
  3900 ;; This function calls:
  3901 ;;		Nothing
  3902 ;; This function is called by:
  3903 ;;		_main
  3904 ;; This function uses a non-reentrant model
  3905 ;;
  3906                           
  3907                           
  3908                           ;psect for function _pwm_init
  3909  0A6E                     _pwm_init:
  3910  0A6E                     l2540:	
  3911                           ;incstack = 0
  3912                           ; Regs used in _pwm_init: [wreg+status,2+status,0]
  3913                           
  3914  0A6E  30FF               	movlw	255
  3915  0A6F  1683               	bsf	3,5	;RP0=1, select bank1
  3916  0A70  1303               	bcf	3,6	;RP1=0, select bank1
  3917  0A71  0092               	movwf	18	;volatile
  3918  0A72                     l2542:
  3919  0A72  1283               	bcf	3,5	;RP0=0, select bank0
  3920  0A73  1303               	bcf	3,6	;RP1=0, select bank0
  3921  0A74  1217               	bcf	23,4	;volatile
  3922  0A75  1297               	bcf	23,5	;volatile
  3923  0A76  0195               	clrf	21	;volatile
  3924  0A77                     l2544:
  3925  0A77  1683               	bsf	3,5	;RP0=1, select bank1
  3926  0A78  1303               	bcf	3,6	;RP1=0, select bank1
  3927  0A79  1107               	bcf	7,2	;volatile
  3928  0A7A                     l2546:
  3929  0A7A  30FC               	movlw	-4
  3930  0A7B  1283               	bcf	3,5	;RP0=0, select bank0
  3931  0A7C  1303               	bcf	3,6	;RP1=0, select bank0
  3932  0A7D  0592               	andwf	18,f	;volatile
  3933  0A7E                     l2548:
  3934  0A7E  0817               	movf	23,w	;volatile
  3935  0A7F  39F0               	andlw	-16
  3936  0A80  380C               	iorlw	12
  3937  0A81  0097               	movwf	23	;volatile
  3938  0A82                     l350:
  3939  0A82  0008               	return
  3940  0A83                     __end_of_pwm_init:
  3941                           
  3942                           	psect	text14
  3943  033C                     __ptext14:	
  3944 ;; *************** function _lcd_set_cursor *****************
  3945 ;; Defined at:
  3946 ;;		line 341 in file "./lcd.h"
  3947 ;; Parameters:    Size  Location     Type
  3948 ;;  row             1    wreg     _Bool 
  3949 ;;  col             1    2[BANK0 ] char 
  3950 ;; Auto vars:     Size  Location     Type
  3951 ;;  row             1   22[BANK0 ] _Bool 
  3952 ;; Return value:  Size  Location     Type
  3953 ;;                  1    wreg      void 
  3954 ;; Registers used:
  3955 ;;		wreg, status,2, status,0, pclath, cstack
  3956 ;; Tracked objects:
  3957 ;;		On entry : 0/0
  3958 ;;		On exit  : 0/0
  3959 ;;		Unchanged: 0/0
  3960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3961 ;;      Params:         0       1       0       0       0
  3962 ;;      Locals:         0      13       0       0       0
  3963 ;;      Temps:          0       7       0       0       0
  3964 ;;      Totals:         0      21       0       0       0
  3965 ;;Total ram usage:       21 bytes
  3966 ;; Hardware stack levels used:    1
  3967 ;; Hardware stack levels required when called:    5
  3968 ;; This function calls:
  3969 ;;		_lcd_set_ddram_adr
  3970 ;;		_lcd_shift_left
  3971 ;;		_lcd_shift_right
  3972 ;; This function is called by:
  3973 ;;		_main
  3974 ;;		_lcd_goto_begin
  3975 ;;		_lcd_goto_end
  3976 ;;		_lcd_clr_row
  3977 ;;		_lcd_clr_curr_row
  3978 ;;		_lcd_cursor_up
  3979 ;;		_lcd_cursor_down
  3980 ;;		_lcd_scroll_anim
  3981 ;; This function uses a non-reentrant model
  3982 ;;
  3983                           
  3984                           
  3985                           ;psect for function _lcd_set_cursor
  3986  033C                     _lcd_set_cursor:
  3987                           
  3988                           ;incstack = 0
  3989                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  3990                           ;lcd_set_cursor@row stored from wreg
  3991  033C  1283               	bcf	3,5	;RP0=0, select bank0
  3992  033D  1303               	bcf	3,6	;RP1=0, select bank0
  3993  033E  00B6               	movwf	lcd_set_cursor@row
  3994  033F                     l2452:
  3995                           
  3996                           ;./lcd.h: 341: void lcd_set_cursor(_Bool row, signed char col);./lcd.h: 342: {;./lcd.h: 
      +                          343:     lcd_set_ddram_adr((((row) ? 1 : 0) ? 0x40 : 0x00) + ((col) < (right_edge + entr
      +                          y_mode_i_d) ? (col) : (right_edge + entry_mode_i_d)));
  3997  033F  1003               	clrc
  3998  0340  1963               	btfsc	_entry_mode_i_d/(0+8),_entry_mode_i_d& (0+7)
  3999  0341  1403               	setc
  4000  0342  3000               	movlw	0
  4001  0343  1803               	skipnc
  4002  0344  3001               	movlw	1
  4003  0345  075F               	addwf	_right_edge,w
  4004  0346  00A3               	movwf	??_lcd_set_cursor
  4005  0347  01A4               	clrf	??_lcd_set_cursor+1
  4006  0348  1803               	skipnc
  4007  0349  0AA4               	incf	??_lcd_set_cursor+1,f
  4008  034A  1FDF               	btfss	_right_edge,7
  4009  034B  2B4D               	goto	u3614
  4010  034C  03A4               	decf	??_lcd_set_cursor+1,f
  4011  034D                     u3614:
  4012  034D  1283               	bcf	3,5	;RP0=0, select bank0
  4013  034E  1303               	bcf	3,6	;RP1=0, select bank0
  4014  034F  0822               	movf	lcd_set_cursor@col,w
  4015  0350  00A5               	movwf	??_lcd_set_cursor+2
  4016  0351  01A6               	clrf	??_lcd_set_cursor+3
  4017  0352  1BA5               	btfsc	??_lcd_set_cursor+2,7
  4018  0353  03A6               	decf	??_lcd_set_cursor+3,f
  4019  0354  0826               	movf	??_lcd_set_cursor+3,w
  4020  0355  3A80               	xorlw	128
  4021  0356  00A7               	movwf	??_lcd_set_cursor+4
  4022  0357  0824               	movf	??_lcd_set_cursor+1,w
  4023  0358  3A80               	xorlw	128
  4024  0359  0227               	subwf	??_lcd_set_cursor+4,w
  4025  035A  1D03               	skipz
  4026  035B  2B5E               	goto	u3625
  4027  035C  0823               	movf	??_lcd_set_cursor,w
  4028  035D  0225               	subwf	??_lcd_set_cursor+2,w
  4029  035E                     u3625:
  4030  035E  1C03               	skipc
  4031  035F  2B61               	goto	u3621
  4032  0360  2B62               	goto	u3620
  4033  0361                     u3621:
  4034  0361  2B73               	goto	l2456
  4035  0362                     u3620:
  4036  0362                     l2454:
  4037  0362  1003               	clrc
  4038  0363  1283               	bcf	3,5	;RP0=0, select bank0
  4039  0364  1303               	bcf	3,6	;RP1=0, select bank0
  4040  0365  1963               	btfsc	_entry_mode_i_d/(0+8),_entry_mode_i_d& (0+7)
  4041  0366  1403               	setc
  4042  0367  3000               	movlw	0
  4043  0368  1803               	skipnc
  4044  0369  3001               	movlw	1
  4045  036A  075F               	addwf	_right_edge,w
  4046  036B  00AA               	movwf	_lcd_set_cursor$308
  4047  036C  01AB               	clrf	_lcd_set_cursor$308+1
  4048  036D  1803               	skipnc
  4049  036E  0AAB               	incf	_lcd_set_cursor$308+1,f
  4050  036F  1FDF               	btfss	_right_edge,7
  4051  0370  2B72               	goto	u3634
  4052  0371  03AB               	decf	_lcd_set_cursor$308+1,f
  4053  0372                     u3634:
  4054  0372  2B7A               	goto	l173
  4055  0373                     l2456:
  4056  0373  1283               	bcf	3,5	;RP0=0, select bank0
  4057  0374  1303               	bcf	3,6	;RP1=0, select bank0
  4058  0375  0822               	movf	lcd_set_cursor@col,w
  4059  0376  00AA               	movwf	_lcd_set_cursor$308
  4060  0377  01AB               	clrf	_lcd_set_cursor$308+1
  4061  0378  1BAA               	btfsc	_lcd_set_cursor$308,7
  4062  0379  03AB               	decf	_lcd_set_cursor$308+1,f
  4063  037A                     l173:
  4064  037A  1283               	bcf	3,5	;RP0=0, select bank0
  4065  037B  1303               	bcf	3,6	;RP1=0, select bank0
  4066  037C  0836               	movf	lcd_set_cursor@row,w
  4067  037D  1D03               	btfss	3,2
  4068  037E  2B80               	goto	u3641
  4069  037F  2B81               	goto	u3640
  4070  0380                     u3641:
  4071  0380  2B84               	goto	l2460
  4072  0381                     u3640:
  4073  0381                     l2458:
  4074  0381  01AC               	clrf	_lcd_set_cursor$309
  4075  0382  01AD               	clrf	_lcd_set_cursor$309+1
  4076  0383  2B88               	goto	l2462
  4077  0384                     l2460:
  4078  0384  3040               	movlw	64
  4079  0385  00AC               	movwf	_lcd_set_cursor$309
  4080  0386  3000               	movlw	0
  4081  0387  00AD               	movwf	_lcd_set_cursor$309+1
  4082  0388                     l2462:
  4083  0388  082A               	movf	_lcd_set_cursor$308,w
  4084  0389  072C               	addwf	_lcd_set_cursor$309,w
  4085  038A  120A  158A  23EF  120A  118A  	fcall	_lcd_set_ddram_adr
  4086  038F                     l2464:
  4087                           
  4088                           ;./lcd.h: 346:     lcd_cursor_row = lcd_lines ? ((row) ? 1 : 0) : 0;
  4089  038F  1283               	bcf	3,5	;RP0=0, select bank0
  4090  0390  1303               	bcf	3,6	;RP1=0, select bank0
  4091  0391  19E3               	btfsc	_lcd_lines/(0+8),_lcd_lines& (0+7)
  4092  0392  2B94               	goto	u3651
  4093  0393  2B95               	goto	u3650
  4094  0394                     u3651:
  4095  0394  2B98               	goto	l2468
  4096  0395                     u3650:
  4097  0395                     l2466:
  4098  0395  01AE               	clrf	_lcd_set_cursor$310
  4099  0396  01AF               	clrf	_lcd_set_cursor$310+1
  4100  0397  2BA5               	goto	l2470
  4101  0398                     l2468:
  4102  0398  0836               	movf	lcd_set_cursor@row,w
  4103  0399  1D03               	btfss	3,2
  4104  039A  2B9C               	goto	u3661
  4105  039B  2B9E               	goto	u3660
  4106  039C                     u3661:
  4107  039C  3001               	movlw	1
  4108  039D  2B9F               	goto	u3670
  4109  039E                     u3660:
  4110  039E  3000               	movlw	0
  4111  039F                     u3670:
  4112  039F  00A3               	movwf	??_lcd_set_cursor
  4113  03A0  01A4               	clrf	??_lcd_set_cursor+1
  4114  03A1  0823               	movf	??_lcd_set_cursor,w
  4115  03A2  00AE               	movwf	_lcd_set_cursor$310
  4116  03A3  0824               	movf	??_lcd_set_cursor+1,w
  4117  03A4  00AF               	movwf	_lcd_set_cursor$310+1
  4118  03A5                     l2470:
  4119  03A5  1063               	bcf	_lcd_cursor_row/(0+8),_lcd_cursor_row& (0+7)
  4120  03A6  1C2E               	btfss	_lcd_set_cursor$310,0
  4121  03A7  2BA9               	goto	u3685
  4122  03A8  1463               	bsf	_lcd_cursor_row/(0+8),_lcd_cursor_row& (0+7)
  4123  03A9                     u3685:
  4124                           
  4125                           ;./lcd.h: 347:     lcd_cursor_col = ((((col) > (left_edge - !entry_mode_i_d) ? (col) : (
      +                          left_edge - !entry_mode_i_d))) < (right_edge + entry_mode_i_d) ? (((col) > (left_edge - 
      +                          !entry_mode_i_d) ? (col) : (left_edge - !entry_mode_i_d))) : (right_edge + entry_mode_i_
      +                          d));
  4126  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  4127  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  4128  03AB  0822               	movf	lcd_set_cursor@col,w
  4129  03AC  00A3               	movwf	??_lcd_set_cursor
  4130  03AD  01A4               	clrf	??_lcd_set_cursor+1
  4131  03AE  1BA3               	btfsc	??_lcd_set_cursor,7
  4132  03AF  03A4               	decf	??_lcd_set_cursor+1,f
  4133  03B0  0860               	movf	_left_edge,w
  4134  03B1  00A5               	movwf	??_lcd_set_cursor+2
  4135  03B2  01A6               	clrf	??_lcd_set_cursor+3
  4136  03B3  1BA5               	btfsc	??_lcd_set_cursor+2,7
  4137  03B4  03A6               	decf	??_lcd_set_cursor+3,f
  4138  03B5  1003               	clrc
  4139  03B6  1D63               	btfss	_entry_mode_i_d/(0+8),_entry_mode_i_d& (0+7)
  4140  03B7  1403               	setc
  4141  03B8  3000               	movlw	0
  4142  03B9  1803               	skipnc
  4143  03BA  3001               	movlw	1
  4144  03BB  0225               	subwf	??_lcd_set_cursor+2,w
  4145  03BC  00A7               	movwf	??_lcd_set_cursor+4
  4146  03BD  0826               	movf	??_lcd_set_cursor+3,w
  4147  03BE  1C03               	skipc
  4148  03BF  0326               	decf	??_lcd_set_cursor+3,w
  4149  03C0  00A8               	movwf	??_lcd_set_cursor+5
  4150  03C1  0828               	movf	??_lcd_set_cursor+5,w
  4151  03C2  3A80               	xorlw	128
  4152  03C3  00A9               	movwf	??_lcd_set_cursor+6
  4153  03C4  0824               	movf	??_lcd_set_cursor+1,w
  4154  03C5  3A80               	xorlw	128
  4155  03C6  0229               	subwf	??_lcd_set_cursor+6,w
  4156  03C7  1D03               	skipz
  4157  03C8  2BCB               	goto	u3695
  4158  03C9  0823               	movf	??_lcd_set_cursor,w
  4159  03CA  0227               	subwf	??_lcd_set_cursor+4,w
  4160  03CB                     u3695:
  4161  03CB  1C03               	skipc
  4162  03CC  2BCE               	goto	u3691
  4163  03CD  2BCF               	goto	u3690
  4164  03CE                     u3691:
  4165  03CE  2BE3               	goto	l2474
  4166  03CF                     u3690:
  4167  03CF                     l2472:
  4168  03CF  1283               	bcf	3,5	;RP0=0, select bank0
  4169  03D0  1303               	bcf	3,6	;RP1=0, select bank0
  4170  03D1  0860               	movf	_left_edge,w
  4171  03D2  00A3               	movwf	??_lcd_set_cursor
  4172  03D3  01A4               	clrf	??_lcd_set_cursor+1
  4173  03D4  1BA3               	btfsc	??_lcd_set_cursor,7
  4174  03D5  03A4               	decf	??_lcd_set_cursor+1,f
  4175  03D6  1003               	clrc
  4176  03D7  1D63               	btfss	_entry_mode_i_d/(0+8),_entry_mode_i_d& (0+7)
  4177  03D8  1403               	setc
  4178  03D9  3000               	movlw	0
  4179  03DA  1803               	skipnc
  4180  03DB  3001               	movlw	1
  4181  03DC  0223               	subwf	??_lcd_set_cursor,w
  4182  03DD  00B2               	movwf	_lcd_set_cursor$312
  4183  03DE  0824               	movf	??_lcd_set_cursor+1,w
  4184  03DF  1C03               	skipc
  4185  03E0  0324               	decf	??_lcd_set_cursor+1,w
  4186  03E1  00B3               	movwf	_lcd_set_cursor$312+1
  4187  03E2  2BEA               	goto	l2476
  4188  03E3                     l2474:
  4189  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  4190  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  4191  03E5  0822               	movf	lcd_set_cursor@col,w
  4192  03E6  00B2               	movwf	_lcd_set_cursor$312
  4193  03E7  01B3               	clrf	_lcd_set_cursor$312+1
  4194  03E8  1BB2               	btfsc	_lcd_set_cursor$312,7
  4195  03E9  03B3               	decf	_lcd_set_cursor$312+1,f
  4196  03EA                     l2476:
  4197  03EA  1003               	clrc
  4198  03EB  1963               	btfsc	_entry_mode_i_d/(0+8),_entry_mode_i_d& (0+7)
  4199  03EC  1403               	setc
  4200  03ED  3000               	movlw	0
  4201  03EE  1803               	skipnc
  4202  03EF  3001               	movlw	1
  4203  03F0  075F               	addwf	_right_edge,w
  4204  03F1  00A3               	movwf	??_lcd_set_cursor
  4205  03F2  01A4               	clrf	??_lcd_set_cursor+1
  4206  03F3  1803               	skipnc
  4207  03F4  0AA4               	incf	??_lcd_set_cursor+1,f
  4208  03F5  1FDF               	btfss	_right_edge,7
  4209  03F6  2BF8               	goto	u3704
  4210  03F7  03A4               	decf	??_lcd_set_cursor+1,f
  4211  03F8                     u3704:
  4212  03F8  1283               	bcf	3,5	;RP0=0, select bank0
  4213  03F9  1303               	bcf	3,6	;RP1=0, select bank0
  4214  03FA  0833               	movf	_lcd_set_cursor$312+1,w
  4215  03FB  3A80               	xorlw	128
  4216  03FC  00A5               	movwf	??_lcd_set_cursor+2
  4217  03FD  0824               	movf	??_lcd_set_cursor+1,w
  4218  03FE  3A80               	xorlw	128
  4219  03FF  0225               	subwf	??_lcd_set_cursor+2,w
  4220  0400  1D03               	skipz
  4221  0401  2C04               	goto	u3715
  4222  0402  0823               	movf	??_lcd_set_cursor,w
  4223  0403  0232               	subwf	_lcd_set_cursor$312,w
  4224  0404                     u3715:
  4225  0404  1C03               	skipc
  4226  0405  2C07               	goto	u3711
  4227  0406  2C08               	goto	u3710
  4228  0407                     u3711:
  4229  0407  2C19               	goto	l2480
  4230  0408                     u3710:
  4231  0408                     l2478:
  4232  0408  1003               	clrc
  4233  0409  1283               	bcf	3,5	;RP0=0, select bank0
  4234  040A  1303               	bcf	3,6	;RP1=0, select bank0
  4235  040B  1963               	btfsc	_entry_mode_i_d/(0+8),_entry_mode_i_d& (0+7)
  4236  040C  1403               	setc
  4237  040D  3000               	movlw	0
  4238  040E  1803               	skipnc
  4239  040F  3001               	movlw	1
  4240  0410  075F               	addwf	_right_edge,w
  4241  0411  00B0               	movwf	_lcd_set_cursor$311
  4242  0412  01B1               	clrf	_lcd_set_cursor$311+1
  4243  0413  1803               	skipnc
  4244  0414  0AB1               	incf	_lcd_set_cursor$311+1,f
  4245  0415  1FDF               	btfss	_right_edge,7
  4246  0416  2C18               	goto	u3724
  4247  0417  03B1               	decf	_lcd_set_cursor$311+1,f
  4248  0418                     u3724:
  4249  0418  2C5E               	goto	l2488
  4250  0419                     l2480:
  4251  0419  1283               	bcf	3,5	;RP0=0, select bank0
  4252  041A  1303               	bcf	3,6	;RP1=0, select bank0
  4253  041B  0822               	movf	lcd_set_cursor@col,w
  4254  041C  00A3               	movwf	??_lcd_set_cursor
  4255  041D  01A4               	clrf	??_lcd_set_cursor+1
  4256  041E  1BA3               	btfsc	??_lcd_set_cursor,7
  4257  041F  03A4               	decf	??_lcd_set_cursor+1,f
  4258  0420  0860               	movf	_left_edge,w
  4259  0421  00A5               	movwf	??_lcd_set_cursor+2
  4260  0422  01A6               	clrf	??_lcd_set_cursor+3
  4261  0423  1BA5               	btfsc	??_lcd_set_cursor+2,7
  4262  0424  03A6               	decf	??_lcd_set_cursor+3,f
  4263  0425  1003               	clrc
  4264  0426  1D63               	btfss	_entry_mode_i_d/(0+8),_entry_mode_i_d& (0+7)
  4265  0427  1403               	setc
  4266  0428  3000               	movlw	0
  4267  0429  1803               	skipnc
  4268  042A  3001               	movlw	1
  4269  042B  0225               	subwf	??_lcd_set_cursor+2,w
  4270  042C  00A7               	movwf	??_lcd_set_cursor+4
  4271  042D  0826               	movf	??_lcd_set_cursor+3,w
  4272  042E  1C03               	skipc
  4273  042F  0326               	decf	??_lcd_set_cursor+3,w
  4274  0430  00A8               	movwf	??_lcd_set_cursor+5
  4275  0431  0828               	movf	??_lcd_set_cursor+5,w
  4276  0432  3A80               	xorlw	128
  4277  0433  00A9               	movwf	??_lcd_set_cursor+6
  4278  0434  0824               	movf	??_lcd_set_cursor+1,w
  4279  0435  3A80               	xorlw	128
  4280  0436  0229               	subwf	??_lcd_set_cursor+6,w
  4281  0437  1D03               	skipz
  4282  0438  2C3B               	goto	u3735
  4283  0439  0823               	movf	??_lcd_set_cursor,w
  4284  043A  0227               	subwf	??_lcd_set_cursor+4,w
  4285  043B                     u3735:
  4286  043B  1C03               	skipc
  4287  043C  2C3E               	goto	u3731
  4288  043D  2C3F               	goto	u3730
  4289  043E                     u3731:
  4290  043E  2C53               	goto	l2484
  4291  043F                     u3730:
  4292  043F                     l2482:
  4293  043F  1283               	bcf	3,5	;RP0=0, select bank0
  4294  0440  1303               	bcf	3,6	;RP1=0, select bank0
  4295  0441  0860               	movf	_left_edge,w
  4296  0442  00A3               	movwf	??_lcd_set_cursor
  4297  0443  01A4               	clrf	??_lcd_set_cursor+1
  4298  0444  1BA3               	btfsc	??_lcd_set_cursor,7
  4299  0445  03A4               	decf	??_lcd_set_cursor+1,f
  4300  0446  1003               	clrc
  4301  0447  1D63               	btfss	_entry_mode_i_d/(0+8),_entry_mode_i_d& (0+7)
  4302  0448  1403               	setc
  4303  0449  3000               	movlw	0
  4304  044A  1803               	skipnc
  4305  044B  3001               	movlw	1
  4306  044C  0223               	subwf	??_lcd_set_cursor,w
  4307  044D  00B4               	movwf	_lcd_set_cursor$313
  4308  044E  0824               	movf	??_lcd_set_cursor+1,w
  4309  044F  1C03               	skipc
  4310  0450  0324               	decf	??_lcd_set_cursor+1,w
  4311  0451  00B5               	movwf	_lcd_set_cursor$313+1
  4312  0452  2C5A               	goto	l2486
  4313  0453                     l2484:
  4314  0453  1283               	bcf	3,5	;RP0=0, select bank0
  4315  0454  1303               	bcf	3,6	;RP1=0, select bank0
  4316  0455  0822               	movf	lcd_set_cursor@col,w
  4317  0456  00B4               	movwf	_lcd_set_cursor$313
  4318  0457  01B5               	clrf	_lcd_set_cursor$313+1
  4319  0458  1BB4               	btfsc	_lcd_set_cursor$313,7
  4320  0459  03B5               	decf	_lcd_set_cursor$313+1,f
  4321  045A                     l2486:
  4322  045A  0835               	movf	_lcd_set_cursor$313+1,w
  4323  045B  00B1               	movwf	_lcd_set_cursor$311+1
  4324  045C  0834               	movf	_lcd_set_cursor$313,w
  4325  045D  00B0               	movwf	_lcd_set_cursor$311
  4326  045E                     l2488:
  4327  045E  1283               	bcf	3,5	;RP0=0, select bank0
  4328  045F  1303               	bcf	3,6	;RP1=0, select bank0
  4329  0460  0830               	movf	_lcd_set_cursor$311,w
  4330  0461  00A3               	movwf	??_lcd_set_cursor
  4331  0462  0823               	movf	??_lcd_set_cursor,w
  4332  0463  00E2               	movwf	_lcd_cursor_col
  4333  0464                     l2490:
  4334                           
  4335                           ;./lcd.h: 350:     if (lcd_cursor_col < lcd_shift_pos)
  4336  0464  0862               	movf	_lcd_cursor_col,w
  4337  0465  3A80               	xorlw	128
  4338  0466  00A3               	movwf	??_lcd_set_cursor
  4339  0467  0861               	movf	_lcd_shift_pos,w
  4340  0468  3A80               	xorlw	128
  4341  0469  02A3               	subwf	??_lcd_set_cursor,f
  4342  046A  1803               	skipnc
  4343  046B  2C6D               	goto	u3741
  4344  046C  2C6E               	goto	u3740
  4345  046D                     u3741:
  4346  046D  2C76               	goto	l2494
  4347  046E                     u3740:
  4348  046E                     l2492:
  4349                           
  4350                           ;./lcd.h: 351:         lcd_shift_right(lcd_shift_pos - lcd_cursor_col);
  4351  046E  0862               	movf	_lcd_cursor_col,w
  4352  046F  0261               	subwf	_lcd_shift_pos,w
  4353  0470  120A  158A  234F  120A  118A  	fcall	_lcd_shift_right
  4354  0475  2C9D               	goto	l197
  4355  0476                     l2494:
  4356  0476  0862               	movf	_lcd_cursor_col,w
  4357  0477  00A3               	movwf	??_lcd_set_cursor
  4358  0478  01A4               	clrf	??_lcd_set_cursor+1
  4359  0479  1BA3               	btfsc	??_lcd_set_cursor,7
  4360  047A  03A4               	decf	??_lcd_set_cursor+1,f
  4361  047B  300F               	movlw	15
  4362  047C  0761               	addwf	_lcd_shift_pos,w
  4363  047D  00A5               	movwf	??_lcd_set_cursor+2
  4364  047E  01A6               	clrf	??_lcd_set_cursor+3
  4365  047F  1803               	skipnc
  4366  0480  0AA6               	incf	??_lcd_set_cursor+3,f
  4367  0481  1FE1               	btfss	_lcd_shift_pos,7
  4368  0482  2C84               	goto	u3754
  4369  0483  03A6               	decf	??_lcd_set_cursor+3,f
  4370  0484                     u3754:
  4371  0484  1283               	bcf	3,5	;RP0=0, select bank0
  4372  0485  1303               	bcf	3,6	;RP1=0, select bank0
  4373  0486  0826               	movf	??_lcd_set_cursor+3,w
  4374  0487  3A80               	xorlw	128
  4375  0488  00A7               	movwf	??_lcd_set_cursor+4
  4376  0489  0824               	movf	??_lcd_set_cursor+1,w
  4377  048A  3A80               	xorlw	128
  4378  048B  0227               	subwf	??_lcd_set_cursor+4,w
  4379  048C  1D03               	skipz
  4380  048D  2C90               	goto	u3765
  4381  048E  0823               	movf	??_lcd_set_cursor,w
  4382  048F  0225               	subwf	??_lcd_set_cursor+2,w
  4383  0490                     u3765:
  4384  0490  1803               	skipnc
  4385  0491  2C93               	goto	u3761
  4386  0492  2C94               	goto	u3760
  4387  0493                     u3761:
  4388  0493  2C9D               	goto	l197
  4389  0494                     u3760:
  4390  0494                     l2496:
  4391                           
  4392                           ;./lcd.h: 353:         lcd_shift_left(lcd_cursor_col - lcd_shift_pos);
  4393  0494  1283               	bcf	3,5	;RP0=0, select bank0
  4394  0495  1303               	bcf	3,6	;RP1=0, select bank0
  4395  0496  0861               	movf	_lcd_shift_pos,w
  4396  0497  0262               	subwf	_lcd_cursor_col,w
  4397  0498  120A  158A  23B8  120A  118A  	fcall	_lcd_shift_left
  4398  049D                     l197:
  4399  049D  0008               	return
  4400  049E                     __end_of_lcd_set_cursor:
  4401                           
  4402                           	psect	text15
  4403  0B4F                     __ptext15:	
  4404 ;; *************** function _lcd_shift_right *****************
  4405 ;; Defined at:
  4406 ;;		line 449 in file "./lcd.h"
  4407 ;; Parameters:    Size  Location     Type
  4408 ;;  n               1    wreg     char 
  4409 ;; Auto vars:     Size  Location     Type
  4410 ;;  n               1    0[BANK0 ] char 
  4411 ;; Return value:  Size  Location     Type
  4412 ;;                  1    wreg      void 
  4413 ;; Registers used:
  4414 ;;		wreg, status,2, status,0, pclath, cstack
  4415 ;; Tracked objects:
  4416 ;;		On entry : 0/0
  4417 ;;		On exit  : 0/0
  4418 ;;		Unchanged: 0/0
  4419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4420 ;;      Params:         0       0       0       0       0
  4421 ;;      Locals:         0       1       0       0       0
  4422 ;;      Temps:          1       0       0       0       0
  4423 ;;      Totals:         1       1       0       0       0
  4424 ;;Total ram usage:        2 bytes
  4425 ;; Hardware stack levels used:    1
  4426 ;; Hardware stack levels required when called:    4
  4427 ;; This function calls:
  4428 ;;		_lcd_cur_disp_shift
  4429 ;; This function is called by:
  4430 ;;		_lcd_write_char
  4431 ;;		_lcd_set_cursor
  4432 ;;		_lcd_cursor_left
  4433 ;;		_lcd_scroll_anim
  4434 ;; This function uses a non-reentrant model
  4435 ;;
  4436                           
  4437                           
  4438                           ;psect for function _lcd_shift_right
  4439  0B4F                     _lcd_shift_right:
  4440                           
  4441                           ;incstack = 0
  4442 ;; hardware stack exceeded
  4443                           ; Regs used in _lcd_shift_right: [wreg+status,2+status,0+pclath+cstack]
  4444                           ;lcd_shift_right@n stored from wreg
  4445  0B4F  1283               	bcf	3,5	;RP0=0, select bank0
  4446  0B50  1303               	bcf	3,6	;RP1=0, select bank0
  4447  0B51  00A0               	movwf	lcd_shift_right@n
  4448  0B52                     l1952:
  4449                           
  4450                           ;./lcd.h: 449: void lcd_shift_right(signed char n);./lcd.h: 450: {;./lcd.h: 451:     whi
      +                          le(n-- && lcd_shift_pos-- > left_edge) lcd_cur_disp_shift(1, 1);
  4451  0B52  2B5B               	goto	l1956
  4452  0B53                     l1954:
  4453  0B53  01F8               	clrf	lcd_cur_disp_shift@r_l
  4454  0B54  0AF8               	incf	lcd_cur_disp_shift@r_l,f
  4455  0B55  3001               	movlw	1
  4456  0B56  120A  158A  22F6  120A  158A  	fcall	_lcd_cur_disp_shift
  4457  0B5B                     l1956:
  4458  0B5B  30FF               	movlw	255
  4459  0B5C  00FD               	movwf	??_lcd_shift_right
  4460  0B5D  087D               	movf	??_lcd_shift_right,w
  4461  0B5E  1283               	bcf	3,5	;RP0=0, select bank0
  4462  0B5F  1303               	bcf	3,6	;RP1=0, select bank0
  4463  0B60  07A0               	addwf	lcd_shift_right@n,f
  4464  0B61  0A20               	incf	lcd_shift_right@n,w
  4465  0B62  1903               	btfsc	3,2
  4466  0B63  2B65               	goto	u2281
  4467  0B64  2B66               	goto	u2280
  4468  0B65                     u2281:
  4469  0B65  2B73               	goto	l1960
  4470  0B66                     u2280:
  4471  0B66                     l1958:
  4472  0B66  0860               	movf	_left_edge,w
  4473  0B67  3A80               	xorlw	128
  4474  0B68  00FD               	movwf	??_lcd_shift_right
  4475  0B69  30FF               	movlw	-1
  4476  0B6A  07E1               	addwf	_lcd_shift_pos,f
  4477  0B6B  3001               	movlw	1
  4478  0B6C  0761               	addwf	_lcd_shift_pos,w
  4479  0B6D  3A80               	xorlw	128
  4480  0B6E  02FD               	subwf	??_lcd_shift_right,f
  4481  0B6F  1C03               	skipc
  4482  0B70  2B72               	goto	u2291
  4483  0B71  2B73               	goto	u2290
  4484  0B72                     u2291:
  4485  0B72  2B53               	goto	l1954
  4486  0B73                     u2290:
  4487  0B73                     l1960:
  4488                           
  4489                           ;./lcd.h: 453:     if (lcd_shift_pos < left_edge) lcd_shift_pos = left_edge;
  4490  0B73  0861               	movf	_lcd_shift_pos,w
  4491  0B74  3A80               	xorlw	128
  4492  0B75  00FD               	movwf	??_lcd_shift_right
  4493  0B76  0860               	movf	_left_edge,w
  4494  0B77  3A80               	xorlw	128
  4495  0B78  02FD               	subwf	??_lcd_shift_right,f
  4496  0B79  1803               	skipnc
  4497  0B7A  2B7C               	goto	u2301
  4498  0B7B  2B7D               	goto	u2300
  4499  0B7C                     u2301:
  4500  0B7C  2B81               	goto	l268
  4501  0B7D                     u2300:
  4502  0B7D                     l1962:
  4503  0B7D  0860               	movf	_left_edge,w
  4504  0B7E  00FD               	movwf	??_lcd_shift_right
  4505  0B7F  087D               	movf	??_lcd_shift_right,w
  4506  0B80  00E1               	movwf	_lcd_shift_pos
  4507  0B81                     l268:
  4508  0B81  0008               	return
  4509  0B82                     __end_of_lcd_shift_right:
  4510                           
  4511                           	psect	text16
  4512  0BB8                     __ptext16:	
  4513 ;; *************** function _lcd_shift_left *****************
  4514 ;; Defined at:
  4515 ;;		line 439 in file "./lcd.h"
  4516 ;; Parameters:    Size  Location     Type
  4517 ;;  n               1    wreg     char 
  4518 ;; Auto vars:     Size  Location     Type
  4519 ;;  n               1    0[BANK0 ] char 
  4520 ;;  edge            1    1[BANK0 ] char 
  4521 ;; Return value:  Size  Location     Type
  4522 ;;                  1    wreg      void 
  4523 ;; Registers used:
  4524 ;;		wreg, status,2, status,0, pclath, cstack
  4525 ;; Tracked objects:
  4526 ;;		On entry : 0/0
  4527 ;;		On exit  : 0/0
  4528 ;;		Unchanged: 0/0
  4529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4530 ;;      Params:         0       0       0       0       0
  4531 ;;      Locals:         0       2       0       0       0
  4532 ;;      Temps:          1       0       0       0       0
  4533 ;;      Totals:         1       2       0       0       0
  4534 ;;Total ram usage:        3 bytes
  4535 ;; Hardware stack levels used:    1
  4536 ;; Hardware stack levels required when called:    4
  4537 ;; This function calls:
  4538 ;;		_lcd_cur_disp_shift
  4539 ;; This function is called by:
  4540 ;;		_lcd_write_char
  4541 ;;		_lcd_set_cursor
  4542 ;;		_lcd_cursor_right
  4543 ;;		_lcd_scroll_anim
  4544 ;; This function uses a non-reentrant model
  4545 ;;
  4546                           
  4547                           
  4548                           ;psect for function _lcd_shift_left
  4549  0BB8                     _lcd_shift_left:
  4550                           
  4551                           ;incstack = 0
  4552 ;; hardware stack exceeded
  4553                           ; Regs used in _lcd_shift_left: [wreg+status,2+status,0+pclath+cstack]
  4554                           ;lcd_shift_left@n stored from wreg
  4555  0BB8  1283               	bcf	3,5	;RP0=0, select bank0
  4556  0BB9  1303               	bcf	3,6	;RP1=0, select bank0
  4557  0BBA  00A0               	movwf	lcd_shift_left@n
  4558  0BBB                     l1940:
  4559                           
  4560                           ;./lcd.h: 439: void lcd_shift_left(signed char n);./lcd.h: 440: {;./lcd.h: 441:     sign
      +                          ed char edge = right_edge - 15;
  4561  0BBB  085F               	movf	_right_edge,w
  4562  0BBC  3EF1               	addlw	-15
  4563  0BBD  00FD               	movwf	??_lcd_shift_left
  4564  0BBE  087D               	movf	??_lcd_shift_left,w
  4565  0BBF  00A1               	movwf	lcd_shift_left@edge
  4566                           
  4567                           ;./lcd.h: 443:     while(n-- && lcd_shift_pos++ < edge) lcd_cur_disp_shift(1, 0);
  4568  0BC0  2BC8               	goto	l1944
  4569  0BC1                     l1942:
  4570  0BC1  01F8               	clrf	lcd_cur_disp_shift@r_l
  4571  0BC2  3001               	movlw	1
  4572  0BC3  120A  158A  22F6  120A  158A  	fcall	_lcd_cur_disp_shift
  4573  0BC8                     l1944:
  4574  0BC8  30FF               	movlw	255
  4575  0BC9  00FD               	movwf	??_lcd_shift_left
  4576  0BCA  087D               	movf	??_lcd_shift_left,w
  4577  0BCB  1283               	bcf	3,5	;RP0=0, select bank0
  4578  0BCC  1303               	bcf	3,6	;RP1=0, select bank0
  4579  0BCD  07A0               	addwf	lcd_shift_left@n,f
  4580  0BCE  0A20               	incf	lcd_shift_left@n,w
  4581  0BCF  1903               	btfsc	3,2
  4582  0BD0  2BD2               	goto	u2251
  4583  0BD1  2BD3               	goto	u2250
  4584  0BD2                     u2251:
  4585  0BD2  2BE0               	goto	l1948
  4586  0BD3                     u2250:
  4587  0BD3                     l1946:
  4588  0BD3  3001               	movlw	1
  4589  0BD4  07E1               	addwf	_lcd_shift_pos,f
  4590  0BD5  30FF               	movlw	-1
  4591  0BD6  0761               	addwf	_lcd_shift_pos,w
  4592  0BD7  3A80               	xorlw	128
  4593  0BD8  00FD               	movwf	??_lcd_shift_left
  4594  0BD9  0821               	movf	lcd_shift_left@edge,w
  4595  0BDA  3A80               	xorlw	128
  4596  0BDB  02FD               	subwf	??_lcd_shift_left,f
  4597  0BDC  1C03               	skipc
  4598  0BDD  2BDF               	goto	u2261
  4599  0BDE  2BE0               	goto	u2260
  4600  0BDF                     u2261:
  4601  0BDF  2BC1               	goto	l1942
  4602  0BE0                     u2260:
  4603  0BE0                     l1948:
  4604                           
  4605                           ;./lcd.h: 445:     if (lcd_shift_pos > edge) lcd_shift_pos = edge;
  4606  0BE0  0821               	movf	lcd_shift_left@edge,w
  4607  0BE1  3A80               	xorlw	128
  4608  0BE2  00FD               	movwf	??_lcd_shift_left
  4609  0BE3  0861               	movf	_lcd_shift_pos,w
  4610  0BE4  3A80               	xorlw	128
  4611  0BE5  02FD               	subwf	??_lcd_shift_left,f
  4612  0BE6  1803               	skipnc
  4613  0BE7  2BE9               	goto	u2271
  4614  0BE8  2BEA               	goto	u2270
  4615  0BE9                     u2271:
  4616  0BE9  2BEE               	goto	l259
  4617  0BEA                     u2270:
  4618  0BEA                     l1950:
  4619  0BEA  0821               	movf	lcd_shift_left@edge,w
  4620  0BEB  00FD               	movwf	??_lcd_shift_left
  4621  0BEC  087D               	movf	??_lcd_shift_left,w
  4622  0BED  00E1               	movwf	_lcd_shift_pos
  4623  0BEE                     l259:
  4624  0BEE  0008               	return
  4625  0BEF                     __end_of_lcd_shift_left:
  4626                           
  4627                           	psect	text17
  4628  0AF6                     __ptext17:	
  4629 ;; *************** function _lcd_cur_disp_shift *****************
  4630 ;; Defined at:
  4631 ;;		line 224 in file "./lcd.h"
  4632 ;; Parameters:    Size  Location     Type
  4633 ;;  s_c             1    wreg     _Bool 
  4634 ;;  r_l             1    8[COMMON] _Bool 
  4635 ;; Auto vars:     Size  Location     Type
  4636 ;;  s_c             1   12[COMMON] _Bool 
  4637 ;; Return value:  Size  Location     Type
  4638 ;;                  1    wreg      void 
  4639 ;; Registers used:
  4640 ;;		wreg, status,2, status,0, pclath, cstack
  4641 ;; Tracked objects:
  4642 ;;		On entry : 0/0
  4643 ;;		On exit  : 0/0
  4644 ;;		Unchanged: 0/0
  4645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4646 ;;      Params:         1       0       0       0       0
  4647 ;;      Locals:         1       0       0       0       0
  4648 ;;      Temps:          3       0       0       0       0
  4649 ;;      Totals:         5       0       0       0       0
  4650 ;;Total ram usage:        5 bytes
  4651 ;; Hardware stack levels used:    1
  4652 ;; Hardware stack levels required when called:    3
  4653 ;; This function calls:
  4654 ;;		_lcd_send
  4655 ;; This function is called by:
  4656 ;;		_lcd_cursor_left
  4657 ;;		_lcd_cursor_right
  4658 ;;		_lcd_shift_left
  4659 ;;		_lcd_shift_right
  4660 ;; This function uses a non-reentrant model
  4661 ;;
  4662                           
  4663                           
  4664                           ;psect for function _lcd_cur_disp_shift
  4665  0AF6                     _lcd_cur_disp_shift:
  4666                           
  4667                           ;incstack = 0
  4668 ;; hardware stack exceeded
  4669                           ; Regs used in _lcd_cur_disp_shift: [wreg+status,2+status,0+pclath+cstack]
  4670                           ;lcd_cur_disp_shift@s_c stored from wreg
  4671  0AF6  00FC               	movwf	lcd_cur_disp_shift@s_c
  4672  0AF7                     l1938:
  4673                           
  4674                           ;./lcd.h: 224: void lcd_cur_disp_shift(_Bool s_c, _Bool r_l);./lcd.h: 225: {;./lcd.h: 22
      +                          6:     lcd_send(LOW, 0x10 | ((s_c) ? 1 : 0) << 3 | ((r_l) ? 1 : 0) << 2);
  4675  0AF7  0878               	movf	lcd_cur_disp_shift@r_l,w
  4676  0AF8  1D03               	btfss	3,2
  4677  0AF9  2AFB               	goto	u2191
  4678  0AFA  2AFD               	goto	u2190
  4679  0AFB                     u2191:
  4680  0AFB  3001               	movlw	1
  4681  0AFC  2AFE               	goto	u2200
  4682  0AFD                     u2190:
  4683  0AFD  3000               	movlw	0
  4684  0AFE                     u2200:
  4685  0AFE  00F9               	movwf	??_lcd_cur_disp_shift
  4686  0AFF  3002               	movlw	2
  4687  0B00                     u2215:
  4688  0B00  1003               	clrc
  4689  0B01  0DF9               	rlf	??_lcd_cur_disp_shift,f
  4690  0B02  3EFF               	addlw	-1
  4691  0B03  1D03               	skipz
  4692  0B04  2B00               	goto	u2215
  4693  0B05  087C               	movf	lcd_cur_disp_shift@s_c,w
  4694  0B06  1D03               	btfss	3,2
  4695  0B07  2B09               	goto	u2221
  4696  0B08  2B0B               	goto	u2220
  4697  0B09                     u2221:
  4698  0B09  3001               	movlw	1
  4699  0B0A  2B0C               	goto	u2230
  4700  0B0B                     u2220:
  4701  0B0B  3000               	movlw	0
  4702  0B0C                     u2230:
  4703  0B0C  00FA               	movwf	??_lcd_cur_disp_shift+1
  4704  0B0D  3002               	movlw	2
  4705  0B0E                     u2245:
  4706  0B0E  1003               	clrc
  4707  0B0F  0DFA               	rlf	??_lcd_cur_disp_shift+1,f
  4708  0B10  3EFF               	addlw	-1
  4709  0B11  1D03               	skipz
  4710  0B12  2B0E               	goto	u2245
  4711  0B13  1003               	clrc
  4712  0B14  0D7A               	rlf	??_lcd_cur_disp_shift+1,w
  4713  0B15  0479               	iorwf	??_lcd_cur_disp_shift,w
  4714  0B16  3810               	iorlw	16
  4715  0B17  00FB               	movwf	??_lcd_cur_disp_shift+2
  4716  0B18  087B               	movf	??_lcd_cur_disp_shift+2,w
  4717  0B19  00F4               	movwf	lcd_send@data
  4718  0B1A  3000               	movlw	0
  4719  0B1B  120A  158A  2573  120A  158A  	fcall	_lcd_send
  4720  0B20                     l107:
  4721  0B20  0008               	return
  4722  0B21                     __end_of_lcd_cur_disp_shift:
  4723                           
  4724                           	psect	text18
  4725  0BEF                     __ptext18:	
  4726 ;; *************** function _lcd_set_ddram_adr *****************
  4727 ;; Defined at:
  4728 ;;		line 246 in file "./lcd.h"
  4729 ;; Parameters:    Size  Location     Type
  4730 ;;  address         1    wreg     unsigned char 
  4731 ;; Auto vars:     Size  Location     Type
  4732 ;;  address         1   13[COMMON] unsigned char 
  4733 ;; Return value:  Size  Location     Type
  4734 ;;		None               void
  4735 ;; Registers used:
  4736 ;;		wreg, status,2, status,0, pclath, cstack
  4737 ;; Tracked objects:
  4738 ;;		On entry : 0/0
  4739 ;;		On exit  : 0/0
  4740 ;;		Unchanged: 0/0
  4741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4742 ;;      Params:         0       0       0       0       0
  4743 ;;      Locals:         3       0       0       0       0
  4744 ;;      Temps:          3       0       0       0       0
  4745 ;;      Totals:         6       0       0       0       0
  4746 ;;Total ram usage:        6 bytes
  4747 ;; Hardware stack levels used:    1
  4748 ;; Hardware stack levels required when called:    3
  4749 ;; This function calls:
  4750 ;;		_lcd_send
  4751 ;; This function is called by:
  4752 ;;		_lcd_set_cursor
  4753 ;;		_lcd_clr_row
  4754 ;; This function uses a non-reentrant model
  4755 ;;
  4756                           
  4757                           
  4758                           ;psect for function _lcd_set_ddram_adr
  4759  0BEF                     _lcd_set_ddram_adr:
  4760                           
  4761                           ;incstack = 0
  4762                           ; Regs used in _lcd_set_ddram_adr: [wreg+status,2+status,0+pclath+cstack]
  4763                           ;lcd_set_ddram_adr@address stored from wreg
  4764  0BEF  00FD               	movwf	lcd_set_ddram_adr@address
  4765  0BF0                     l2114:
  4766                           
  4767                           ;./lcd.h: 246: __bit lcd_set_ddram_adr(unsigned char address);./lcd.h: 247: {;./lcd.h: 2
      +                          48:     if (address <= (lcd_lines == 0 ? 0x4f : 0x67) + entry_mode_i_d) {
  4768  0BF0  1283               	bcf	3,5	;RP0=0, select bank0
  4769  0BF1  1303               	bcf	3,6	;RP1=0, select bank0
  4770  0BF2  1DE3               	btfss	_lcd_lines/(0+8),_lcd_lines& (0+7)
  4771  0BF3  2BF5               	goto	u2911
  4772  0BF4  2BF6               	goto	u2910
  4773  0BF5                     u2911:
  4774  0BF5  2BFB               	goto	l120
  4775  0BF6                     u2910:
  4776  0BF6                     l2116:
  4777  0BF6  3067               	movlw	103
  4778  0BF7  00FB               	movwf	_lcd_set_ddram_adr$286
  4779  0BF8  3000               	movlw	0
  4780  0BF9  00FC               	movwf	_lcd_set_ddram_adr$286+1
  4781  0BFA  2BFF               	goto	l2118
  4782  0BFB                     l120:
  4783  0BFB  304F               	movlw	79
  4784  0BFC  00FB               	movwf	_lcd_set_ddram_adr$286
  4785  0BFD  3000               	movlw	0
  4786  0BFE  00FC               	movwf	_lcd_set_ddram_adr$286+1
  4787  0BFF                     l2118:
  4788  0BFF  1003               	clrc
  4789  0C00  1963               	btfsc	_entry_mode_i_d/(0+8),_entry_mode_i_d& (0+7)
  4790  0C01  1403               	setc
  4791  0C02  3000               	movlw	0
  4792  0C03  1803               	skipnc
  4793  0C04  3001               	movlw	1
  4794  0C05  077B               	addwf	_lcd_set_ddram_adr$286,w
  4795  0C06  00F8               	movwf	??_lcd_set_ddram_adr
  4796  0C07  087C               	movf	_lcd_set_ddram_adr$286+1,w
  4797  0C08  1803               	skipnc
  4798  0C09  0A7C               	incf	_lcd_set_ddram_adr$286+1,w
  4799  0C0A  00F9               	movwf	??_lcd_set_ddram_adr+1
  4800  0C0B  0879               	movf	??_lcd_set_ddram_adr+1,w
  4801  0C0C  3A80               	xorlw	128
  4802  0C0D  00FA               	movwf	??_lcd_set_ddram_adr+2
  4803  0C0E  3080               	movlw	128
  4804  0C0F  027A               	subwf	??_lcd_set_ddram_adr+2,w
  4805  0C10  1D03               	skipz
  4806  0C11  2C14               	goto	u2925
  4807  0C12  087D               	movf	lcd_set_ddram_adr@address,w
  4808  0C13  0278               	subwf	??_lcd_set_ddram_adr,w
  4809  0C14                     u2925:
  4810  0C14  1C03               	skipc
  4811  0C15  2C17               	goto	u2921
  4812  0C16  2C18               	goto	u2920
  4813  0C17                     u2921:
  4814  0C17  2C26               	goto	l124
  4815  0C18                     u2920:
  4816  0C18                     l2120:
  4817                           
  4818                           ;./lcd.h: 249:         lcd_RAM = 0;
  4819  0C18  1283               	bcf	3,5	;RP0=0, select bank0
  4820  0C19  1303               	bcf	3,6	;RP1=0, select bank0
  4821  0C1A  1263               	bcf	_lcd_RAM/(0+8),_lcd_RAM& (0+7)
  4822  0C1B                     l2122:
  4823                           
  4824                           ;./lcd.h: 250:         lcd_send(LOW, 0x80 | address);
  4825  0C1B  087D               	movf	lcd_set_ddram_adr@address,w
  4826  0C1C  3880               	iorlw	128
  4827  0C1D  00F8               	movwf	??_lcd_set_ddram_adr
  4828  0C1E  0878               	movf	??_lcd_set_ddram_adr,w
  4829  0C1F  00F4               	movwf	lcd_send@data
  4830  0C20  3000               	movlw	0
  4831  0C21  120A  158A  2573  120A  158A  	fcall	_lcd_send
  4832  0C26                     l124:	
  4833                           ;./lcd.h: 251:     } else
  4834                           
  4835  0C26  0008               	return
  4836  0C27                     __end_of_lcd_set_ddram_adr:
  4837                           
  4838                           	psect	text19
  4839  0277                     __ptext19:	
  4840 ;; *************** function _lcd_init *****************
  4841 ;; Defined at:
  4842 ;;		line 301 in file "./lcd.h"
  4843 ;; Parameters:    Size  Location     Type
  4844 ;;  n               1    wreg     _Bool 
  4845 ;;  f               1    1[BANK0 ] _Bool 
  4846 ;; Auto vars:     Size  Location     Type
  4847 ;;  n               1    7[BANK0 ] _Bool 
  4848 ;; Return value:  Size  Location     Type
  4849 ;;                  1    wreg      void 
  4850 ;; Registers used:
  4851 ;;		wreg, status,2, status,0, pclath, cstack
  4852 ;; Tracked objects:
  4853 ;;		On entry : 0/0
  4854 ;;		On exit  : 0/0
  4855 ;;		Unchanged: 0/0
  4856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4857 ;;      Params:         0       1       0       0       0
  4858 ;;      Locals:         0       3       0       0       0
  4859 ;;      Temps:          0       3       0       0       0
  4860 ;;      Totals:         0       7       0       0       0
  4861 ;;Total ram usage:        7 bytes
  4862 ;; Hardware stack levels used:    1
  4863 ;; Hardware stack levels required when called:    5
  4864 ;; This function calls:
  4865 ;;		_lcd_clr_disp
  4866 ;;		_lcd_display_set
  4867 ;;		_lcd_entry_mode
  4868 ;;		_lcd_function_set
  4869 ;; This function is called by:
  4870 ;;		_main
  4871 ;; This function uses a non-reentrant model
  4872 ;;
  4873                           
  4874                           
  4875                           ;psect for function _lcd_init
  4876  0277                     _lcd_init:
  4877                           
  4878                           ;incstack = 0
  4879                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  4880                           ;lcd_init@n stored from wreg
  4881  0277  1283               	bcf	3,5	;RP0=0, select bank0
  4882  0278  1303               	bcf	3,6	;RP1=0, select bank0
  4883  0279  00A7               	movwf	lcd_init@n
  4884  027A                     l2396:
  4885                           
  4886                           ;./lcd.h: 301: void lcd_init(_Bool n, _Bool f);./lcd.h: 302: {;./lcd.h: 303:     TRISD &
      +                          = 0x1f;
  4887  027A  301F               	movlw	31
  4888  027B  00A2               	movwf	??_lcd_init
  4889  027C  0822               	movf	??_lcd_init,w
  4890  027D  1683               	bsf	3,5	;RP0=1, select bank1
  4891  027E  1303               	bcf	3,6	;RP1=0, select bank1
  4892  027F  0588               	andwf	8,f	;volatile
  4893                           
  4894                           ;./lcd.h: 304:     n = ((n) ? 1 : 0);
  4895  0280  1283               	bcf	3,5	;RP0=0, select bank0
  4896  0281  1303               	bcf	3,6	;RP1=0, select bank0
  4897  0282  0827               	movf	lcd_init@n,w
  4898  0283  1D03               	btfss	3,2
  4899  0284  2A86               	goto	u3561
  4900  0285  2A88               	goto	u3560
  4901  0286                     u3561:
  4902  0286  3001               	movlw	1
  4903  0287  2A89               	goto	u3570
  4904  0288                     u3560:
  4905  0288  3000               	movlw	0
  4906  0289                     u3570:
  4907  0289  00A2               	movwf	??_lcd_init
  4908  028A  0822               	movf	??_lcd_init,w
  4909  028B  00A7               	movwf	lcd_init@n
  4910                           
  4911                           ;./lcd.h: 305:     f = ((f) ? 1 : 0);
  4912  028C  0821               	movf	lcd_init@f,w
  4913  028D  1D03               	btfss	3,2
  4914  028E  2A90               	goto	u3581
  4915  028F  2A92               	goto	u3580
  4916  0290                     u3581:
  4917  0290  3001               	movlw	1
  4918  0291  2A93               	goto	u3590
  4919  0292                     u3580:
  4920  0292  3000               	movlw	0
  4921  0293                     u3590:
  4922  0293  00A2               	movwf	??_lcd_init
  4923  0294  0822               	movf	??_lcd_init,w
  4924  0295  00A1               	movwf	lcd_init@f
  4925                           
  4926                           ;./lcd.h: 313:     TRISB &= 0x0F; PORTDbits.RD7 = PORTDbits.RD6 = 0;
  4927  0296  300F               	movlw	15
  4928  0297  00A2               	movwf	??_lcd_init
  4929  0298  0822               	movf	??_lcd_init,w
  4930  0299  1683               	bsf	3,5	;RP0=1, select bank1
  4931  029A  1303               	bcf	3,6	;RP1=0, select bank1
  4932  029B  0586               	andwf	6,f	;volatile
  4933  029C                     l2398:
  4934  029C  1283               	bcf	3,5	;RP0=0, select bank0
  4935  029D  1303               	bcf	3,6	;RP1=0, select bank0
  4936  029E  1308               	bcf	8,6	;volatile
  4937  029F  1388               	bcf	8,7	;volatile
  4938  02A0                     l2400:
  4939                           
  4940                           ;./lcd.h: 314:     _delay((unsigned long)((1)*(20000000/4000000.0))); PORTDbits.RD5 = HI
      +                          GH; _delay((unsigned long)((1)*(20000000/4000000.0))); PORTB = (0x20) | (PORTB & 0x0f); 
      +                          _delay((unsigned long)((1)*(20000000/4000000.0))); PORTDbits.RD5 = LOW; _delay((unsigned
      +                           long)((1)*(20000000/4000000.0)));
  4941  02A0  2AA1               	nop2	;2 cycle nop
  4942  02A1  2AA2               	nop2	;2 cycle nop
  4943  02A2  0000               	nop
  4944  02A3                     l2402:
  4945  02A3  1283               	bcf	3,5	;RP0=0, select bank0
  4946  02A4  1303               	bcf	3,6	;RP1=0, select bank0
  4947  02A5  1688               	bsf	8,5	;volatile
  4948  02A6                     l2404:
  4949  02A6  2AA7               	nop2	;2 cycle nop
  4950  02A7  2AA8               	nop2	;2 cycle nop
  4951  02A8  0000               	nop
  4952  02A9                     l2406:
  4953  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  4954  02AA  1303               	bcf	3,6	;RP1=0, select bank0
  4955  02AB  0806               	movf	6,w	;volatile
  4956  02AC  390F               	andlw	15
  4957  02AD  3820               	iorlw	32
  4958  02AE  0086               	movwf	6	;volatile
  4959  02AF                     l2408:
  4960  02AF  2AB0               	nop2	;2 cycle nop
  4961  02B0  2AB1               	nop2	;2 cycle nop
  4962  02B1  0000               	nop
  4963  02B2                     l2410:
  4964  02B2  1283               	bcf	3,5	;RP0=0, select bank0
  4965  02B3  1303               	bcf	3,6	;RP1=0, select bank0
  4966  02B4  1288               	bcf	8,5	;volatile
  4967  02B5                     l2412:
  4968  02B5  2AB6               	nop2	;2 cycle nop
  4969  02B6  2AB7               	nop2	;2 cycle nop
  4970  02B7  0000               	nop
  4971  02B8                     l2414:
  4972                           
  4973                           ;./lcd.h: 315:     _delay((unsigned long)((40)*(20000000/4000.0)));
  4974  02B8  3002               	movlw	2
  4975  02B9  1283               	bcf	3,5	;RP0=0, select bank0
  4976  02BA  1303               	bcf	3,6	;RP1=0, select bank0
  4977  02BB  00A4               	movwf	??_lcd_init+2
  4978  02BC  3004               	movlw	4
  4979  02BD  00A3               	movwf	??_lcd_init+1
  4980  02BE  30B9               	movlw	185
  4981  02BF  00A2               	movwf	??_lcd_init
  4982  02C0                     u4257:
  4983  02C0  0BA2               	decfsz	??_lcd_init,f
  4984  02C1  2AC0               	goto	u4257
  4985  02C2  0BA3               	decfsz	??_lcd_init+1,f
  4986  02C3  2AC0               	goto	u4257
  4987  02C4  0BA4               	decfsz	??_lcd_init+2,f
  4988  02C5  2AC0               	goto	u4257
  4989  02C6  2AC7               	nop2
  4990  02C7                     l2416:
  4991                           
  4992                           ;./lcd.h: 316:     _delay((unsigned long)((1)*(20000000/4000000.0))); PORTDbits.RD5 = HI
      +                          GH; _delay((unsigned long)((1)*(20000000/4000000.0))); PORTB = (0x20) | (PORTB & 0x0f); 
      +                          _delay((unsigned long)((1)*(20000000/4000000.0))); PORTDbits.RD5 = LOW; _delay((unsigned
      +                           long)((1)*(20000000/4000000.0)));
  4993  02C7  2AC8               	nop2	;2 cycle nop
  4994  02C8  2AC9               	nop2	;2 cycle nop
  4995  02C9  0000               	nop
  4996  02CA                     l2418:
  4997  02CA  1283               	bcf	3,5	;RP0=0, select bank0
  4998  02CB  1303               	bcf	3,6	;RP1=0, select bank0
  4999  02CC  1688               	bsf	8,5	;volatile
  5000  02CD                     l2420:
  5001  02CD  2ACE               	nop2	;2 cycle nop
  5002  02CE  2ACF               	nop2	;2 cycle nop
  5003  02CF  0000               	nop
  5004  02D0                     l2422:
  5005  02D0  1283               	bcf	3,5	;RP0=0, select bank0
  5006  02D1  1303               	bcf	3,6	;RP1=0, select bank0
  5007  02D2  0806               	movf	6,w	;volatile
  5008  02D3  390F               	andlw	15
  5009  02D4  3820               	iorlw	32
  5010  02D5  0086               	movwf	6	;volatile
  5011  02D6                     l2424:
  5012  02D6  2AD7               	nop2	;2 cycle nop
  5013  02D7  2AD8               	nop2	;2 cycle nop
  5014  02D8  0000               	nop
  5015  02D9                     l2426:
  5016  02D9  1283               	bcf	3,5	;RP0=0, select bank0
  5017  02DA  1303               	bcf	3,6	;RP1=0, select bank0
  5018  02DB  1288               	bcf	8,5	;volatile
  5019  02DC                     l2428:
  5020  02DC  2ADD               	nop2	;2 cycle nop
  5021  02DD  2ADE               	nop2	;2 cycle nop
  5022  02DE  0000               	nop
  5023  02DF                     l2430:
  5024                           
  5025                           ;./lcd.h: 317:     _delay((unsigned long)((40)*(20000000/4000.0)));
  5026  02DF  3002               	movlw	2
  5027  02E0  1283               	bcf	3,5	;RP0=0, select bank0
  5028  02E1  1303               	bcf	3,6	;RP1=0, select bank0
  5029  02E2  00A4               	movwf	??_lcd_init+2
  5030  02E3  3004               	movlw	4
  5031  02E4  00A3               	movwf	??_lcd_init+1
  5032  02E5  30B9               	movlw	185
  5033  02E6  00A2               	movwf	??_lcd_init
  5034  02E7                     u4267:
  5035  02E7  0BA2               	decfsz	??_lcd_init,f
  5036  02E8  2AE7               	goto	u4267
  5037  02E9  0BA3               	decfsz	??_lcd_init+1,f
  5038  02EA  2AE7               	goto	u4267
  5039  02EB  0BA4               	decfsz	??_lcd_init+2,f
  5040  02EC  2AE7               	goto	u4267
  5041  02ED  2AEE               	nop2
  5042  02EE                     l2432:
  5043                           
  5044                           ;./lcd.h: 319:     lcd_function_set(((0) ? 1 : 0), n, f);
  5045  02EE  1283               	bcf	3,5	;RP0=0, select bank0
  5046  02EF  1303               	bcf	3,6	;RP1=0, select bank0
  5047  02F0  0827               	movf	lcd_init@n,w
  5048  02F1  00A2               	movwf	??_lcd_init
  5049  02F2  0822               	movf	??_lcd_init,w
  5050  02F3  00F8               	movwf	lcd_function_set@n
  5051  02F4  0821               	movf	lcd_init@f,w
  5052  02F5  00A3               	movwf	??_lcd_init+1
  5053  02F6  0823               	movf	??_lcd_init+1,w
  5054  02F7  00F9               	movwf	lcd_function_set@f
  5055  02F8  3000               	movlw	0
  5056  02F9  120A  158A  2427  120A  118A  	fcall	_lcd_function_set
  5057  02FE                     l2434:
  5058                           
  5059                           ;./lcd.h: 320:     lcd_display_set(LOW, LOW, LOW);
  5060  02FE  01F8               	clrf	lcd_display_set@c
  5061  02FF  01F9               	clrf	lcd_display_set@b
  5062  0300  3000               	movlw	0
  5063  0301  120A  158A  2382  120A  118A  	fcall	_lcd_display_set
  5064  0306                     l2436:
  5065                           
  5066                           ;./lcd.h: 321:     lcd_clr_disp();
  5067  0306  120A  158A  2283  120A  118A  	fcall	_lcd_clr_disp
  5068  030B                     l2438:
  5069                           
  5070                           ;./lcd.h: 322:     lcd_entry_mode(HIGH, LOW);
  5071  030B  01F8               	clrf	lcd_entry_mode@s
  5072  030C  3001               	movlw	1
  5073  030D  120A  158A  22CC  120A  118A  	fcall	_lcd_entry_mode
  5074  0312                     l2440:
  5075                           
  5076                           ;./lcd.h: 323:     lcd_display_set(HIGH, HIGH, HIGH);
  5077  0312  01F8               	clrf	lcd_display_set@c
  5078  0313  0AF8               	incf	lcd_display_set@c,f
  5079  0314  01F9               	clrf	lcd_display_set@b
  5080  0315  0AF9               	incf	lcd_display_set@b,f
  5081  0316  3001               	movlw	1
  5082  0317  120A  158A  2382  120A  118A  	fcall	_lcd_display_set
  5083  031C                     l2442:
  5084                           
  5085                           ;./lcd.h: 325:     _delay((unsigned long)((5)*(20000000/4000.0)));
  5086  031C  3021               	movlw	33
  5087  031D  1283               	bcf	3,5	;RP0=0, select bank0
  5088  031E  1303               	bcf	3,6	;RP1=0, select bank0
  5089  031F  00A3               	movwf	??_lcd_init+1
  5090  0320  3075               	movlw	117
  5091  0321  00A2               	movwf	??_lcd_init
  5092  0322                     u4277:
  5093  0322  0BA2               	decfsz	??_lcd_init,f
  5094  0323  2B22               	goto	u4277
  5095  0324  0BA3               	decfsz	??_lcd_init+1,f
  5096  0325  2B22               	goto	u4277
  5097  0326  2B27               	nop2
  5098  0327                     l2444:
  5099                           
  5100                           ;./lcd.h: 327:     left_edge = 0;
  5101  0327  1283               	bcf	3,5	;RP0=0, select bank0
  5102  0328  1303               	bcf	3,6	;RP1=0, select bank0
  5103  0329  01E0               	clrf	_left_edge
  5104  032A                     l2446:
  5105                           
  5106                           ;./lcd.h: 328:     right_edge = lcd_lines ? 0x27 : 0x4f;
  5107  032A  19E3               	btfsc	_lcd_lines/(0+8),_lcd_lines& (0+7)
  5108  032B  2B2D               	goto	u3601
  5109  032C  2B2E               	goto	u3600
  5110  032D                     u3601:
  5111  032D  2B33               	goto	l2450
  5112  032E                     u3600:
  5113  032E                     l2448:
  5114  032E  304F               	movlw	79
  5115  032F  00A5               	movwf	_lcd_init$303
  5116  0330  3000               	movlw	0
  5117  0331  00A6               	movwf	_lcd_init$303+1
  5118  0332  2B37               	goto	l166
  5119  0333                     l2450:
  5120  0333  3027               	movlw	39
  5121  0334  00A5               	movwf	_lcd_init$303
  5122  0335  3000               	movlw	0
  5123  0336  00A6               	movwf	_lcd_init$303+1
  5124  0337                     l166:
  5125  0337  0825               	movf	_lcd_init$303,w
  5126  0338  00A2               	movwf	??_lcd_init
  5127  0339  0822               	movf	??_lcd_init,w
  5128  033A  00DF               	movwf	_right_edge
  5129  033B                     l167:
  5130  033B  0008               	return
  5131  033C                     __end_of_lcd_init:
  5132                           
  5133                           	psect	text20
  5134  0C27                     __ptext20:	
  5135 ;; *************** function _lcd_function_set *****************
  5136 ;; Defined at:
  5137 ;;		line 229 in file "./lcd.h"
  5138 ;; Parameters:    Size  Location     Type
  5139 ;;  dl              1    wreg     _Bool 
  5140 ;;  n               1    8[COMMON] _Bool 
  5141 ;;  f               1    9[COMMON] _Bool 
  5142 ;; Auto vars:     Size  Location     Type
  5143 ;;  dl              1    0[BANK0 ] _Bool 
  5144 ;; Return value:  Size  Location     Type
  5145 ;;                  1    wreg      void 
  5146 ;; Registers used:
  5147 ;;		wreg, status,2, status,0, pclath, cstack
  5148 ;; Tracked objects:
  5149 ;;		On entry : 0/0
  5150 ;;		On exit  : 0/0
  5151 ;;		Unchanged: 0/0
  5152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5153 ;;      Params:         2       0       0       0       0
  5154 ;;      Locals:         0       1       0       0       0
  5155 ;;      Temps:          4       0       0       0       0
  5156 ;;      Totals:         6       1       0       0       0
  5157 ;;Total ram usage:        7 bytes
  5158 ;; Hardware stack levels used:    1
  5159 ;; Hardware stack levels required when called:    3
  5160 ;; This function calls:
  5161 ;;		_lcd_send
  5162 ;; This function is called by:
  5163 ;;		_lcd_init
  5164 ;; This function uses a non-reentrant model
  5165 ;;
  5166                           
  5167                           
  5168                           ;psect for function _lcd_function_set
  5169  0C27                     _lcd_function_set:
  5170                           
  5171                           ;incstack = 0
  5172                           ; Regs used in _lcd_function_set: [wreg+status,2+status,0+pclath+cstack]
  5173                           ;lcd_function_set@dl stored from wreg
  5174  0C27  1283               	bcf	3,5	;RP0=0, select bank0
  5175  0C28  1303               	bcf	3,6	;RP1=0, select bank0
  5176  0C29  00A0               	movwf	lcd_function_set@dl
  5177  0C2A                     l2110:
  5178                           
  5179                           ;./lcd.h: 229: void lcd_function_set(_Bool dl, _Bool n, _Bool f);./lcd.h: 230: {;./lcd.h
      +                          : 231:     lcd_send(LOW, 0x20 | ((dl) ? 1 : 0) << 4 | ((n) ? 1 : 0) << 3 | ((f) ? 1 : 0)
      +                           << 2);
  5180  0C2A  0879               	movf	lcd_function_set@f,w
  5181  0C2B  1D03               	btfss	3,2
  5182  0C2C  2C2E               	goto	u2801
  5183  0C2D  2C30               	goto	u2800
  5184  0C2E                     u2801:
  5185  0C2E  3001               	movlw	1
  5186  0C2F  2C31               	goto	u2810
  5187  0C30                     u2800:
  5188  0C30  3000               	movlw	0
  5189  0C31                     u2810:
  5190  0C31  00FA               	movwf	??_lcd_function_set
  5191  0C32  3002               	movlw	2
  5192  0C33                     u2825:
  5193  0C33  1003               	clrc
  5194  0C34  0DFA               	rlf	??_lcd_function_set,f
  5195  0C35  3EFF               	addlw	-1
  5196  0C36  1D03               	skipz
  5197  0C37  2C33               	goto	u2825
  5198  0C38  0878               	movf	lcd_function_set@n,w
  5199  0C39  1D03               	btfss	3,2
  5200  0C3A  2C3C               	goto	u2831
  5201  0C3B  2C3E               	goto	u2830
  5202  0C3C                     u2831:
  5203  0C3C  3001               	movlw	1
  5204  0C3D  2C3F               	goto	u2840
  5205  0C3E                     u2830:
  5206  0C3E  3000               	movlw	0
  5207  0C3F                     u2840:
  5208  0C3F  00FB               	movwf	??_lcd_function_set+1
  5209  0C40  3003               	movlw	3
  5210  0C41                     u2855:
  5211  0C41  1003               	clrc
  5212  0C42  0DFB               	rlf	??_lcd_function_set+1,f
  5213  0C43  3EFF               	addlw	-1
  5214  0C44  1D03               	skipz
  5215  0C45  2C41               	goto	u2855
  5216  0C46  0820               	movf	lcd_function_set@dl,w
  5217  0C47  1D03               	btfss	3,2
  5218  0C48  2C4A               	goto	u2861
  5219  0C49  2C4C               	goto	u2860
  5220  0C4A                     u2861:
  5221  0C4A  3001               	movlw	1
  5222  0C4B  2C4D               	goto	u2870
  5223  0C4C                     u2860:
  5224  0C4C  3000               	movlw	0
  5225  0C4D                     u2870:
  5226  0C4D  00FC               	movwf	??_lcd_function_set+2
  5227  0C4E  3003               	movlw	3
  5228  0C4F                     u2885:
  5229  0C4F  1003               	clrc
  5230  0C50  0DFC               	rlf	??_lcd_function_set+2,f
  5231  0C51  3EFF               	addlw	-1
  5232  0C52  1D03               	skipz
  5233  0C53  2C4F               	goto	u2885
  5234  0C54  1003               	clrc
  5235  0C55  0D7C               	rlf	??_lcd_function_set+2,w
  5236  0C56  047B               	iorwf	??_lcd_function_set+1,w
  5237  0C57  047A               	iorwf	??_lcd_function_set,w
  5238  0C58  3820               	iorlw	32
  5239  0C59  00FD               	movwf	??_lcd_function_set+3
  5240  0C5A  087D               	movf	??_lcd_function_set+3,w
  5241  0C5B  00F4               	movwf	lcd_send@data
  5242  0C5C  3000               	movlw	0
  5243  0C5D  120A  158A  2573  120A  158A  	fcall	_lcd_send
  5244  0C62                     l2112:
  5245                           
  5246                           ;./lcd.h: 232:     lcd_lines = ((n) ? 1 : 0);
  5247  0C62  0878               	movf	lcd_function_set@n,w
  5248  0C63  1D03               	btfss	3,2
  5249  0C64  2C66               	goto	u2891
  5250  0C65  2C6A               	goto	u2890
  5251  0C66                     u2891:
  5252  0C66  1283               	bcf	3,5	;RP0=0, select bank0
  5253  0C67  1303               	bcf	3,6	;RP1=0, select bank0
  5254  0C68  15E3               	bsf	_lcd_lines/(0+8),_lcd_lines& (0+7)
  5255  0C69  2C6D               	goto	u2904
  5256  0C6A                     u2890:
  5257  0C6A  1283               	bcf	3,5	;RP0=0, select bank0
  5258  0C6B  1303               	bcf	3,6	;RP1=0, select bank0
  5259  0C6C  11E3               	bcf	_lcd_lines/(0+8),_lcd_lines& (0+7)
  5260  0C6D                     u2904:
  5261  0C6D                     l110:
  5262  0C6D  0008               	return
  5263  0C6E                     __end_of_lcd_function_set:
  5264                           
  5265                           	psect	text21
  5266  0B82                     __ptext21:	
  5267 ;; *************** function _lcd_display_set *****************
  5268 ;; Defined at:
  5269 ;;		line 219 in file "./lcd.h"
  5270 ;; Parameters:    Size  Location     Type
  5271 ;;  d               1    wreg     _Bool 
  5272 ;;  c               1    8[COMMON] _Bool 
  5273 ;;  b               1    9[COMMON] _Bool 
  5274 ;; Auto vars:     Size  Location     Type
  5275 ;;  d               1    0[BANK0 ] _Bool 
  5276 ;; Return value:  Size  Location     Type
  5277 ;;                  1    wreg      void 
  5278 ;; Registers used:
  5279 ;;		wreg, status,2, status,0, pclath, cstack
  5280 ;; Tracked objects:
  5281 ;;		On entry : 0/0
  5282 ;;		On exit  : 0/0
  5283 ;;		Unchanged: 0/0
  5284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5285 ;;      Params:         2       0       0       0       0
  5286 ;;      Locals:         0       1       0       0       0
  5287 ;;      Temps:          4       0       0       0       0
  5288 ;;      Totals:         6       1       0       0       0
  5289 ;;Total ram usage:        7 bytes
  5290 ;; Hardware stack levels used:    1
  5291 ;; Hardware stack levels required when called:    3
  5292 ;; This function calls:
  5293 ;;		_lcd_send
  5294 ;; This function is called by:
  5295 ;;		_lcd_init
  5296 ;; This function uses a non-reentrant model
  5297 ;;
  5298                           
  5299                           
  5300                           ;psect for function _lcd_display_set
  5301  0B82                     _lcd_display_set:
  5302                           
  5303                           ;incstack = 0
  5304                           ; Regs used in _lcd_display_set: [wreg+status,2+status,0+pclath+cstack]
  5305                           ;lcd_display_set@d stored from wreg
  5306  0B82  1283               	bcf	3,5	;RP0=0, select bank0
  5307  0B83  1303               	bcf	3,6	;RP1=0, select bank0
  5308  0B84  00A0               	movwf	lcd_display_set@d
  5309  0B85                     l2108:
  5310                           
  5311                           ;./lcd.h: 219: void lcd_display_set(_Bool d, _Bool c, _Bool b);./lcd.h: 220: {;./lcd.h: 
      +                          221:     lcd_send(LOW, 0x08 | ((d) ? 1 : 0) << 2 | ((c) ? 1 : 0) << 1 | ((b) ? 1 : 0));
  5312  0B85  0879               	movf	lcd_display_set@b,w
  5313  0B86  1D03               	btfss	3,2
  5314  0B87  2B89               	goto	u2721
  5315  0B88  2B8B               	goto	u2720
  5316  0B89                     u2721:
  5317  0B89  3001               	movlw	1
  5318  0B8A  2B8C               	goto	u2730
  5319  0B8B                     u2720:
  5320  0B8B  3000               	movlw	0
  5321  0B8C                     u2730:
  5322  0B8C  00FA               	movwf	??_lcd_display_set
  5323  0B8D  0878               	movf	lcd_display_set@c,w
  5324  0B8E  1D03               	btfss	3,2
  5325  0B8F  2B91               	goto	u2741
  5326  0B90  2B93               	goto	u2740
  5327  0B91                     u2741:
  5328  0B91  3001               	movlw	1
  5329  0B92  2B94               	goto	u2750
  5330  0B93                     u2740:
  5331  0B93  3000               	movlw	0
  5332  0B94                     u2750:
  5333  0B94  00FB               	movwf	??_lcd_display_set+1
  5334  0B95  3001               	movlw	1
  5335  0B96                     u2765:
  5336  0B96  1003               	clrc
  5337  0B97  0DFB               	rlf	??_lcd_display_set+1,f
  5338  0B98  3EFF               	addlw	-1
  5339  0B99  1D03               	skipz
  5340  0B9A  2B96               	goto	u2765
  5341  0B9B  0820               	movf	lcd_display_set@d,w
  5342  0B9C  1D03               	btfss	3,2
  5343  0B9D  2B9F               	goto	u2771
  5344  0B9E  2BA1               	goto	u2770
  5345  0B9F                     u2771:
  5346  0B9F  3001               	movlw	1
  5347  0BA0  2BA2               	goto	u2780
  5348  0BA1                     u2770:
  5349  0BA1  3000               	movlw	0
  5350  0BA2                     u2780:
  5351  0BA2  00FC               	movwf	??_lcd_display_set+2
  5352  0BA3  3001               	movlw	1
  5353  0BA4                     u2795:
  5354  0BA4  1003               	clrc
  5355  0BA5  0DFC               	rlf	??_lcd_display_set+2,f
  5356  0BA6  3EFF               	addlw	-1
  5357  0BA7  1D03               	skipz
  5358  0BA8  2BA4               	goto	u2795
  5359  0BA9  1003               	clrc
  5360  0BAA  0D7C               	rlf	??_lcd_display_set+2,w
  5361  0BAB  047B               	iorwf	??_lcd_display_set+1,w
  5362  0BAC  047A               	iorwf	??_lcd_display_set,w
  5363  0BAD  3808               	iorlw	8
  5364  0BAE  00FD               	movwf	??_lcd_display_set+3
  5365  0BAF  087D               	movf	??_lcd_display_set+3,w
  5366  0BB0  00F4               	movwf	lcd_send@data
  5367  0BB1  3000               	movlw	0
  5368  0BB2  120A  158A  2573  120A  158A  	fcall	_lcd_send
  5369  0BB7                     l104:
  5370  0BB7  0008               	return
  5371  0BB8                     __end_of_lcd_display_set:
  5372                           
  5373                           	psect	text22
  5374  0A83                     __ptext22:	
  5375 ;; *************** function _lcd_clr_disp *****************
  5376 ;; Defined at:
  5377 ;;		line 194 in file "./lcd.h"
  5378 ;; Parameters:    Size  Location     Type
  5379 ;;		None
  5380 ;; Auto vars:     Size  Location     Type
  5381 ;;		None
  5382 ;; Return value:  Size  Location     Type
  5383 ;;                  1    wreg      void 
  5384 ;; Registers used:
  5385 ;;		wreg, status,2, status,0, pclath, cstack
  5386 ;; Tracked objects:
  5387 ;;		On entry : 0/0
  5388 ;;		On exit  : 0/0
  5389 ;;		Unchanged: 0/0
  5390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5391 ;;      Params:         0       0       0       0       0
  5392 ;;      Locals:         0       0       0       0       0
  5393 ;;      Temps:          0       0       0       0       0
  5394 ;;      Totals:         0       0       0       0       0
  5395 ;;Total ram usage:        0 bytes
  5396 ;; Hardware stack levels used:    1
  5397 ;; Hardware stack levels required when called:    4
  5398 ;; This function calls:
  5399 ;;		_lcd_entry_mode
  5400 ;;		_lcd_send
  5401 ;;		_lcd_wait
  5402 ;; This function is called by:
  5403 ;;		_lcd_init
  5404 ;; This function uses a non-reentrant model
  5405 ;;
  5406                           
  5407                           
  5408                           ;psect for function _lcd_clr_disp
  5409  0A83                     _lcd_clr_disp:
  5410  0A83                     l2102:	
  5411                           ;incstack = 0
  5412                           ; Regs used in _lcd_clr_disp: [wreg+status,2+status,0+pclath+cstack]
  5413                           
  5414                           
  5415                           ;./lcd.h: 198:     lcd_send(LOW, 0x01);
  5416  0A83  01F4               	clrf	lcd_send@data
  5417  0A84  0AF4               	incf	lcd_send@data,f
  5418  0A85  3000               	movlw	0
  5419  0A86  120A  158A  2573  120A  158A  	fcall	_lcd_send
  5420                           
  5421                           ;./lcd.h: 199:     lcd_wait();
  5422  0A8B  120A  118A  2003  120A  158A  	fcall	_lcd_wait
  5423  0A90                     l2104:
  5424                           
  5425                           ;./lcd.h: 201:     lcd_cursor_row = lcd_cursor_col = lcd_shift_pos = 0;
  5426  0A90  1283               	bcf	3,5	;RP0=0, select bank0
  5427  0A91  1303               	bcf	3,6	;RP1=0, select bank0
  5428  0A92  01E1               	clrf	_lcd_shift_pos
  5429  0A93  01E2               	clrf	_lcd_cursor_col
  5430  0A94  1063               	bcf	_lcd_cursor_row/(0+8),_lcd_cursor_row& (0+7)
  5431  0A95  1C62               	btfss	_lcd_cursor_col,0
  5432  0A96  2A98               	goto	u2715
  5433  0A97  1463               	bsf	_lcd_cursor_row/(0+8),_lcd_cursor_row& (0+7)
  5434  0A98                     u2715:
  5435  0A98                     l2106:
  5436                           
  5437                           ;./lcd.h: 202:     lcd_entry_mode(entry_mode_i_d, entry_mode_s);
  5438  0A98  3000               	movlw	0
  5439  0A99  1283               	bcf	3,5	;RP0=0, select bank0
  5440  0A9A  1303               	bcf	3,6	;RP1=0, select bank0
  5441  0A9B  18E3               	btfsc	_entry_mode_s/(0+8),_entry_mode_s& (0+7)
  5442  0A9C  3001               	movlw	1
  5443  0A9D  00F8               	movwf	lcd_entry_mode@s
  5444  0A9E  3000               	movlw	0
  5445  0A9F  1963               	btfsc	_entry_mode_i_d/(0+8),_entry_mode_i_d& (0+7)
  5446  0AA0  3001               	movlw	1
  5447  0AA1  120A  158A  22CC  120A  158A  	fcall	_lcd_entry_mode
  5448  0AA6                     l95:
  5449  0AA6  0008               	return
  5450  0AA7                     __end_of_lcd_clr_disp:
  5451                           
  5452                           	psect	text23
  5453  0ACC                     __ptext23:	
  5454 ;; *************** function _lcd_entry_mode *****************
  5455 ;; Defined at:
  5456 ;;		line 213 in file "./lcd.h"
  5457 ;; Parameters:    Size  Location     Type
  5458 ;;  i_d             1    wreg     _Bool 
  5459 ;;  s               1    8[COMMON] _Bool 
  5460 ;; Auto vars:     Size  Location     Type
  5461 ;;  i_d             1   12[COMMON] _Bool 
  5462 ;; Return value:  Size  Location     Type
  5463 ;;                  1    wreg      void 
  5464 ;; Registers used:
  5465 ;;		wreg, status,2, status,0, pclath, cstack
  5466 ;; Tracked objects:
  5467 ;;		On entry : 0/0
  5468 ;;		On exit  : 0/0
  5469 ;;		Unchanged: 0/0
  5470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5471 ;;      Params:         1       0       0       0       0
  5472 ;;      Locals:         1       0       0       0       0
  5473 ;;      Temps:          3       0       0       0       0
  5474 ;;      Totals:         5       0       0       0       0
  5475 ;;Total ram usage:        5 bytes
  5476 ;; Hardware stack levels used:    1
  5477 ;; Hardware stack levels required when called:    3
  5478 ;; This function calls:
  5479 ;;		_lcd_send
  5480 ;; This function is called by:
  5481 ;;		_lcd_clr_disp
  5482 ;;		_lcd_init
  5483 ;;		_lcd_backspace
  5484 ;; This function uses a non-reentrant model
  5485 ;;
  5486                           
  5487                           
  5488                           ;psect for function _lcd_entry_mode
  5489  0ACC                     _lcd_entry_mode:
  5490                           
  5491                           ;incstack = 0
  5492                           ; Regs used in _lcd_entry_mode: [wreg+status,2+status,0+pclath+cstack]
  5493                           ;lcd_entry_mode@i_d stored from wreg
  5494  0ACC  00FC               	movwf	lcd_entry_mode@i_d
  5495  0ACD                     l2002:
  5496                           
  5497                           ;./lcd.h: 213: void lcd_entry_mode(_Bool i_d, _Bool s);./lcd.h: 214: {;./lcd.h: 215:    
      +                           entry_mode_i_d = i_d, entry_mode_s = s;
  5498  0ACD  087C               	movf	lcd_entry_mode@i_d,w
  5499  0ACE  3901               	andlw	1
  5500  0ACF  1283               	bcf	3,5	;RP0=0, select bank0
  5501  0AD0  1303               	bcf	3,6	;RP1=0, select bank0
  5502  0AD1  1163               	bcf	_entry_mode_i_d/(0+8),_entry_mode_i_d& (0+7)
  5503  0AD2  1D03               	skipz
  5504  0AD3  1563               	bsf	_entry_mode_i_d/(0+8),_entry_mode_i_d& (0+7)
  5505  0AD4  0878               	movf	lcd_entry_mode@s,w
  5506  0AD5  3901               	andlw	1
  5507  0AD6  10E3               	bcf	_entry_mode_s/(0+8),_entry_mode_s& (0+7)
  5508  0AD7  1D03               	skipz
  5509  0AD8  14E3               	bsf	_entry_mode_s/(0+8),_entry_mode_s& (0+7)
  5510  0AD9                     l2004:
  5511                           
  5512                           ;./lcd.h: 216:     lcd_send(LOW, 0x04 | ((i_d) ? 1 : 0) << 1 | ((s) ? 1 : 0));
  5513  0AD9  0878               	movf	lcd_entry_mode@s,w
  5514  0ADA  1D03               	btfss	3,2
  5515  0ADB  2ADD               	goto	u2421
  5516  0ADC  2ADF               	goto	u2420
  5517  0ADD                     u2421:
  5518  0ADD  3001               	movlw	1
  5519  0ADE  2AE0               	goto	u2430
  5520  0ADF                     u2420:
  5521  0ADF  3000               	movlw	0
  5522  0AE0                     u2430:
  5523  0AE0  00F9               	movwf	??_lcd_entry_mode
  5524  0AE1  087C               	movf	lcd_entry_mode@i_d,w
  5525  0AE2  1D03               	btfss	3,2
  5526  0AE3  2AE5               	goto	u2441
  5527  0AE4  2AE7               	goto	u2440
  5528  0AE5                     u2441:
  5529  0AE5  3001               	movlw	1
  5530  0AE6  2AE8               	goto	u2450
  5531  0AE7                     u2440:
  5532  0AE7  3000               	movlw	0
  5533  0AE8                     u2450:
  5534  0AE8  00FA               	movwf	??_lcd_entry_mode+1
  5535  0AE9  077A               	addwf	??_lcd_entry_mode+1,w
  5536  0AEA  0479               	iorwf	??_lcd_entry_mode,w
  5537  0AEB  3804               	iorlw	4
  5538  0AEC  00FB               	movwf	??_lcd_entry_mode+2
  5539  0AED  087B               	movf	??_lcd_entry_mode+2,w
  5540  0AEE  00F4               	movwf	lcd_send@data
  5541  0AEF  3000               	movlw	0
  5542  0AF0  120A  158A  2573  120A  158A  	fcall	_lcd_send
  5543  0AF5                     l101:
  5544  0AF5  0008               	return
  5545  0AF6                     __end_of_lcd_entry_mode:
  5546                           
  5547                           	psect	text24
  5548  0D73                     __ptext24:	
  5549 ;; *************** function _lcd_send *****************
  5550 ;; Defined at:
  5551 ;;		line 166 in file "./lcd.h"
  5552 ;; Parameters:    Size  Location     Type
  5553 ;;  reg             1    wreg     _Bool 
  5554 ;;  data            1    4[COMMON] unsigned char 
  5555 ;; Auto vars:     Size  Location     Type
  5556 ;;  reg             1    7[COMMON] _Bool 
  5557 ;; Return value:  Size  Location     Type
  5558 ;;                  1    wreg      void 
  5559 ;; Registers used:
  5560 ;;		wreg, status,2, status,0, pclath, cstack
  5561 ;; Tracked objects:
  5562 ;;		On entry : 0/0
  5563 ;;		On exit  : 0/0
  5564 ;;		Unchanged: 0/0
  5565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5566 ;;      Params:         1       0       0       0       0
  5567 ;;      Locals:         1       0       0       0       0
  5568 ;;      Temps:          2       0       0       0       0
  5569 ;;      Totals:         4       0       0       0       0
  5570 ;;Total ram usage:        4 bytes
  5571 ;; Hardware stack levels used:    1
  5572 ;; Hardware stack levels required when called:    2
  5573 ;; This function calls:
  5574 ;;		_lcd_wait
  5575 ;; This function is called by:
  5576 ;;		_lcd_clr_disp
  5577 ;;		_lcd_entry_mode
  5578 ;;		_lcd_display_set
  5579 ;;		_lcd_cur_disp_shift
  5580 ;;		_lcd_function_set
  5581 ;;		_lcd_set_ddram_adr
  5582 ;;		_lcd_write_char
  5583 ;;		_lcd_return_home
  5584 ;;		_lcd_set_cgram_adr
  5585 ;;		_lcd_clr_row
  5586 ;; This function uses a non-reentrant model
  5587 ;;
  5588                           
  5589                           
  5590                           ;psect for function _lcd_send
  5591  0D73                     _lcd_send:
  5592                           
  5593                           ;incstack = 0
  5594 ;; hardware stack exceeded
  5595                           ; Regs used in _lcd_send: [wreg+status,2+status,0+pclath+cstack]
  5596                           ;lcd_send@reg stored from wreg
  5597  0D73  00F7               	movwf	lcd_send@reg
  5598  0D74                     l1912:
  5599                           
  5600                           ;./lcd.h: 166: void lcd_send(_Bool reg, unsigned char data);./lcd.h: 167: {;./lcd.h: 168
      +                          :     TRISB &= 0x0F;
  5601  0D74  300F               	movlw	15
  5602  0D75  00F5               	movwf	??_lcd_send
  5603  0D76  0875               	movf	??_lcd_send,w
  5604  0D77  1683               	bsf	3,5	;RP0=1, select bank1
  5605  0D78  1303               	bcf	3,6	;RP1=0, select bank1
  5606  0D79  0586               	andwf	6,f	;volatile
  5607                           
  5608                           ;./lcd.h: 169:     if (reg) PORTDbits.RD7 = 1, PORTDbits.RD6 = 0; else PORTDbits.RD7 = P
      +                          ORTDbits.RD6 = 0;
  5609  0D7A  0877               	movf	lcd_send@reg,w
  5610  0D7B  1903               	btfsc	3,2
  5611  0D7C  2D7E               	goto	u2171
  5612  0D7D  2D7F               	goto	u2170
  5613  0D7E                     u2171:
  5614  0D7E  2D84               	goto	l85
  5615  0D7F                     u2170:
  5616  0D7F                     l1914:
  5617  0D7F  1283               	bcf	3,5	;RP0=0, select bank0
  5618  0D80  1303               	bcf	3,6	;RP1=0, select bank0
  5619  0D81  1788               	bsf	8,7	;volatile
  5620  0D82  1308               	bcf	8,6	;volatile
  5621  0D83  2D88               	goto	l86
  5622  0D84                     l85:
  5623  0D84  1283               	bcf	3,5	;RP0=0, select bank0
  5624  0D85  1303               	bcf	3,6	;RP1=0, select bank0
  5625  0D86  1308               	bcf	8,6	;volatile
  5626  0D87  1388               	bcf	8,7	;volatile
  5627  0D88                     l86:
  5628                           
  5629                           ;./lcd.h: 170:     _delay((unsigned long)((1)*(20000000/4000000.0))); PORTDbits.RD5 = HI
      +                          GH; _delay((unsigned long)((1)*(20000000/4000000.0))); PORTB = (data & 0xf0) | (PORTB & 
      +                          0x0f); _delay((unsigned long)((1)*(20000000/4000000.0))); PORTDbits.RD5 = LOW; _delay((u
      +                          nsigned long)((1)*(20000000/4000000.0)));
  5630  0D88  2D89               	nop2	;2 cycle nop
  5631  0D89  2D8A               	nop2	;2 cycle nop
  5632  0D8A  0000               	nop
  5633  0D8B  1283               	bcf	3,5	;RP0=0, select bank0
  5634  0D8C  1303               	bcf	3,6	;RP1=0, select bank0
  5635  0D8D  1688               	bsf	8,5	;volatile
  5636  0D8E  2D8F               	nop2	;2 cycle nop
  5637  0D8F  2D90               	nop2	;2 cycle nop
  5638  0D90  0000               	nop
  5639  0D91                     l1916:
  5640  0D91  300F               	movlw	15
  5641  0D92  1283               	bcf	3,5	;RP0=0, select bank0
  5642  0D93  1303               	bcf	3,6	;RP1=0, select bank0
  5643  0D94  0506               	andwf	6,w	;volatile
  5644  0D95  00F5               	movwf	??_lcd_send
  5645  0D96  0874               	movf	lcd_send@data,w
  5646  0D97  39F0               	andlw	240
  5647  0D98  0475               	iorwf	??_lcd_send,w
  5648  0D99  0086               	movwf	6	;volatile
  5649  0D9A                     l1918:
  5650  0D9A  2D9B               	nop2	;2 cycle nop
  5651  0D9B  2D9C               	nop2	;2 cycle nop
  5652  0D9C  0000               	nop
  5653  0D9D                     l1920:
  5654  0D9D  1283               	bcf	3,5	;RP0=0, select bank0
  5655  0D9E  1303               	bcf	3,6	;RP1=0, select bank0
  5656  0D9F  1288               	bcf	8,5	;volatile
  5657  0DA0                     l1922:
  5658  0DA0  2DA1               	nop2	;2 cycle nop
  5659  0DA1  2DA2               	nop2	;2 cycle nop
  5660  0DA2  0000               	nop
  5661  0DA3                     l1924:
  5662                           
  5663                           ;./lcd.h: 171:     _delay((unsigned long)((1)*(20000000/4000000.0))); PORTDbits.RD5 = HI
      +                          GH; _delay((unsigned long)((1)*(20000000/4000000.0))); PORTB = (data << 4) | (PORTB & 0x
      +                          0f); _delay((unsigned long)((1)*(20000000/4000000.0))); PORTDbits.RD5 = LOW; _delay((uns
      +                          igned long)((1)*(20000000/4000000.0)));
  5664  0DA3  2DA4               	nop2	;2 cycle nop
  5665  0DA4  2DA5               	nop2	;2 cycle nop
  5666  0DA5  0000               	nop
  5667  0DA6                     l1926:
  5668  0DA6  1283               	bcf	3,5	;RP0=0, select bank0
  5669  0DA7  1303               	bcf	3,6	;RP1=0, select bank0
  5670  0DA8  1688               	bsf	8,5	;volatile
  5671  0DA9                     l1928:
  5672  0DA9  2DAA               	nop2	;2 cycle nop
  5673  0DAA  2DAB               	nop2	;2 cycle nop
  5674  0DAB  0000               	nop
  5675  0DAC  300F               	movlw	15
  5676  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  5677  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  5678  0DAF  0506               	andwf	6,w	;volatile
  5679  0DB0  00F5               	movwf	??_lcd_send
  5680  0DB1  0874               	movf	lcd_send@data,w
  5681  0DB2  00F6               	movwf	??_lcd_send+1
  5682  0DB3  3003               	movlw	3
  5683  0DB4                     u2185:
  5684  0DB4  1003               	clrc
  5685  0DB5  0DF6               	rlf	??_lcd_send+1,f
  5686  0DB6  3EFF               	addlw	-1
  5687  0DB7  1D03               	skipz
  5688  0DB8  2DB4               	goto	u2185
  5689  0DB9  1003               	clrc
  5690  0DBA  0D76               	rlf	??_lcd_send+1,w
  5691  0DBB  0475               	iorwf	??_lcd_send,w
  5692  0DBC  0086               	movwf	6	;volatile
  5693  0DBD                     l1930:
  5694  0DBD  2DBE               	nop2	;2 cycle nop
  5695  0DBE  2DBF               	nop2	;2 cycle nop
  5696  0DBF  0000               	nop
  5697  0DC0                     l1932:
  5698  0DC0  1283               	bcf	3,5	;RP0=0, select bank0
  5699  0DC1  1303               	bcf	3,6	;RP1=0, select bank0
  5700  0DC2  1288               	bcf	8,5	;volatile
  5701  0DC3                     l1934:
  5702  0DC3  2DC4               	nop2	;2 cycle nop
  5703  0DC4  2DC5               	nop2	;2 cycle nop
  5704  0DC5  0000               	nop
  5705  0DC6                     l1936:
  5706                           
  5707                           ;./lcd.h: 173:     lcd_wait();
  5708  0DC6  120A  118A  2003  120A  158A  	fcall	_lcd_wait
  5709  0DCB                     l87:
  5710  0DCB  0008               	return
  5711  0DCC                     __end_of_lcd_send:
  5712                           
  5713                           	psect	text25
  5714  0003                     __ptext25:	
  5715 ;; *************** function _lcd_wait *****************
  5716 ;; Defined at:
  5717 ;;		line 295 in file "./lcd.h"
  5718 ;; Parameters:    Size  Location     Type
  5719 ;;		None
  5720 ;; Auto vars:     Size  Location     Type
  5721 ;;		None
  5722 ;; Return value:  Size  Location     Type
  5723 ;;                  1    wreg      void 
  5724 ;; Registers used:
  5725 ;;		wreg, status,2, status,0, pclath, cstack
  5726 ;; Tracked objects:
  5727 ;;		On entry : 0/0
  5728 ;;		On exit  : 0/0
  5729 ;;		Unchanged: 0/0
  5730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5731 ;;      Params:         0       0       0       0       0
  5732 ;;      Locals:         0       0       0       0       0
  5733 ;;      Temps:          0       0       0       0       0
  5734 ;;      Totals:         0       0       0       0       0
  5735 ;;Total ram usage:        0 bytes
  5736 ;; Hardware stack levels used:    1
  5737 ;; Hardware stack levels required when called:    1
  5738 ;; This function calls:
  5739 ;;		_lcd_read
  5740 ;; This function is called by:
  5741 ;;		_lcd_send
  5742 ;;		_lcd_clr_disp
  5743 ;;		_lcd_return_home
  5744 ;; This function uses a non-reentrant model
  5745 ;;
  5746                           
  5747                           
  5748                           ;psect for function _lcd_wait
  5749  0003                     _lcd_wait:
  5750  0003                     l1908:	
  5751                           ;incstack = 0
  5752 ;; hardware stack exceeded
  5753                           ; Regs used in _lcd_wait: [wreg+status,2+status,0+pclath+cstack]
  5754                           
  5755                           
  5756                           ;./lcd.h: 297:     while (lcd_read(LOW) & 0x80) _delay((unsigned long)((1)*(20000000/400
      +                          0000.0)));
  5757  0003  2807               	goto	l1910
  5758  0004                     l158:
  5759  0004  2805               	nop2	;2 cycle nop
  5760  0005  2806               	nop2	;2 cycle nop
  5761  0006  0000               	nop
  5762  0007                     l1910:
  5763  0007  3000               	movlw	0
  5764  0008  120A  158A  251A  120A  118A  	fcall	_lcd_read
  5765  000D  3980               	andlw	128
  5766  000E  1D03               	btfss	3,2
  5767  000F  2811               	goto	u2161
  5768  0010  2812               	goto	u2160
  5769  0011                     u2161:
  5770  0011  2804               	goto	l158
  5771  0012                     u2160:
  5772  0012                     l160:
  5773  0012  0008               	return
  5774  0013                     __end_of_lcd_wait:
  5775                           
  5776                           	psect	text26
  5777  0D1A                     __ptext26:	
  5778 ;; *************** function _lcd_read *****************
  5779 ;; Defined at:
  5780 ;;		line 176 in file "./lcd.h"
  5781 ;; Parameters:    Size  Location     Type
  5782 ;;  reg             1    wreg     _Bool 
  5783 ;; Auto vars:     Size  Location     Type
  5784 ;;  reg             1    2[COMMON] _Bool 
  5785 ;;  data            1    3[COMMON] unsigned char 
  5786 ;; Return value:  Size  Location     Type
  5787 ;;                  1    wreg      unsigned char 
  5788 ;; Registers used:
  5789 ;;		wreg, status,2, status,0
  5790 ;; Tracked objects:
  5791 ;;		On entry : 0/0
  5792 ;;		On exit  : 0/0
  5793 ;;		Unchanged: 0/0
  5794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5795 ;;      Params:         0       0       0       0       0
  5796 ;;      Locals:         2       0       0       0       0
  5797 ;;      Temps:          2       0       0       0       0
  5798 ;;      Totals:         4       0       0       0       0
  5799 ;;Total ram usage:        4 bytes
  5800 ;; Hardware stack levels used:    1
  5801 ;; This function calls:
  5802 ;;		Nothing
  5803 ;; This function is called by:
  5804 ;;		_lcd_wait
  5805 ;;		_lcd_read_address
  5806 ;;		_lcd_read_char
  5807 ;; This function uses a non-reentrant model
  5808 ;;
  5809                           
  5810                           
  5811                           ;psect for function _lcd_read
  5812  0D1A                     _lcd_read:
  5813                           
  5814                           ;incstack = 0
  5815 ;; hardware stack exceeded
  5816                           ; Regs used in _lcd_read: [wreg+status,2+status,0]
  5817                           ;lcd_read@reg stored from wreg
  5818  0D1A  00F2               	movwf	lcd_read@reg
  5819  0D1B                     l1874:
  5820  0D1B                     l1876:
  5821                           
  5822                           ;./lcd.h: 180:     TRISB |= 0xF0;
  5823  0D1B  30F0               	movlw	240
  5824  0D1C  00F0               	movwf	??_lcd_read
  5825  0D1D  0870               	movf	??_lcd_read,w
  5826  0D1E  1683               	bsf	3,5	;RP0=1, select bank1
  5827  0D1F  1303               	bcf	3,6	;RP1=0, select bank1
  5828  0D20  0486               	iorwf	6,f	;volatile
  5829  0D21                     l1878:
  5830                           
  5831                           ;./lcd.h: 181:     if (reg) PORTDbits.RD7 = PORTDbits.RD6 = 1; else PORTDbits.RD7 = 0, P
      +                          ORTDbits.RD6 = 1;
  5832  0D21  0872               	movf	lcd_read@reg,w
  5833  0D22  1903               	btfsc	3,2
  5834  0D23  2D25               	goto	u2121
  5835  0D24  2D26               	goto	u2120
  5836  0D25                     u2121:
  5837  0D25  2D34               	goto	l90
  5838  0D26                     u2120:
  5839  0D26                     l1880:
  5840  0D26  1283               	bcf	3,5	;RP0=0, select bank0
  5841  0D27  1303               	bcf	3,6	;RP1=0, select bank0
  5842  0D28  1708               	bsf	8,6	;volatile
  5843  0D29  1B08               	btfsc	8,6	;volatile
  5844  0D2A  2D2C               	goto	u2131
  5845  0D2B  2D30               	goto	u2130
  5846  0D2C                     u2131:
  5847  0D2C  1283               	bcf	3,5	;RP0=0, select bank0
  5848  0D2D  1303               	bcf	3,6	;RP1=0, select bank0
  5849  0D2E  1788               	bsf	8,7	;volatile
  5850  0D2F  2D33               	goto	u2144
  5851  0D30                     u2130:
  5852  0D30  1283               	bcf	3,5	;RP0=0, select bank0
  5853  0D31  1303               	bcf	3,6	;RP1=0, select bank0
  5854  0D32  1388               	bcf	8,7	;volatile
  5855  0D33                     u2144:
  5856  0D33  2D38               	goto	l91
  5857  0D34                     l90:
  5858  0D34  1283               	bcf	3,5	;RP0=0, select bank0
  5859  0D35  1303               	bcf	3,6	;RP1=0, select bank0
  5860  0D36  1388               	bcf	8,7	;volatile
  5861  0D37  1708               	bsf	8,6	;volatile
  5862  0D38                     l91:
  5863                           
  5864                           ;./lcd.h: 182:     _delay((unsigned long)((1)*(20000000/4000000.0))); PORTDbits.RD5 = HI
      +                          GH; _delay((unsigned long)((1)*(20000000/4000000.0))); data = PORTB & 0xf0; _delay((unsi
      +                          gned long)((1)*(20000000/4000000.0))); PORTDbits.RD5 = LOW; _delay((unsigned long)((1)*(
      +                          20000000/4000000.0)));
  5865  0D38  2D39               	nop2	;2 cycle nop
  5866  0D39  2D3A               	nop2	;2 cycle nop
  5867  0D3A  0000               	nop
  5868  0D3B  1283               	bcf	3,5	;RP0=0, select bank0
  5869  0D3C  1303               	bcf	3,6	;RP1=0, select bank0
  5870  0D3D  1688               	bsf	8,5	;volatile
  5871  0D3E  2D3F               	nop2	;2 cycle nop
  5872  0D3F  2D40               	nop2	;2 cycle nop
  5873  0D40  0000               	nop
  5874  0D41                     l1882:
  5875  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  5876  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  5877  0D43  0806               	movf	6,w	;volatile
  5878  0D44  39F0               	andlw	240
  5879  0D45  00F0               	movwf	??_lcd_read
  5880  0D46  0870               	movf	??_lcd_read,w
  5881  0D47  00F3               	movwf	lcd_read@data
  5882  0D48                     l1884:
  5883  0D48  2D49               	nop2	;2 cycle nop
  5884  0D49  2D4A               	nop2	;2 cycle nop
  5885  0D4A  0000               	nop
  5886  0D4B                     l1886:
  5887  0D4B  1283               	bcf	3,5	;RP0=0, select bank0
  5888  0D4C  1303               	bcf	3,6	;RP1=0, select bank0
  5889  0D4D  1288               	bcf	8,5	;volatile
  5890  0D4E                     l1888:
  5891  0D4E  2D4F               	nop2	;2 cycle nop
  5892  0D4F  2D50               	nop2	;2 cycle nop
  5893  0D50  0000               	nop
  5894  0D51                     l1890:
  5895                           
  5896                           ;./lcd.h: 183:     _delay((unsigned long)((1)*(20000000/4000000.0))); PORTDbits.RD5 = HI
      +                          GH; _delay((unsigned long)((1)*(20000000/4000000.0))); data |= PORTB >> 4; _delay((unsig
      +                          ned long)((1)*(20000000/4000000.0))); PORTDbits.RD5 = LOW; _delay((unsigned long)((1)*(2
      +                          0000000/4000000.0)));
  5897  0D51  2D52               	nop2	;2 cycle nop
  5898  0D52  2D53               	nop2	;2 cycle nop
  5899  0D53  0000               	nop
  5900  0D54                     l1892:
  5901  0D54  1283               	bcf	3,5	;RP0=0, select bank0
  5902  0D55  1303               	bcf	3,6	;RP1=0, select bank0
  5903  0D56  1688               	bsf	8,5	;volatile
  5904  0D57                     l1894:
  5905  0D57  2D58               	nop2	;2 cycle nop
  5906  0D58  2D59               	nop2	;2 cycle nop
  5907  0D59  0000               	nop
  5908  0D5A                     l1896:
  5909  0D5A  1283               	bcf	3,5	;RP0=0, select bank0
  5910  0D5B  1303               	bcf	3,6	;RP1=0, select bank0
  5911  0D5C  0806               	movf	6,w	;volatile
  5912  0D5D  00F0               	movwf	??_lcd_read
  5913  0D5E  3004               	movlw	4
  5914  0D5F                     u2155:
  5915  0D5F  1003               	clrc
  5916  0D60  0CF0               	rrf	??_lcd_read,f
  5917  0D61  3EFF               	addlw	-1
  5918  0D62  1D03               	skipz
  5919  0D63  2D5F               	goto	u2155
  5920  0D64  0870               	movf	??_lcd_read,w
  5921  0D65  00F1               	movwf	??_lcd_read+1
  5922  0D66  0871               	movf	??_lcd_read+1,w
  5923  0D67  04F3               	iorwf	lcd_read@data,f
  5924  0D68                     l1898:
  5925  0D68  2D69               	nop2	;2 cycle nop
  5926  0D69  2D6A               	nop2	;2 cycle nop
  5927  0D6A  0000               	nop
  5928  0D6B                     l1900:
  5929  0D6B  1283               	bcf	3,5	;RP0=0, select bank0
  5930  0D6C  1303               	bcf	3,6	;RP1=0, select bank0
  5931  0D6D  1288               	bcf	8,5	;volatile
  5932  0D6E                     l1902:
  5933  0D6E  2D6F               	nop2	;2 cycle nop
  5934  0D6F  2D70               	nop2	;2 cycle nop
  5935  0D70  0000               	nop
  5936  0D71                     l1904:
  5937                           
  5938                           ;./lcd.h: 185:     return data;
  5939  0D71  0873               	movf	lcd_read@data,w
  5940  0D72                     l92:
  5941  0D72  0008               	return
  5942  0D73                     __end_of_lcd_read:
  5943                           
  5944                           	psect	text27
  5945  0AA7                     __ptext27:	
  5946 ;; *************** function ___wmul *****************
  5947 ;; Defined at:
  5948 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
  5949 ;; Parameters:    Size  Location     Type
  5950 ;;  multiplier      2    0[COMMON] unsigned int 
  5951 ;;  multiplicand    2    2[COMMON] unsigned int 
  5952 ;; Auto vars:     Size  Location     Type
  5953 ;;  product         2    4[COMMON] unsigned int 
  5954 ;; Return value:  Size  Location     Type
  5955 ;;                  2    0[COMMON] unsigned int 
  5956 ;; Registers used:
  5957 ;;		wreg, status,2, status,0
  5958 ;; Tracked objects:
  5959 ;;		On entry : 0/0
  5960 ;;		On exit  : 0/0
  5961 ;;		Unchanged: 0/0
  5962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5963 ;;      Params:         4       0       0       0       0
  5964 ;;      Locals:         2       0       0       0       0
  5965 ;;      Temps:          0       0       0       0       0
  5966 ;;      Totals:         6       0       0       0       0
  5967 ;;Total ram usage:        6 bytes
  5968 ;; Hardware stack levels used:    1
  5969 ;; This function calls:
  5970 ;;		Nothing
  5971 ;; This function is called by:
  5972 ;;		_main
  5973 ;; This function uses a non-reentrant model
  5974 ;;
  5975                           
  5976                           
  5977                           ;psect for function ___wmul
  5978  0AA7                     ___wmul:
  5979  0AA7                     l2550:	
  5980                           ;incstack = 0
  5981                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5982                           
  5983  0AA7  01F4               	clrf	___wmul@product
  5984  0AA8  01F5               	clrf	___wmul@product+1
  5985  0AA9                     l2552:
  5986  0AA9  1C70               	btfss	___wmul@multiplier,0
  5987  0AAA  2AAC               	goto	u3831
  5988  0AAB  2AAD               	goto	u3830
  5989  0AAC                     u3831:
  5990  0AAC  2AB3               	goto	l457
  5991  0AAD                     u3830:
  5992  0AAD                     l2554:
  5993  0AAD  0872               	movf	___wmul@multiplicand,w
  5994  0AAE  07F4               	addwf	___wmul@product,f
  5995  0AAF  1803               	skipnc
  5996  0AB0  0AF5               	incf	___wmul@product+1,f
  5997  0AB1  0873               	movf	___wmul@multiplicand+1,w
  5998  0AB2  07F5               	addwf	___wmul@product+1,f
  5999  0AB3                     l457:
  6000  0AB3  3001               	movlw	1
  6001  0AB4                     u3845:
  6002  0AB4  1003               	clrc
  6003  0AB5  0DF2               	rlf	___wmul@multiplicand,f
  6004  0AB6  0DF3               	rlf	___wmul@multiplicand+1,f
  6005  0AB7  3EFF               	addlw	-1
  6006  0AB8  1D03               	skipz
  6007  0AB9  2AB4               	goto	u3845
  6008  0ABA                     l2556:
  6009  0ABA  3001               	movlw	1
  6010  0ABB                     u3855:
  6011  0ABB  1003               	clrc
  6012  0ABC  0CF1               	rrf	___wmul@multiplier+1,f
  6013  0ABD  0CF0               	rrf	___wmul@multiplier,f
  6014  0ABE  3EFF               	addlw	-1
  6015  0ABF  1D03               	skipz
  6016  0AC0  2ABB               	goto	u3855
  6017  0AC1                     l2558:
  6018  0AC1  0870               	movf	___wmul@multiplier,w
  6019  0AC2  0471               	iorwf	___wmul@multiplier+1,w
  6020  0AC3  1D03               	btfss	3,2
  6021  0AC4  2AC6               	goto	u3861
  6022  0AC5  2AC7               	goto	u3860
  6023  0AC6                     u3861:
  6024  0AC6  2AA9               	goto	l2552
  6025  0AC7                     u3860:
  6026  0AC7                     l2560:
  6027  0AC7  0875               	movf	___wmul@product+1,w
  6028  0AC8  00F1               	movwf	?___wmul+1
  6029  0AC9  0874               	movf	___wmul@product,w
  6030  0ACA  00F0               	movwf	?___wmul
  6031  0ACB                     l459:
  6032  0ACB  0008               	return
  6033  0ACC                     __end_of___wmul:
  6034                           
  6035                           	psect	text28
  6036  0E32                     __ptext28:	
  6037 ;; *************** function ___awdiv *****************
  6038 ;; Defined at:
  6039 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\awdiv.c"
  6040 ;; Parameters:    Size  Location     Type
  6041 ;;  divisor         2    6[COMMON] int 
  6042 ;;  dividend        2    8[COMMON] int 
  6043 ;; Auto vars:     Size  Location     Type
  6044 ;;  quotient        2    2[BANK0 ] int 
  6045 ;;  sign            1    1[BANK0 ] unsigned char 
  6046 ;;  counter         1    0[BANK0 ] unsigned char 
  6047 ;; Return value:  Size  Location     Type
  6048 ;;                  2    6[COMMON] int 
  6049 ;; Registers used:
  6050 ;;		wreg, status,2, status,0
  6051 ;; Tracked objects:
  6052 ;;		On entry : 0/0
  6053 ;;		On exit  : 0/0
  6054 ;;		Unchanged: 0/0
  6055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6056 ;;      Params:         4       0       0       0       0
  6057 ;;      Locals:         0       4       0       0       0
  6058 ;;      Temps:          1       0       0       0       0
  6059 ;;      Totals:         5       4       0       0       0
  6060 ;;Total ram usage:        9 bytes
  6061 ;; Hardware stack levels used:    1
  6062 ;; This function calls:
  6063 ;;		Nothing
  6064 ;; This function is called by:
  6065 ;;		_main
  6066 ;; This function uses a non-reentrant model
  6067 ;;
  6068                           
  6069                           
  6070                           ;psect for function ___awdiv
  6071  0E32                     ___awdiv:
  6072  0E32                     l2564:	
  6073                           ;incstack = 0
  6074                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6075                           
  6076  0E32  1283               	bcf	3,5	;RP0=0, select bank0
  6077  0E33  1303               	bcf	3,6	;RP1=0, select bank0
  6078  0E34  01A1               	clrf	___awdiv@sign
  6079  0E35                     l2566:
  6080  0E35  1FF7               	btfss	___awdiv@divisor+1,7
  6081  0E36  2E38               	goto	u3871
  6082  0E37  2E39               	goto	u3870
  6083  0E38                     u3871:
  6084  0E38  2E40               	goto	l2572
  6085  0E39                     u3870:
  6086  0E39                     l2568:
  6087  0E39  09F6               	comf	___awdiv@divisor,f
  6088  0E3A  09F7               	comf	___awdiv@divisor+1,f
  6089  0E3B  0AF6               	incf	___awdiv@divisor,f
  6090  0E3C  1903               	skipnz
  6091  0E3D  0AF7               	incf	___awdiv@divisor+1,f
  6092  0E3E                     l2570:
  6093  0E3E  01A1               	clrf	___awdiv@sign
  6094  0E3F  0AA1               	incf	___awdiv@sign,f
  6095  0E40                     l2572:
  6096  0E40  1FF9               	btfss	___awdiv@dividend+1,7
  6097  0E41  2E43               	goto	u3881
  6098  0E42  2E44               	goto	u3880
  6099  0E43                     u3881:
  6100  0E43  2E4D               	goto	l2578
  6101  0E44                     u3880:
  6102  0E44                     l2574:
  6103  0E44  09F8               	comf	___awdiv@dividend,f
  6104  0E45  09F9               	comf	___awdiv@dividend+1,f
  6105  0E46  0AF8               	incf	___awdiv@dividend,f
  6106  0E47  1903               	skipnz
  6107  0E48  0AF9               	incf	___awdiv@dividend+1,f
  6108  0E49                     l2576:
  6109  0E49  3001               	movlw	1
  6110  0E4A  00FA               	movwf	??___awdiv
  6111  0E4B  087A               	movf	??___awdiv,w
  6112  0E4C  06A1               	xorwf	___awdiv@sign,f
  6113  0E4D                     l2578:
  6114  0E4D  01A2               	clrf	___awdiv@quotient
  6115  0E4E  01A3               	clrf	___awdiv@quotient+1
  6116  0E4F                     l2580:
  6117  0E4F  0876               	movf	___awdiv@divisor,w
  6118  0E50  0477               	iorwf	___awdiv@divisor+1,w
  6119  0E51  1903               	btfsc	3,2
  6120  0E52  2E54               	goto	u3891
  6121  0E53  2E55               	goto	u3890
  6122  0E54                     u3891:
  6123  0E54  2E8C               	goto	l2600
  6124  0E55                     u3890:
  6125  0E55                     l2582:
  6126  0E55  01A0               	clrf	___awdiv@counter
  6127  0E56  0AA0               	incf	___awdiv@counter,f
  6128  0E57  2E63               	goto	l2588
  6129  0E58                     l2584:
  6130  0E58  3001               	movlw	1
  6131  0E59                     u3905:
  6132  0E59  1003               	clrc
  6133  0E5A  0DF6               	rlf	___awdiv@divisor,f
  6134  0E5B  0DF7               	rlf	___awdiv@divisor+1,f
  6135  0E5C  3EFF               	addlw	-1
  6136  0E5D  1D03               	skipz
  6137  0E5E  2E59               	goto	u3905
  6138  0E5F                     l2586:
  6139  0E5F  3001               	movlw	1
  6140  0E60  00FA               	movwf	??___awdiv
  6141  0E61  087A               	movf	??___awdiv,w
  6142  0E62  07A0               	addwf	___awdiv@counter,f
  6143  0E63                     l2588:
  6144  0E63  1FF7               	btfss	___awdiv@divisor+1,7
  6145  0E64  2E66               	goto	u3911
  6146  0E65  2E67               	goto	u3910
  6147  0E66                     u3911:
  6148  0E66  2E58               	goto	l2584
  6149  0E67                     u3910:
  6150  0E67                     l2590:
  6151  0E67  3001               	movlw	1
  6152  0E68                     u3925:
  6153  0E68  1003               	clrc
  6154  0E69  0DA2               	rlf	___awdiv@quotient,f
  6155  0E6A  0DA3               	rlf	___awdiv@quotient+1,f
  6156  0E6B  3EFF               	addlw	-1
  6157  0E6C  1D03               	skipz
  6158  0E6D  2E68               	goto	u3925
  6159  0E6E  0877               	movf	___awdiv@divisor+1,w
  6160  0E6F  0279               	subwf	___awdiv@dividend+1,w
  6161  0E70  1D03               	skipz
  6162  0E71  2E74               	goto	u3935
  6163  0E72  0876               	movf	___awdiv@divisor,w
  6164  0E73  0278               	subwf	___awdiv@dividend,w
  6165  0E74                     u3935:
  6166  0E74  1C03               	skipc
  6167  0E75  2E77               	goto	u3931
  6168  0E76  2E78               	goto	u3930
  6169  0E77                     u3931:
  6170  0E77  2E7F               	goto	l2596
  6171  0E78                     u3930:
  6172  0E78                     l2592:
  6173  0E78  0876               	movf	___awdiv@divisor,w
  6174  0E79  02F8               	subwf	___awdiv@dividend,f
  6175  0E7A  0877               	movf	___awdiv@divisor+1,w
  6176  0E7B  1C03               	skipc
  6177  0E7C  03F9               	decf	___awdiv@dividend+1,f
  6178  0E7D  02F9               	subwf	___awdiv@dividend+1,f
  6179  0E7E                     l2594:
  6180  0E7E  1422               	bsf	___awdiv@quotient,0
  6181  0E7F                     l2596:
  6182  0E7F  3001               	movlw	1
  6183  0E80                     u3945:
  6184  0E80  1003               	clrc
  6185  0E81  0CF7               	rrf	___awdiv@divisor+1,f
  6186  0E82  0CF6               	rrf	___awdiv@divisor,f
  6187  0E83  3EFF               	addlw	-1
  6188  0E84  1D03               	skipz
  6189  0E85  2E80               	goto	u3945
  6190  0E86                     l2598:
  6191  0E86  3001               	movlw	1
  6192  0E87  02A0               	subwf	___awdiv@counter,f
  6193  0E88  1D03               	btfss	3,2
  6194  0E89  2E8B               	goto	u3951
  6195  0E8A  2E8C               	goto	u3950
  6196  0E8B                     u3951:
  6197  0E8B  2E67               	goto	l2590
  6198  0E8C                     u3950:
  6199  0E8C                     l2600:
  6200  0E8C  0821               	movf	___awdiv@sign,w
  6201  0E8D  1903               	btfsc	3,2
  6202  0E8E  2E90               	goto	u3961
  6203  0E8F  2E91               	goto	u3960
  6204  0E90                     u3961:
  6205  0E90  2E96               	goto	l2604
  6206  0E91                     u3960:
  6207  0E91                     l2602:
  6208  0E91  09A2               	comf	___awdiv@quotient,f
  6209  0E92  09A3               	comf	___awdiv@quotient+1,f
  6210  0E93  0AA2               	incf	___awdiv@quotient,f
  6211  0E94  1903               	skipnz
  6212  0E95  0AA3               	incf	___awdiv@quotient+1,f
  6213  0E96                     l2604:
  6214  0E96  0823               	movf	___awdiv@quotient+1,w
  6215  0E97  00F7               	movwf	?___awdiv+1
  6216  0E98  0822               	movf	___awdiv@quotient,w
  6217  0E99  00F6               	movwf	?___awdiv
  6218  0E9A                     l610:
  6219  0E9A  0008               	return
  6220  0E9B                     __end_of___awdiv:
  6221  007E                     btemp	set	126	;btemp
  6222  007E                     wtemp0	set	126
  6223                           
  6224                           	psect	config
  6225                           
  6226                           ;Config register CONFIG @ 0x2007
  6227                           ;	Oscillator Selection bits
  6228                           ;	FOSC = HS, HS oscillator
  6229                           ;	Watchdog Timer Enable bit
  6230                           ;	WDTE = OFF, WDT disabled
  6231                           ;	Power-up Timer Enable bit
  6232                           ;	PWRTE = OFF, PWRT disabled
  6233                           ;	Brown-out Reset Enable bit
  6234                           ;	BOREN = ON, BOR enabled
  6235                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  6236                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  6237                           ;	Data EEPROM Memory Code Protection bit
  6238                           ;	CPD = OFF, Data EEPROM code protection off
  6239                           ;	Flash Program Memory Write Enable bits
  6240                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  6241                           ;	In-Circuit Debugger Mode bit
  6242                           ;	DEBUG = 0x1, unprogrammed default
  6243                           ;	Flash Program Memory Code Protection bit
  6244                           ;	CP = OFF, Code protection off
  6245  2007                     	org	8199
  6246  2007  3F7A               	dw	16250

Data Sizes:
    Strings     32
    Constant    0
    Data        0
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     45      68
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    _doprnt$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMMON[1]), 

    _doprnt$1	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_2(CODE[6]), STR_1(CODE[5]), 

    _doprnt$0	PTR struct __prbuf size(1) Largest target is 3
		 -> sprintf@pb(COMMON[2]), 

    S860__prbuf$func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), 

    S860__prbuf$ptr	PTR unsigned char  size(1) Largest target is 17
		 -> lcd_write_float@s(BANK0[17]), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 17
		 -> lcd_write_float@s(BANK0[17]), 

    lcd_write_int@p	PTR unsigned char  size(1) Largest target is 12
		 -> lcd_write_int@s(BANK0[12]), 

    lcd_write_str@s	const PTR const unsigned char  size(2) Largest target is 17
		 -> STR_4(CODE[4]), STR_3(CODE[17]), lcd_write_float@s(BANK0[17]), lcd_write_int@s(BANK0[12]), 

    lcd_write_str@p	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_4(CODE[4]), STR_3(CODE[17]), lcd_write_float@s(BANK0[17]), lcd_write_int@s(BANK0[12]), 


Critical Paths under _main in COMMON

    _update_temp->___xxtofl
    _lcd_write_int->___lldiv
    _lcd_write_char->_lcd_shift_left
    _lcd_write_char->_lcd_shift_right
    _lcd_cursor_right->_lcd_shift_left
    _lcd_cursor_left->_lcd_shift_right
    ___fltol->___xxtofl
    ___fldiv->___xxtofl
    _lcd_set_cursor->_lcd_set_ddram_adr
    _lcd_set_cursor->_lcd_shift_left
    _lcd_set_cursor->_lcd_shift_right
    _lcd_shift_right->_lcd_cur_disp_shift
    _lcd_shift_left->_lcd_cur_disp_shift
    _lcd_cur_disp_shift->_lcd_send
    _lcd_set_ddram_adr->_lcd_send
    _lcd_init->_lcd_display_set
    _lcd_init->_lcd_function_set
    _lcd_function_set->_lcd_send
    _lcd_display_set->_lcd_send
    _lcd_clr_disp->_lcd_entry_mode
    _lcd_entry_mode->_lcd_send
    _lcd_wait->_lcd_read
    ___awdiv->___wmul

Critical Paths under _main in BANK0

    _main->_update_temp
    _update_temp->___fltol
    _lcd_write_int->_lcd_write_str
    _lcd_write_str->_lcd_write_char
    _lcd_backspace->_lcd_write_char
    _lcd_write_char->_lcd_shift_left
    _lcd_cursor_right->_lcd_shift_left
    _lcd_cursor_left->_lcd_shift_right
    ___fltol->___fldiv
    _lcd_set_cursor->_lcd_shift_left
    _lcd_init->_lcd_display_set
    _lcd_init->_lcd_function_set

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   38577
                                             40 BANK0      5     5      0
                            ___awdiv
                             ___wmul
                           _lcd_init
                     _lcd_set_cursor
                      _lcd_write_str
                           _pwm_init
                        _update_temp
 ---------------------------------------------------------------------------------
 (1) _update_temp                                          3     3      0   21809
                                             37 BANK0      3     3      0
                            ___fldiv
                            ___fltol
                           ___xxtofl
                      _lcd_backspace
                      _lcd_write_int
 ---------------------------------------------------------------------------------
 (2) _lcd_write_int                                       18    14      4    8984
                                             17 BANK0     18    14      4
                            ___lldiv
                            ___llmod
                     _lcd_write_char
                      _lcd_write_str
 ---------------------------------------------------------------------------------
 (3) _lcd_write_str                                        4     2      2    4240
                                             13 BANK0      4     2      2
                     _lcd_write_char
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     311
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) _lcd_backspace                                        6     6      0   10849
                                             13 BANK0      6     6      0
                    _lcd_cursor_left
                   _lcd_cursor_right
                     _lcd_entry_mode
                     _lcd_write_char
 ---------------------------------------------------------------------------------
 (4) _lcd_write_char                                      11    11      0    3824
                                              2 BANK0     11    11      0
                           _lcd_send
                     _lcd_shift_left
                    _lcd_shift_right
 ---------------------------------------------------------------------------------
 (3) _lcd_cursor_right                                     5     5      0    2879
                                              2 BANK0      5     5      0
                 _lcd_cur_disp_shift
                     _lcd_shift_left
 ---------------------------------------------------------------------------------
 (3) _lcd_cursor_left                                      2     2      0    2812
                                              1 BANK0      2     2      0
                 _lcd_cur_disp_shift
                    _lcd_shift_right
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     305
                                             26 BANK0     11     7      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1273
                                              0 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _pwm_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_set_cursor                                      21    20      1    4878
                                              2 BANK0     21    20      1
                  _lcd_set_ddram_adr
                     _lcd_shift_left
                    _lcd_shift_right
 ---------------------------------------------------------------------------------
 (5) _lcd_shift_right                                      2     2      0    1395
                                             13 COMMON     1     1      0
                                              0 BANK0      1     1      0
                 _lcd_cur_disp_shift
 ---------------------------------------------------------------------------------
 (5) _lcd_shift_left                                       3     3      0    1462
                                             13 COMMON     1     1      0
                                              0 BANK0      2     2      0
                 _lcd_cur_disp_shift
 ---------------------------------------------------------------------------------
 (6) _lcd_cur_disp_shift                                   5     4      1    1373
                                              8 COMMON     5     4      1
                           _lcd_send
 ---------------------------------------------------------------------------------
 (2) _lcd_set_ddram_adr                                    6     6      0     941
                                              8 COMMON     6     6      0
                           _lcd_send
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             7     6      1    5996
                                              1 BANK0      7     6      1
                       _lcd_clr_disp
                    _lcd_display_set
                     _lcd_entry_mode
                   _lcd_function_set
 ---------------------------------------------------------------------------------
 (2) _lcd_function_set                                     7     5      2    1113
                                              8 COMMON     6     4      2
                                              0 BANK0      1     1      0
                           _lcd_send
 ---------------------------------------------------------------------------------
 (2) _lcd_display_set                                      7     5      2    1243
                                              8 COMMON     6     4      2
                                              0 BANK0      1     1      0
                           _lcd_send
 ---------------------------------------------------------------------------------
 (2) _lcd_clr_disp                                         0     0      0    2185
                     _lcd_entry_mode
                           _lcd_send
                           _lcd_wait
 ---------------------------------------------------------------------------------
 (3) _lcd_entry_mode                                       5     4      1    1265
                                              8 COMMON     5     4      1
                           _lcd_send
 ---------------------------------------------------------------------------------
 (7) _lcd_send                                             4     3      1     873
                                              4 COMMON     4     3      1
                           _lcd_wait
 ---------------------------------------------------------------------------------
 (8) _lcd_wait                                             0     0      0      47
                           _lcd_read
 ---------------------------------------------------------------------------------
 (9) _lcd_read                                             4     4      0      47
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     700
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     908
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
     ___wmul (ARG)
   ___wmul
   _lcd_init
     _lcd_clr_disp
       _lcd_entry_mode
         _lcd_send
           _lcd_wait
             _lcd_read
       _lcd_send
         _lcd_wait
           _lcd_read
       _lcd_wait
         _lcd_read
     _lcd_display_set
       _lcd_send
         _lcd_wait
           _lcd_read
     _lcd_entry_mode
       _lcd_send
         _lcd_wait
           _lcd_read
     _lcd_function_set
       _lcd_send
         _lcd_wait
           _lcd_read
   _lcd_set_cursor
     _lcd_set_ddram_adr
       _lcd_send
         _lcd_wait
           _lcd_read
     _lcd_shift_left
       _lcd_cur_disp_shift
         _lcd_send
           _lcd_wait
             _lcd_read
     _lcd_shift_right
       _lcd_cur_disp_shift
         _lcd_send
           _lcd_wait
             _lcd_read
   _lcd_write_str
     _lcd_write_char
       _lcd_send
         _lcd_wait
           _lcd_read
       _lcd_shift_left
         _lcd_cur_disp_shift
           _lcd_send
             _lcd_wait
               _lcd_read
       _lcd_shift_right
         _lcd_cur_disp_shift
           _lcd_send
             _lcd_wait
               _lcd_read
   _pwm_init
   _update_temp
     ___fldiv
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _lcd_backspace
       _lcd_cursor_left
         _lcd_cur_disp_shift
           _lcd_send
             _lcd_wait
               _lcd_read
         _lcd_shift_right
           _lcd_cur_disp_shift
             _lcd_send
               _lcd_wait
                 _lcd_read
       _lcd_cursor_right
         _lcd_cur_disp_shift
           _lcd_send
             _lcd_wait
               _lcd_read
         _lcd_shift_left
           _lcd_cur_disp_shift
             _lcd_send
               _lcd_wait
                 _lcd_read
       _lcd_entry_mode
         _lcd_send
           _lcd_wait
             _lcd_read
       _lcd_write_char
         _lcd_send
           _lcd_wait
             _lcd_read
         _lcd_shift_left
           _lcd_cur_disp_shift
             _lcd_send
               _lcd_wait
                 _lcd_read
         _lcd_shift_right
           _lcd_cur_disp_shift
             _lcd_send
               _lcd_wait
                 _lcd_read
     _lcd_write_int
       ___lldiv
       ___llmod
       _lcd_write_char
         _lcd_send
           _lcd_wait
             _lcd_read
         _lcd_shift_left
           _lcd_cur_disp_shift
             _lcd_send
               _lcd_wait
                 _lcd_read
         _lcd_shift_right
           _lcd_cur_disp_shift
             _lcd_send
               _lcd_wait
                 _lcd_read
       _lcd_write_str
         _lcd_write_char
           _lcd_send
             _lcd_wait
               _lcd_read
           _lcd_shift_left
             _lcd_cur_disp_shift
               _lcd_send
                 _lcd_wait
                   _lcd_read
           _lcd_shift_right
             _lcd_cur_disp_shift
               _lcd_send
                 _lcd_wait
                   _lcd_read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      52       3        0.0%
BITBANK0            50      0       1       4        1.2%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2D      44       5       85.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      52      12        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Thu Jun 17 13:41:37 2021

             lcd_backspace@n 002F                  _update_temp 0095                 ___fldiv@aexp 0039  
               ___fldiv@bexp 0038                            pc 0002                 ___fldiv@sign 0031  
                         l90 0D34                           l91 0D38                           l92 0D72  
                         l85 0D84                           l86 0D88                           l87 0DCB  
                         l95 0AA6                 ___awdiv@sign 0021                           fsr 0004  
        ___wmul@multiplicand 0072            lcd_backspace@edge 0032            lcd_entry_mode@i_d 007C  
                        l101 0AF5                          l110 0C6D                          l104 0BB7  
                        l120 0BFB                          l107 0B20                          l124 0C26  
                        l300 0094                          l134 0141                          l135 01BC  
                        l160 0012                          l136 0184                          l250 0F08  
                        l173 037A                          l237 0D19                          l158 0004  
                        l166 0337                          l350 0A82                          l167 033B  
                        l360 05A5                          l610 0E9A                          l290 0B4E  
                        l259 0BEE                          l347 0122                          l268 0B81  
                        l284 0F83                          l276 0F3E                          l197 049D  
                        l365 05F4                          l457 0AB3                          l650 0FEA  
                        l459 0ACB                          l643 0FFF                          l653 0FFF  
                        l493 0E31                          l830 07E3                          l822 0761  
                        l806 066F                          l903 0240                          l808 07EF  
                        l904 024C                          l828 07D3                          l679 0CC1  
                        l890 01DF                          l892 0276                          l896 0224  
                        _RD0 0040                          _RD1 0041                          _PR2 0092  
                        fsr0 0004                          indf 0000                  lcd_read@reg 0072  
            ?_lcd_shift_left 0070                  lcd_send@reg 0077              ?_lcd_set_cursor 0022  
               ___fltol@exp1 0044        _lcd_set_ddram_adr$286 007B                         l2000 01B8  
                       l2002 0ACD                         l2010 0CCD                         l2004 0AD9  
                       l2020 0CFE                         l2012 0CD5                         l2102 0A83  
                       l2110 0C2A                         l2022 0D0B                         l2014 0CDC  
                       l2006 0CC5                         l2030 0EA7                         l2104 0A90  
                       l2112 0C62                         l2120 0C18                         l2024 0D15  
                       l2016 0CE9                         l2008 0CC6                         l2040 0EED  
                       l2032 0EC3                         l2106 0A98                         l2122 0C1B  
                       l2114 0BF0                         l2210 0613                         l2018 0CF4  
                       l2042 0EFA                         l2034 0ECA                         l2026 0E9E  
                       l2130 0F27                         l2050 0B36                         l2108 0B85  
                       l2116 0BF6                         l2300 072D                         l2220 062A  
                       l2212 061A                         l2204 0FDF                         l2044 0F04  
                       l2036 0ED8                         l2028 0E9F                         l2140 0F53  
                       l2132 0F2D                         l2124 0F0C                         l2060 0DDC  
                       l2052 0B3E                         l2118 0BFF                         l2310 0745  
                       l2302 0731                         l2230 0642                         l2222 062F  
                       l2214 0620                         l2206 0FEF                         l2038 0EE3  
                       l2150 0F7D                         l2142 0F5E                         l2134 0F31  
                       l2126 0F10                         l2070 0E0B                         l2062 0DDF  
                       l2054 0B4C                         l2046 0B21                         l2400 02A0  
                       l2320 0766                         l2312 0746                         l2304 0732  
                       l2240 0657                         l2232 0647                         l2224 0637  
                       l2216 0624                         l2208 0FF4                         l2144 0F64  
                       l2136 0F38                         l2128 0F1A                         l2072 0E19  
                       l2064 0DEC                         l2048 0B28                         l2160 002C  
                       l2152 0013                         l2410 02B2                         l2402 02A3  
                       l2322 076B                         l2330 079C                         l2314 074A  
                       l2306 073B                         l2250 0677                         l2242 065C  
                       l2234 064D                         l2226 0638                         l2218 0625  
                       l2146 0F70                         l2138 0F4D                         l2074 0E1A  
                       l2066 0DF0                         l2058 0DCC                         l2090 0C8A  
                       l2082 0C6E                         l2170 008B                         l2162 0030  
                       l2154 001C                         l2420 02CD                         l2412 02B5  
                       l2404 02A6                         l2340 07D2                         l2332 07A9  
                       l2324 0779                         l2316 075E                         l2308 0741  
                       l2260 0695                         l2252 0683                         l2244 0664  
                       l2236 0651                         l2228 063A                         l2180 0F9A  
                       l2148 0F76                         l2076 0E23                         l2068 0DF9  
                       l2092 0C9C                         l2084 0C76                         l2164 003B  
                       l2156 0022                         l2430 02DF                         l2422 02D0  
                       l2414 02B8                         l2406 02A9                         l2342 07D9  
                       l2334 07B7                         l2326 077D                         l2270 06C0  
                       l2254 0687                         l2246 0665                         l2238 0652  
                       l2190 0FBE                         l2182 0FAF                         l2174 0F84  
                       l2078 0E29                         l2094 0CAA                         l2086 0C79  
                       l2166 005C                         l2158 0026                         l2600 0E8C  
                       l2440 0312                         l2432 02EE                         l2424 02D6  
                       l2416 02C7                         l2408 02AF                         l2344 07DD  
                       l2336 07C6                         l2328 0796                         l2280 06E5  
                       l2272 06C8                         l2264 069E                         l2248 0667  
                       l2184 0FB0                         l2176 0F91                         l2360 01E7  
                       l2352 01BE                         l2096 0CB3                         l2088 0C86  
                       l2168 0064                         l2520 0099                         l2602 0E91  
                       l2450 0333                         l2442 031C                         l2434 02FE  
                       l2426 02D9                         l2418 02CA                         l2346 07DF  
                       l2338 07CA                         l2290 0710                         l2282 06E6  
                       l2274 06CA                         l2266 06B0                         l2258 0690  
                       l2186 0FB8                         l2370 0209                         l2354 01C3  
                       l2098 0CB9                         l2530 00EE                         l2522 00A3  
                       l2604 0E96                         l1900 0D6B                         l2444 0327  
                       l2436 0306                         l2428 02DC                         l2460 0384  
                       l2452 033F                         l2540 0A6E                         l2276 06CF  
                       l2284 06EF                         l2292 0714                         l2268 06B8  
                       l2196 0FC6                         l2188 0FBA                         l2380 023A  
                       l2372 020D                         l2364 01F0                         l2356 01C7  
                       l2532 00F8                         l2524 00A7                         l2550 0AA7  
                       l1902 0D6E                         l1910 0007                         l2446 032A  
                       l2438 030B                         l2470 03A5                         l2462 0388  
                       l2454 0362                         l2542 0A72                         l2294 071A  
                       l2286 0701                         l2278 06E1                         l2198 0FD8  
                       l2390 026D                         l2382 0244                         l2374 021B  
                       l2366 01F5                         l2358 01D7                         l2534 00FE  
                       l2526 00AF                         l2518 0095                         l2710 049E  
                       l2560 0AC7                         l2552 0AA9                         l1904 0D71  
                       l1920 0D9D                         l1912 0D74                         l2448 032E  
                       l2480 0419                         l2472 03CF                         l2464 038F  
                       l2456 0373                         l2544 0A77                         l2296 0722  
                       l2288 0702                         l2392 026E                         l2384 024E  
                       l2376 022B                         l2368 0202                         l2536 010E  
                       l2528 00B3                         l2720 04B7                         l2712 04A1  
                       l2570 0E3E                         l2554 0AAD                         l1930 0DBD  
                       l1922 0DA0                         l1914 0D7F                         l2490 0464  
                       l2482 043F                         l2474 03E3                         l2466 0395  
                       l2458 0381                         l2546 0A7A                         l2298 0724  
                       l2386 0264                         l2378 0236                         l2538 0114  
                       l2730 04D0                         l2722 04BC                         l2714 04A3  
                       l2580 0E4F                         l2572 0E40                         l2564 0E32  
                       l2556 0ABA                         l1908 0003                         l1932 0DC0  
                       l1924 0DA3                         l1916 0D91                         l2396 027A  
                       l1940 0BBB                         l2492 046E                         l2484 0453  
                       l2476 03EA                         l2468 0398                         l2548 0A7E  
                       l2388 0269                         l2740 04FE                         l2732 04DB  
                       l2724 04BF                         l2716 04A7                         l2590 0E67  
                       l2582 0E55                         l2574 0E44                         l2566 0E35  
                       l2558 0AC1                         l1934 0DC3                         l1926 0DA6  
                       l1918 0D9A                         l2398 029C                         l1950 0BEA  
                       l1942 0BC1                         l2494 0476                         l2486 045A  
                       l2478 0408                         l2750 0548                         l2742 0503  
                       l2734 04E7                         l2726 04C0                         l2718 04B4  
                       l2592 0E78                         l2584 0E58                         l2576 0E49  
                       l2568 0E39                         l1880 0D26                         l1936 0DC6  
                       l1928 0DA9                         l1944 0BC8                         l1960 0B73  
                       l1952 0B52                         l2496 0494                         l2488 045E  
                       l2760 05A8                         l2752 054B                         l2744 0512  
                       l2736 04F2                         l2728 04C7                         l2594 0E7E  
                       l2586 0E5F                         l2578 0E4D                         l1890 0D51  
                       l1882 0D41                         l1874 0D1B                         l1938 0AF7  
                       l1946 0BD3                         l1962 0B7D                         l1954 0B53  
                       l2770 05E4                         l2754 056F                         l2762 05CA  
                       l2746 0515                         l2738 04FB                         l2596 0E7F  
                       l2588 0E63                         l1892 0D54                         l1884 0D48  
                       l1876 0D1B                         l1948 0BE0                         l1956 0B5B  
                       l1980 0188                         l1972 0153                         l1964 0126  
                       l2772 05F5                         l2764 05D7                         l2756 057E  
                       l2748 0539                         l2598 0E86                         l1894 0D57  
                       l1886 0D4B                         l1878 0D21                         l1958 0B66  
                       l1990 01A3                         l1982 018E                         l1974 015D  
                       l1966 012A                         l2774 05FA                         l2766 05DA  
                       l2758 0581                         l1896 0D5A                         l1888 0D4E  
                       l1992 01A7                         l1984 0194                         l1976 0163  
                       l1968 0138                         l2776 05FF                         l2768 05DF  
                       l1898 0D68                         l1994 01AB                         l1986 019A  
                       l1978 017D                         l1996 01AF                         l1988 019F  
                       l1998 01B4                         STR_1 0827                         STR_2 0821  
                       STR_3 0810                         STR_4 082C               ??_lcd_clr_disp 007D  
                       u2120 0D26                         u2200 0AFE                         u3000 0026  
                       u2121 0D25                         u3001 0025                         u2130 0D30  
                       u3010 0064                         u2131 0D2C                         u3011 0063  
                       u2220 0B0B                         u2300 0B7D                         u3020 008B  
                       u2221 0B09                         u2301 0B7C                         u3021 008A  
                       u2230 0B0C                         u3110 0FEF                         u3030 0F91  
                       u2310 012A                         u2215 0B00                         u3111 0FEE  
                       u3031 0F90                         u2311 0129                         u2144 0D33  
                       u2160 0012                         u3200 0695                         u3120 0FF4  
                       u3040 0FA8                         u2400 01AB                         u2161 0011  
                       u3201 0694                         u3121 0FF3                         u3105 0FE1  
                       u2401 01AA                         u2170 0D7F                         u2250 0BD3  
                       u3210 06CF                         u3130 0624                         u3050 0FBE  
                       u2410 01AF                         u2330 0152                         u2155 0D5F  
                       u2171 0D7E                         u2251 0BD2                         u3211 06CE  
                       u3131 0623                         u3051 0FBD                         u2411 01AE  
                       u2331 0151                         u2420 0ADF                         u2260 0BE0  
                       u3300 0731                         u3140 062A                         u3060 0FC5  
                       u2500 0D15                         u2340 0163                         u2324 0141  
                       u2421 0ADD                         u2245 0B0E                         u2261 0BDF  
                       u3301 0730                         u3141 0629                         u3061 0FC4  
                       u3045 0FA3                         u2501 0D14                         u2341 0162  
                       u2430 0AE0                         u2190 0AFD                         u2270 0BEA  
                       u3150 062F                         u2191 0AFB                         u2271 0BE9  
                       u3151 062E                         u2335 014E                         u2440 0AE7  
                       u2280 0B66                         u3400 07C6                         u3320 0745  
                       u3240 06E5                         u3160 0651                         u3080 0FD7  
                       u2520 0EC3                         u2360 017D                         u2600 0DF0  
                       u4200 05D7                         u2185 0DB4                         u2441 0AE5  
                       u2281 0B65                         u3401 07C5                         u3321 0744  
                       u3241 06E4                         u3225 06D1                         u3161 0650  
                       u3081 0FD6                         u2521 0EC2                         u2361 017C  
                       u2601 0DEF                         u4201 05D6                         u2450 0AE8  
                       u2290 0B73                         u3410 07DD                         u3330 074A  
                       u3170 0657                         u3090 0FDE                         u2530 0EE3  
                       u2514 0EB7                         u2370 0188                         u2354 0171  
                       u4210 05F4                         u2291 0B72                         u3411 07DC  
                       u3331 0749                         u3315 0734                         u3235 06DA  
                       u3171 0656                         u3091 0FDD                         u3075 0FC7  
                       u2531 0EE2                         u2371 0187                         u4211 05F3  
                       u3340 075E                         u3260 0701                         u3180 065C  
                       u3500 023A                         u3420 01C3                         u2460 0CD5  
                       u2540 0EED                         u2380 018E                         u2620 0E0B  
                       u2700 0CB9                         u4220 060F                         u3405 07C2  
                       u3341 075D                         u3261 0700                         u3181 065B  
                       u3501 0239                         u3421 01C2                         u2461 0CD4  
                       u2541 0EEC                         u2525 0EBF                         u2381 018D  
                       u2365 0179                         u2621 0E0A                         u2701 0CB8  
                       u4221 060E                         u4205 05D3                         u3350 0765  
                       u3270 071A                         u3190 0677                         u3510 0240  
                       u3430 01C7                         u2470 0CF4                         u2550 0EFA  
                       u2390 019A                         u3351 0764                         u3271 0719  
                       u3255 06E8                         u3191 0676                         u3511 023F  
                       u3431 01C6                         u2471 0CF3                         u2551 0EF9  
                       u2391 0199                         u2615 0DF2                         u2720 0B8B  
                       u2800 0C30                         u3600 032E                         u3360 076B  
                       u3280 0722                         u3520 0244                         u3440 01E7  
                       u2480 0CFE                         u2560 0F04                         u2640 0E29  
                       u2721 0B89                         u2801 0C2E                         u3601 032D  
                       u3361 076A                         u3281 0721                         u3265 06FD  
                       u3521 0243                         u3441 01E6                         u2481 0CFD  
                       u2561 0F03                         u2641 0E28                         u2625 0E07  
                       u2730 0B8C                         u2810 0C31                         u3370 077D  
                       u3530 0259                         u2490 0D0B                         u2650 0C76  
                       u2570 0B4C                         u4170 0512                         u2715 0A98  
                       u3371 077C                         u2491 0D0A                         u2635 0E1B  
                       u2651 0C75                         u2571 0B4B                         u4171 0511  
                       u2740 0B93                         u3620 0362                         u3380 078C  
                       u3540 0269                         u3460 0208                         u2580 0DDC  
                       u4180 0548                         u2741 0B91                         u3621 0361  
                       u3541 0268                         u3461 0207                         u2581 0DDB  
                       u4237 009F                         u4181 0547                         u2750 0B94  
                       u2830 0C3E                         u2910 0BF6                         u3710 0408  
                       u3614 034D                         u3390 07A9                         u3550 026D  
                       u2670 0C8A                         u4190 057E                         u2831 0C3C  
                       u2911 0BF5                         u3711 0407                         u3391 07A8  
                       u3295 0726                         u3551 026C                         u3535 0254  
                       u3455 01FA                         u2671 0C89                         u4247 011C  
                       u4191 057D                         u4175 050E                         u2904 0C6D  
                       u2840 0C3F                         u3560 0288                         u2920 0C18  
                       u3704 03F8                         u3640 0381                         u3480 022A  
                       u2680 0C9C                         u2825 0C33                         u4257 02C0  
                       u3561 0286                         u2921 0C17                         u3641 0380  
                       u3625 035E                         u3385 0787                         u3481 0229  
                       u2681 0C9B                         u2665 0C7B                         u4185 0544  
                       u2770 0BA1                         u3570 0289                         u3730 043F  
                       u3650 0395                         u3634 0372                         u2930 0F10  
                       u3810 00B3                         u2771 0B9F                         u4267 02E7  
                       u3731 043E                         u3715 0404                         u3651 0394  
                       u3395 07A5                         u3475 021C                         u2931 0F0F  
                       u2595 0DE1                         u3811 00B2                         u4195 057A  
                       u2780 0BA2                         u2860 0C4C                         u3580 0292  
                       u3740 046E                         u3724 0418                         u3660 039E  
                       u3820 00F8                         u2765 0B96                         u2861 0C4A  
                       u4277 0322                         u3581 0290                         u2925 0C14  
                       u3741 046D                         u3661 039C                         u2685 0C98  
                       u3821 00F7                         u3910 0E67                         u3830 0AAD  
                       u2870 0C4D                         u3590 0293                         u3670 039F  
                       u2950 0F31                         u3911 0E66                         u3831 0AAC  
                       u2855 0C41                         u3735 043B                         u3495 022F  
                       u2951 0F30                         u2695 0CAB                         u3760 0494  
                       u2960 0F5E                         u2944 0F19                         u3905 0E59  
                       u3761 0493                         u2961 0F5D                         u3825 00F4  
                       u3930 0E78                         u2890 0C6A                         u3754 0484  
                       u3690 03CF                         u2970 0F64                         u3931 0E77  
                       u2795 0BA4                         u2891 0C66                         u3691 03CE  
                       u2971 0F63                         u3860 0AC7                         u2980 0F76  
                       u3925 0E68                         u3861 0AC6                         u3845 0AB4  
                       u2885 0C4F                         u3765 0490                         u3685 03A9  
                       u2981 0F75                         u3950 0E8C                         u3870 0E39  
                       u2990 0017                         u3951 0E8B                         u3935 0E74  
                       u3871 0E38                         u3855 0ABB                         u3695 03CB  
                       u3960 0E91                         u3880 0E44                         u3961 0E90  
                       u3945 0E80                         u3881 0E43                         u3890 0E55  
                       u3891 0E54                         _TMR2 0011       __end_of_lcd_write_char 01BD  
                       _main 049E              ??_lcd_backspace 002D                         btemp 007E  
               lcd_read@data 0073                         start 0000               ?_lcd_write_int 0031  
             ?_lcd_write_str 002D              ___fldiv@new_exp 0032             lcd_cursor_left@n 0022  
               lcd_send@data 0074             ?_lcd_shift_right 0070                ___fltol@sign1 0043  
                      ?_main 0070              __end_of___fldiv 07F0              __end_of___awdiv 0E9B  
            __end_of___fltol 1000              __end_of___lldiv 0E32              ___awdiv@divisor 0076  
            __end_of___llmod 0CC2                        _T2CON 0012              ___awdiv@counter 0020  
                      _PORTA 0005                        _PORTB 0006                        _PORTC 0007  
                      _PORTD 0008                        _PORTE 0009                        _TRISA 0085  
                      _TRISB 0086                        _TRISC 0087                        _TRISD 0088  
                      _TRISE 0089   __end_of_lcd_cur_disp_shift 0B21                        main@i 0049  
                      pclath 000A              ?_lcd_write_char 0070                        status 0003  
                      wtemp0 007E              __initialization 07F0                 __end_of_main 0613  
          lcd_cursor_right@n 0026                       ??_main 0048                       _ADCON0 001F  
                     _ADCON1 009F             ___llmod@dividend 0074                       _ADRESH 001E  
                     _ADRESL 009E                       _CCPR1L 0015             ___awdiv@dividend 0078  
          lcd_function_set@f 0079            lcd_function_set@n 0078              ??_lcd_write_int 0035  
            ??_lcd_write_str 007E             __end_of___xxtofl 0277            lcd_write_int@F995 004D  
           __end_of_lcd_init 033C             __end_of_lcd_read 0D73             __end_of_lcd_send 0DCC  
           __end_of_lcd_wait 0013                       ___wmul 0AA7                    ??___fldiv 0028  
                  ??___awdiv 007A                    ??___fltol 003E                    ??___lldiv 0078  
                  ??___llmod 0078         __end_of_lcd_clr_disp 0AA7             ___awdiv@quotient 0022  
           ??_lcd_entry_mode 0079             __end_of_pwm_init 0A83     __size_of_lcd_display_set 0036  
               ___xxtofl@arg 007A                 ___xxtofl@exp 0079                 ___xxtofl@val 0070  
    __end_of__initialization 07FC            _lcd_set_ddram_adr 0BEF    __size_of_lcd_cursor_right 006E  
                 ___fltol@f1 003A           ?_lcd_set_ddram_adr 0070    __size_of_lcd_function_set 0047  
             __pcstackCOMMON 0070                 ?_update_temp 0070          ??_lcd_set_ddram_adr 0078  
           ??_lcd_shift_left 007D             ??_lcd_set_cursor 0023               _OPTION_REGbits 0081  
  __end_of_lcd_set_ddram_adr 0C27                   __pbssBANK0 004D     __size_of_lcd_cursor_left 0058  
                 __pmaintext 049E                      ?___wmul 0070           lcd_function_set@dl 0020  
                  ?___xxtofl 0070             ??_lcd_write_char 0022                    ?_lcd_init 0021  
                  ?_lcd_read 0070                    ?_lcd_send 0074                    ?_lcd_wait 0070  
                 __stringtab 0800           lcd_write_char@data 0026            ??_lcd_display_set 007A  
         _lcd_cur_disp_shift 0AF6        __end_of_lcd_backspace 0F84        __size_of_lcd_clr_disp 0024  
                    ___fldiv 0613                      ___awdiv 0E32                      ___fltol 0F84  
                    ___lldiv 0DCC              __size_of___wmul 0025                      ___llmod 0C6E  
                  ?_pwm_init 0070          ?_lcd_cur_disp_shift 0078                      _lcd_RAM 031C  
                    __ptext1 0095                      __ptext2 0013                      __ptext3 0B21  
                    __ptext4 0C6E                      __ptext5 0DCC                      __ptext6 0F09  
                    __ptext7 0123                      __ptext8 0E9B                      __ptext9 0CC2  
                  _T2CONbits 0012     __size_of_lcd_shift_right 0033                   ??___xxtofl 0074  
                    clrloop0 0A67                   ??_lcd_init 0022                   ??_lcd_read 0070  
                 ??_lcd_send 0075         ??_lcd_cur_disp_shift 0079        lcd_cur_disp_shift@s_c 007C  
      lcd_cur_disp_shift@r_l 0078                   ??_lcd_wait 0074         end_of_initialization 07FC  
 __size_of_lcd_set_ddram_adr 0038             lcd_shift_right@n 0020                 _lcd_clr_disp 0A83  
               _lcd_init$303 0025             _lcd_cursor_right 0E9B                   _right_edge 005F  
            ___lldiv@divisor 0070              ___lldiv@counter 007D             _lcd_function_set 0C27  
                 ??_pwm_init 0070         __size_of_update_temp 008E            ??_lcd_cursor_left 0021  
                  _PORTDbits 0008                ___xxtofl@sign 0078                    _TRISCbits 0087  
                ___fldiv@grs 0034                  ___fldiv@rem 002D              lcd_entry_mode@s 0078  
                _CCP1CONbits 0017        __end_of_lcd_write_int 0095               lcd_write_int@n 0031  
             lcd_write_int@p 0042               lcd_write_int@s 0036        __end_of_lcd_write_str 0B4F  
             lcd_write_str@p 002F               lcd_write_str@s 002D               __end_of___wmul 0ACC  
              __pbitbssBANK0 0318          start_initialization 07F0            ??_lcd_shift_right 007D  
         _lcd_set_cursor$310 002E           _lcd_set_cursor$311 0030           _lcd_set_cursor$312 0032  
         _lcd_set_cursor$313 0034           _lcd_set_cursor$308 002A           _lcd_set_cursor$309 002C  
            ___llmod@divisor 0070              ___llmod@counter 0079               _entry_mode_i_d 031A  
                   ??___wmul 0074                    ___fldiv@a 0020                    ___fldiv@b 0024  
                  ___latbits 0002                __pcstackBANK0 0020              _lcd_display_set 0B82  
          __size_of___xxtofl 00BA                 _entry_mode_s 0319            __size_of_lcd_init 00C5  
          __size_of_lcd_read 0059            __size_of_lcd_send 0059            __size_of_lcd_wait 0010  
    __size_of_lcd_entry_mode 002A                     ?___fldiv 0020                     ?___awdiv 0076  
                   ?___fltol 003A                     ?___lldiv 0070                     ?___llmod 0070  
                  _lcd_lines 031B                    __pstrings 0800            __size_of_pwm_init 0015  
   __end_of_lcd_cursor_right 0F09                    _left_edge 0060             lcd_display_set@b 0079  
           lcd_display_set@c 0078             lcd_display_set@d 0020     __end_of_lcd_function_set 0C6E  
                  _last_temp 0059      __size_of_lcd_shift_left 0037      __size_of_lcd_set_cursor 0162  
             ___wmul@product 0074              lcd_shift_left@n 0020                    clear_ram0 0A66  
            _lcd_cursor_left 0CC2      __end_of_lcd_display_set 0BB8                   _ADCON0bits 001F  
                __stringbase 080F                    main@i_417 004B            ___wmul@multiplier 0070  
                  lcd_init@f 0021                    lcd_init@n 0027           lcd_shift_left@edge 0021  
     __size_of_lcd_backspace 007B  __size_of_lcd_cur_disp_shift 002B      __size_of_lcd_write_char 009A  
              ??_update_temp 0045             __size_of___fldiv 01DD             __size_of___awdiv 0069  
           __size_of___fltol 007C             __size_of___lldiv 0066             __size_of___llmod 0054  
         __end_of__stringtab 0810              _lcd_shift_right 0B4F                     ___xxtofl 01BD  
          _lcd_backspace$340 0030                     __ptext10 01BD                     __ptext11 0F84  
                   __ptext20 0C27                     __ptext12 0613                     __ptext21 0B82  
                   __ptext13 0A6E                     __ptext22 0A83                     __ptext14 033C  
                   __ptext23 0ACC                     __ptext15 0B4F                     __ptext24 0D73  
                   __ptext16 0BB8                     __ptext25 0003                     __ptext17 0AF6  
                   __ptext26 0D1A                     __ptext18 0BEF                     __ptext27 0AA7  
                   __ptext19 0277                     __ptext28 0E32                     _lcd_init 0277  
                   _lcd_read 0D1A                     _lcd_send 0D73                     _lcd_wait 0003  
    __end_of_lcd_cursor_left 0D1A                __size_of_main 0175               _lcd_entry_mode 0ACC  
         _lcd_write_char$291 0027           _lcd_write_char$292 0029           _lcd_write_char$293 002B  
             _lcd_cursor_col 0062               _lcd_cursor_row 0318                _lcd_backspace 0F09  
                   _pwm_init 0A6E          __end_of_update_temp 0123             ?_lcd_display_set 0078  
     __size_of_lcd_write_int 0082       __size_of_lcd_write_str 002E               _lcd_shift_left 0BB8  
               _temperature1 005B               _lcd_set_cursor 033C            lcd_set_cursor@col 0022  
          lcd_set_cursor@row 0036       __end_of_lcd_entry_mode 0AF6             ___lldiv@dividend 0074  
             ?_lcd_backspace 0070                    stringcode 080A      __end_of_lcd_shift_right 0B82  
   lcd_set_ddram_adr@address 007D                _lcd_shift_pos 0061                  _temperature 005D  
           ___lldiv@quotient 0079            ?_lcd_cursor_right 0070                     stringdir 080A  
                   stringtab 0800            ?_lcd_function_set 0078           ??_lcd_cursor_right 0022  
     __end_of_lcd_shift_left 0BEF       __end_of_lcd_set_cursor 049E           ??_lcd_function_set 007A  
           ?_lcd_cursor_left 0070                ?_lcd_clr_disp 0070              ?_lcd_entry_mode 0078  
             _lcd_write_char 0123                _lcd_write_int 0013                _lcd_write_str 0B21  
